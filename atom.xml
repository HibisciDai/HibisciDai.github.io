<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>HibisciDai</title>
  
  <subtitle>Waiting/Patience/Trusting/Times All Takes</subtitle>
  <link href="http://hibiscidai.com/atom.xml" rel="self"/>
  
  <link href="http://hibiscidai.com/"/>
  <updated>2024-08-22T11:50:00.000Z</updated>
  <id>http://hibiscidai.com/</id>
  
  <author>
    <name>HibisciDai</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>内网穿透</title>
    <link href="http://hibiscidai.com/2024/08/22/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/"/>
    <id>http://hibiscidai.com/2024/08/22/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/</id>
    <published>2024-08-22T14:24:13.151Z</published>
    <updated>2024-08-22T11:50:00.000Z</updated>
    
    <content type="html"><![CDATA[<img src="/2024/08/22/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F.png" class="" title="内网穿透"><p>内网穿透</p><span id="more"></span><h1 id="内网穿透"><a href="#内网穿透" class="headerlink" title="内网穿透"></a>内网穿透</h1><p>内网穿透，简单地说就是内网的数据让外网可以获取，可以映射到公共网络上，这样就可以在公共网络上访问内网的数据。 内网是不能被外网直接访问的，只能通过一些中转技术，如DingTalk Design CLI、花生壳、Natap 等工具，让内网“假装”成外网，就是内网穿透。</p><h1 id="花生壳"><a href="#花生壳" class="headerlink" title="花生壳"></a>花生壳</h1><p>国内老牌内网映射品牌，有较成熟的<br>可以做域名映射等。</p><blockquote><p>工具使用简单，流量烧钱，成熟品牌，价格较贵。</p></blockquote><p><a href="https://hsk.oray.com/">花生壳官网</a><br><a href="https://console.hsk.oray.com/home">花生壳控制台</a></p><h1 id="FRP"><a href="#FRP" class="headerlink" title="FRP"></a>FRP</h1><p>frp 是一款高性能的反向代理应用，专注于内网穿透。它支持多种协议，包括 TCP、UDP、HTTP、HTTPS 等，并且具备 P2P 通信功能。使用 frp，您可以安全、便捷地将内网服务暴露到公网，通过拥有公网 IP 的节点进行中转。</p><p><a href="https://github.com/fatedier/frp">github.com/fatedier/frp</a><br><a href="https://github.com/fatedier/frp/releases">下载地址</a><br><a href="https://gofrp.org/zh-cn/">FRP说明文档</a></p><h1 id="樱花内网穿透-自用"><a href="#樱花内网穿透-自用" class="headerlink" title="樱花内网穿透-自用"></a>樱花内网穿透-自用</h1><p><a href="https://www.natfrp.com/">SAKURA FRP</a></p><p>目前发现比较便宜的二次开发FRP</p><h1 id="Padavan固件路由器内网穿透"><a href="#Padavan固件路由器内网穿透" class="headerlink" title="Padavan固件路由器内网穿透"></a>Padavan固件路由器内网穿透</h1><h2 id="使用花生壳内网版"><a href="#使用花生壳内网版" class="headerlink" title="使用花生壳内网版"></a>使用花生壳内网版</h2><img src="/2024/08/22/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/%E8%8A%B1%E7%94%9F%E5%A3%B3%E5%86%85%E7%BD%91%E7%89%88-1.png" class="" title="花生壳内网版-1"><p>点击开，需要等一会才可以读取到目前设备的SN。</p><p>然后去花生壳官网。</p><img src="/2024/08/22/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/%E8%8A%B1%E7%94%9F%E5%A3%B3%E5%86%85%E7%BD%91%E7%89%88-2.png" class="" title="花生壳内网版-2"><p>然后购买服务就额可以了。</p><p>有6块的新人券，但是速度和流量进行了限制，可以用作偶尔的登录页面管理，可以采用。</p><p>博主到此为止没有尝试（太贵了）。</p><h2 id="使用FRP"><a href="#使用FRP" class="headerlink" title="使用FRP"></a>使用FRP</h2><img src="/2024/08/22/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/FRP-1.png" class="" title="FRP-1"><p>目前发现版本BUG，指定版本不太好用。</p><p>可以用来当做服务器，但是使用第三方服务的时候不通。</p><p>默认参数文件位置：<code>/etc/storage/frp_script.sh</code></p><p>贴默认启动参数：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line">export PATH=&#x27;/etc/storage/bin:/tmp/script:/etc/storage/script:/opt/usr/sbin:/opt/usr/bin:/opt/sbin:/opt/bin:/usr/local/sbin:/usr/sbin:/usr/bin:/sbin:/bin&#x27;</span><br><span class="line">export LD_LIBRARY_PATH=/lib:/opt/lib</span><br><span class="line">killall frpc frps</span><br><span class="line">rm -f /dev/null ; mknod /dev/null c 1 3 ; chmod 666 /dev/null;</span><br><span class="line">mkdir -p /tmp/frp</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">启动frp功能后会运行以下脚本</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">frp项目地址教程: https://github.com/fatedier/frp/blob/master/README_zh.md</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">请自行修改 token 用于对客户端连接进行身份验证</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">IP查询： http://119.29.29.29/d?dn=github.com</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">cat &gt; &quot;/tmp/frp/myfrpc.ini&quot; &lt;&lt;-\EOF</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">==========客户端配置：==========</span></span><br><span class="line">[common]</span><br><span class="line">server_addr = xxx</span><br><span class="line">server_port = xxx</span><br><span class="line">token = xxx</span><br><span class="line">tls_enable = true</span><br><span class="line">pool_count = 1</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">log_file = /dev/null</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">log_level = info</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">log_max_days = 3</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">[web]</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">remote_port = 6000</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">服务端开放的端口</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">remote_port = 6000</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="built_in">type</span> = tcp</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">local_ip = xxx</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">local_port = 80</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">subdomain = <span class="built_in">test</span></span></span><br><span class="line"></span><br><span class="line">[***]</span><br><span class="line">type = http</span><br><span class="line">local_ip = xxx</span><br><span class="line">local_port = 80</span><br><span class="line">subdomain = test</span><br><span class="line">use_compression = true</span><br><span class="line"></span><br><span class="line">[nas] 我的nas</span><br><span class="line">type = tcp</span><br><span class="line">local_ip = xxx</span><br><span class="line">local_port = 5000</span><br><span class="line">remote_port = 5000</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">host_header_rewrite = 实际你内网访问的域名，可以供公网的域名不一致，如果一致可以不写</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">====================</span></span><br><span class="line">EOF</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">请手动配置【外部网络 (WAN) - 端口转发 (UPnP)】开启 WAN 外网端口</span></span><br><span class="line">cat &gt; &quot;/tmp/frp/myfrps.ini&quot; &lt;&lt;-\EOF</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">==========服务端配置：==========</span></span><br><span class="line">[common]</span><br><span class="line">bind_port = 7000</span><br><span class="line">dashboard_port = 7500</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">dashboard 用户名密码，默认都为 admin</span></span><br><span class="line">dashboard_user = admin</span><br><span class="line">dashboard_pwd = admin</span><br><span class="line">vhost_http_port = 88</span><br><span class="line">token =</span><br><span class="line">subdomain_host = frps.com</span><br><span class="line">max_pool_count = 50</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">log_file = /dev/null</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">log_level = info</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">log_max_days = 3</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">====================</span></span><br><span class="line">EOF</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">启动：</span></span><br><span class="line">frpc_enable=`nvram get frpc_enable`</span><br><span class="line">frpc_enable=$&#123;frpc_enable:-&quot;0&quot;&#125;</span><br><span class="line">frps_enable=`nvram get frps_enable`</span><br><span class="line">frps_enable=$&#123;frps_enable:-&quot;0&quot;&#125;</span><br><span class="line">if [ &quot;$frpc_enable&quot; = &quot;1&quot; ] ; then</span><br><span class="line">    frpc -c /tmp/frp/myfrpc.ini 2&gt;&amp;1 &amp;</span><br><span class="line">fi</span><br><span class="line">if [ &quot;$frps_enable&quot; = &quot;1&quot; ] ; then</span><br><span class="line">    frps -c /tmp/frp/myfrps.ini 2&gt;&amp;1 &amp;</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><h2 id="使用第三方FRP-樱花内网为例"><a href="#使用第三方FRP-樱花内网为例" class="headerlink" title="使用第三方FRP-樱花内网为例"></a>使用第三方FRP-樱花内网为例</h2><h3 id="开启路由器ssh登录"><a href="#开启路由器ssh登录" class="headerlink" title="开启路由器ssh登录"></a>开启路由器ssh登录</h3><img src="/2024/08/22/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/%E5%BC%80%E5%90%AF%E8%B7%AF%E7%94%B1%E5%99%A8ssh%E7%99%BB%E5%BD%95-1.png" class="" title="开启路由器ssh登录-1"><p>注意开启ssh后，设置路由器端口转发设置。</p><p>外部网络（WAN）→端口转发，注意打开端口。</p><h3 id="检查路由器处理器"><a href="#检查路由器处理器" class="headerlink" title="检查路由器处理器"></a>检查路由器处理器</h3><p>使用ssh登录到路由器后台</p><p>确认处理器架构</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname -m</span><br></pre></td></tr></table></figure><div class="table-container"><table><thead><tr><th style="text-align:center">输出</th><th style="text-align:center">架构</th></tr></thead><tbody><tr><td style="text-align:center">i386,i686</td><td style="text-align:center">i386</td></tr><tr><td style="text-align:center">x86_64</td><td style="text-align:center">amd64</td></tr><tr><td style="text-align:center">arm,armel</td><td style="text-align:center">arm_garbage</td></tr><tr><td style="text-align:center">armv71,armhf</td><td style="text-align:center">armv7</td></tr><tr><td style="text-align:center">aarch64,armv81</td><td style="text-align:center">arm64</td></tr><tr><td style="text-align:center">mips</td><td style="text-align:center">mips</td></tr><tr><td style="text-align:center">mips64</td><td style="text-align:center">mips64</td></tr></tbody></table></div><p>小米3路由器→mips</p><p>确认处理器字节序：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">一般来说只需要使用这条命令:</span></span><br><span class="line">echo -n I | hexdump -o | awk &#x27;&#123;print substr($2,6,1); exit&#125;&#x27;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">如果上面的命令报错，请尝试这条:</span></span><br><span class="line">echo -n I | od -to2 | awk &#x27;&#123;print substr($2,6,1); exit&#125;&#x27;</span><br><span class="line">````</span><br><span class="line"></span><br><span class="line">| 输出 | 架构 |</span><br><span class="line">| :-: | :-: |</span><br><span class="line">| 0 | mips/mips64 |</span><br><span class="line">| 1 | mipsle/mips64le |</span><br><span class="line"></span><br><span class="line">这一步指的是小端还是大端，可以直接查询路由器制造商或者百度。</span><br><span class="line"></span><br><span class="line">小米3路由器→小端</span><br><span class="line"></span><br><span class="line">所以最终确定的是`mipsle`</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">## 下载及上传适合系统的frp包</span></span></span><br><span class="line"></span><br><span class="line">前往[natfrp-download](https://www.natfrp.com/tunnel/download)下载</span><br><span class="line"></span><br><span class="line">{% asset_img 下载及上传适合系统的frp包-1.png 下载及上传适合系统的frp包-1 %}</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">注意Padavan系统不同于常规的linux，不能使用weget方式下载软件包，还需要打开文件传输软件进行上传。</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">Padavan的系统（或者说目前刷路由器，非软路由，可用的系统里）大部分目录都是重启即丢失的。</span></span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">frp添加到/etc/storage目录下，并且烧录，使其重启可用。</span></span><br><span class="line"></span><br><span class="line">更改下载后的文件名字变为`frpc`</span><br><span class="line"></span><br><span class="line">上传至`/etc/storge/bin`中</span><br><span class="line"></span><br><span class="line">注意修改文件权限为755</span><br><span class="line"></span><br><span class="line">在该文件夹下运行</span><br><span class="line"></span><br><span class="line">```shell</span><br><span class="line">frpc -v</span><br></pre></td></tr></table></figure><p>查看软件版本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0.51.0-sakura-8</span><br></pre></td></tr></table></figure><h3 id="FRP服务器配置"><a href="#FRP服务器配置" class="headerlink" title="FRP服务器配置"></a>FRP服务器配置</h3><img src="/2024/08/22/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/FRP%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%85%8D%E7%BD%AE-1.png" class="" title="FRP服务器配置-1"><p>本地ip填写要转发的设备，我选的是NAS做登录页面测试转发。</p><p>访问密码随机生成。</p><img src="/2024/08/22/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/FRP%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%85%8D%E7%BD%AE-2.png" class="" title="FRP服务器配置-2"><p>对于FRP的配置，如果是上游原生的FRP软件，会根据对应的版本进行生成配置。生成的配置需要手动去调配，就比如Padavan系统内置的FRP，需要手动配置。</p><p>樱花第三方的包有一键配置功能，例如点击某个隧道的配置。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">frpc -f wdnmdtoken666666:12345 &amp;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"> &amp;放在后台运行</span></span><br></pre></td></tr></table></figure><p>使用 启动参数 启动 frpc，只需要在启动参数中加上半角逗号 , 分隔的其他隧道 ID 即可，例如：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">frpc -f &lt;访问密钥&gt;:&lt;隧道ID 1&gt;[,隧道ID 2[,隧道ID 3...]]</span><br><span class="line">frpc -f wdnmdtoken666666:114514,114515,114516</span><br></pre></td></tr></table></figure><p>此时回到路由器的ssh，执行命令，开启frpc。</p><p>然后会提示隧道启动成功，这时候可以通过提供的域名端口进行访问测试。</p><blockquote><p>注意路由器报打开端口转发。</p></blockquote><p>对于已经建立并且成功的隧道，官网前方灰色按钮会变绿。</p><p>对于http链接，第一次访问还需要认证。</p><img src="/2024/08/22/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/FRP%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%85%8D%E7%BD%AE-3.png" class="" title="FRP服务器配置-3"><p>可以授权固定ip访问该隧道。</p><blockquote><p>到这一步已经跑通了所有流程。</p></blockquote><p>还可以运行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">frpc -w</span><br></pre></td></tr></table></figure><p>使用秘钥登录后可以直接进行</p><h3 id="路由配置"><a href="#路由配置" class="headerlink" title="路由配置"></a>路由配置</h3><h4 id="第三方配置"><a href="#第三方配置" class="headerlink" title="第三方配置"></a>第三方配置</h4><p>由于Padavan系统的特殊性，关键目录以外的目录均为 tmpfs ，可以理解为是把数据暂存在内存上。因此在/etc/storage目录里所做的修改，如果没有执行保存脚本，就并没有真正的写入 Rom 里，重启之后文件还会丢失。</p><p>完成上述测试后，确定没有问题，可以进行烧录。</p><p>选择“保存/etc/storage/内容到闪存”的提交。</p><p>重启路由器，检查文件是否还在</p><p>设置开机自启</p><p>高级设置→自定义设置→脚本→在路由器启动后执行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">启动樱花FRP</span></span><br><span class="line">/etc/storage/frpc -f xxx:xxx &amp;</span><br></pre></td></tr></table></figure><p>查询所有服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl list-units --all &quot;frpc@*&quot;</span><br></pre></td></tr></table></figure><blockquote><p>开机自启没有采用</p></blockquote><h4 id="使用自带FRP"><a href="#使用自带FRP" class="headerlink" title="使用自带FRP"></a>使用自带FRP</h4><p>检查版本 贴配置就行</p><p>最终Padavan0.6.0</p><h3 id="FRP客户端配置"><a href="#FRP客户端配置" class="headerlink" title="FRP客户端配置"></a>FRP客户端配置</h3><p>查看隧道日志：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">journalctl -u &lt;Unit名称&gt;</span><br><span class="line">journalctl -u frpc@wdnmdtoken666666:12345</span><br></pre></td></tr></table></figure><p>如果当前窗口无法显示所有日志，可以用 ↑、↓ 方向键滚动，输入大写的 G 跳转动到日志底部，输入 q 退出日志查看。</p><p>参考链接</p><p><a href="https://www.right.com.cn/forum/thread-5560332-1-1.html">如何正确配置Padavan老毛子frp的frp_script客户端</a><br><a href="https://sixdian.com/post/openwrt-padavan-frp/">OpenWrt、Padavan 下 frp 服务和客户端的配置</a><br><a href="https://sparkle.im/post/padavan%E8%87%AA%E5%B7%B1%E5%A2%9E%E5%8A%A0frp%E5%B9%B6%E6%8E%92%E9%99%A4%E6%95%85%E9%9A%9C">Padavan自己增加frp并排除故障</a></p><h1 id="Unbutu内网穿透"><a href="#Unbutu内网穿透" class="headerlink" title="Unbutu内网穿透"></a>Unbutu内网穿透</h1><h2 id="安装FRP客户端"><a href="#安装FRP客户端" class="headerlink" title="安装FRP客户端"></a>安装FRP客户端</h2><p>宝塔面板内置</p><h2 id="设置开机自启动"><a href="#设置开机自启动" class="headerlink" title="设置开机自启动"></a>设置开机自启动</h2><p>设置宝塔开机启动</p><p>设置开机自启：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">systemctl &lt;enable|disable&gt; &lt;Unit名称&gt;</span><br><span class="line">systemctl status &lt;Unit名称&gt;</span><br><span class="line"></span><br><span class="line">systemctl enable frpc@wdnmdtoken666666:12345</span><br><span class="line">systemctl status frpc@wdnmdtoken666666:12345</span><br><span class="line"></span><br><span class="line">systemctl enable frpc@tf7be1xpwaxpugip67ddu59eifs433fn:17294766</span><br></pre></td></tr></table></figure><h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><p>同上</p>]]></content>
    
    
    <summary type="html">内网穿透</summary>
    
    
    
    <category term="计算机网络" scheme="http://hibiscidai.com/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
    
    <category term="路由器" scheme="http://hibiscidai.com/tags/%E8%B7%AF%E7%94%B1%E5%99%A8/"/>
    
    <category term="Linux" scheme="http://hibiscidai.com/tags/Linux/"/>
    
    <category term="内网穿透" scheme="http://hibiscidai.com/tags/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>PyTorch-26H-7</title>
    <link href="http://hibiscidai.com/2024/08/20/PyTorch-26H-7/"/>
    <id>http://hibiscidai.com/2024/08/20/PyTorch-26H-7/</id>
    <published>2024-08-20T12:00:00.000Z</published>
    <updated>2024-08-22T14:17:05.272Z</updated>
    
    <content type="html"><![CDATA[<img src="/2024/08/20/PyTorch-26H-7/PyTorch-26H-7.png" class="" title="PyTorch-26H-7"><p>PyTorch-26H-7</p><span id="more"></span><h1 id="PyTorch-26H-7"><a href="#PyTorch-26H-7" class="headerlink" title="PyTorch-26H-7"></a>PyTorch-26H-7</h1><p>主页：<a href="https://www.freecodecamp.org/news/learn-pytorch-for-deep-learning-in-day/">https://www.freecodecamp.org/news/learn-pytorch-for-deep-learning-in-day/</a></p><p>youtub：<a href="https://youtu.be/V_xro1bcAuA">https://youtu.be/V_xro1bcAuA</a></p><p>github：<a href="https://github.com/mrdbourke/pytorch-deep-learning">https://github.com/mrdbourke/pytorch-deep-learning</a></p><p>Learn PyTorch for Deep Learning: Zero to Mastery book：<a href="https://www.learnpytorch.io/">https://www.learnpytorch.io/</a></p><p>PyTorch documentation：<a href="https://pytorch.org/docs/stable/index.html">https://pytorch.org/docs/stable/index.html</a></p>]]></content>
    
    
    <summary type="html">PyTorch-26H-7</summary>
    
    
    
    <category term="PyTorch" scheme="http://hibiscidai.com/categories/PyTorch/"/>
    
    
    <category term="学习笔记" scheme="http://hibiscidai.com/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term="PyTorch" scheme="http://hibiscidai.com/tags/PyTorch/"/>
    
  </entry>
  
  <entry>
    <title>PyTorch-26H-6</title>
    <link href="http://hibiscidai.com/2024/08/19/PyTorch-26H-6/"/>
    <id>http://hibiscidai.com/2024/08/19/PyTorch-26H-6/</id>
    <published>2024-08-19T12:00:00.000Z</published>
    <updated>2024-08-22T14:16:32.935Z</updated>
    
    <content type="html"><![CDATA[<img src="/2024/08/19/PyTorch-26H-6/PyTorch-26H-6.png" class="" title="PyTorch-26H-6"><p>PyTorch-26H-6</p><span id="more"></span><h1 id="PyTorch-26H-6"><a href="#PyTorch-26H-6" class="headerlink" title="PyTorch-26H-6"></a>PyTorch-26H-6</h1><p>主页：<a href="https://www.freecodecamp.org/news/learn-pytorch-for-deep-learning-in-day/">https://www.freecodecamp.org/news/learn-pytorch-for-deep-learning-in-day/</a></p><p>youtub：<a href="https://youtu.be/V_xro1bcAuA">https://youtu.be/V_xro1bcAuA</a></p><p>github：<a href="https://github.com/mrdbourke/pytorch-deep-learning">https://github.com/mrdbourke/pytorch-deep-learning</a></p><p>Learn PyTorch for Deep Learning: Zero to Mastery book：<a href="https://www.learnpytorch.io/">https://www.learnpytorch.io/</a></p><p>PyTorch documentation：<a href="https://pytorch.org/docs/stable/index.html">https://pytorch.org/docs/stable/index.html</a></p>]]></content>
    
    
    <summary type="html">PyTorch-26H-6</summary>
    
    
    
    <category term="PyTorch" scheme="http://hibiscidai.com/categories/PyTorch/"/>
    
    
    <category term="学习笔记" scheme="http://hibiscidai.com/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term="PyTorch" scheme="http://hibiscidai.com/tags/PyTorch/"/>
    
  </entry>
  
  <entry>
    <title>PyTorch-26H-5</title>
    <link href="http://hibiscidai.com/2024/08/18/PyTorch-26H-5/"/>
    <id>http://hibiscidai.com/2024/08/18/PyTorch-26H-5/</id>
    <published>2024-08-18T12:00:00.000Z</published>
    <updated>2024-08-22T14:16:00.887Z</updated>
    
    <content type="html"><![CDATA[<img src="/2024/08/18/PyTorch-26H-5/PyTorch-26H-5.png" class="" title="PyTorch-26H-5"><p>PyTorch-26H-5</p><span id="more"></span><h1 id="PyTorch-26H-5"><a href="#PyTorch-26H-5" class="headerlink" title="PyTorch-26H-5"></a>PyTorch-26H-5</h1><p>主页：<a href="https://www.freecodecamp.org/news/learn-pytorch-for-deep-learning-in-day/">https://www.freecodecamp.org/news/learn-pytorch-for-deep-learning-in-day/</a></p><p>youtub：<a href="https://youtu.be/V_xro1bcAuA">https://youtu.be/V_xro1bcAuA</a></p><p>github：<a href="https://github.com/mrdbourke/pytorch-deep-learning">https://github.com/mrdbourke/pytorch-deep-learning</a></p><p>Learn PyTorch for Deep Learning: Zero to Mastery book：<a href="https://www.learnpytorch.io/">https://www.learnpytorch.io/</a></p><p>PyTorch documentation：<a href="https://pytorch.org/docs/stable/index.html">https://pytorch.org/docs/stable/index.html</a></p>]]></content>
    
    
    <summary type="html">PyTorch-26H-5</summary>
    
    
    
    <category term="PyTorch" scheme="http://hibiscidai.com/categories/PyTorch/"/>
    
    
    <category term="学习笔记" scheme="http://hibiscidai.com/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term="PyTorch" scheme="http://hibiscidai.com/tags/PyTorch/"/>
    
  </entry>
  
  <entry>
    <title>PyTorch-26H-4</title>
    <link href="http://hibiscidai.com/2024/08/17/PyTorch-26H-4/"/>
    <id>http://hibiscidai.com/2024/08/17/PyTorch-26H-4/</id>
    <published>2024-08-17T12:00:00.000Z</published>
    <updated>2024-08-22T14:15:33.860Z</updated>
    
    <content type="html"><![CDATA[<img src="/2024/08/17/PyTorch-26H-4/PyTorch-26H-4.png" class="" title="PyTorch-26H-4"><p>PyTorch-26H-4</p><span id="more"></span><h1 id="PyTorch-26H-4"><a href="#PyTorch-26H-4" class="headerlink" title="PyTorch-26H-4"></a>PyTorch-26H-4</h1><p>主页：<a href="https://www.freecodecamp.org/news/learn-pytorch-for-deep-learning-in-day/">https://www.freecodecamp.org/news/learn-pytorch-for-deep-learning-in-day/</a></p><p>youtub：<a href="https://youtu.be/V_xro1bcAuA">https://youtu.be/V_xro1bcAuA</a></p><p>github：<a href="https://github.com/mrdbourke/pytorch-deep-learning">https://github.com/mrdbourke/pytorch-deep-learning</a></p><p>Learn PyTorch for Deep Learning: Zero to Mastery book：<a href="https://www.learnpytorch.io/">https://www.learnpytorch.io/</a></p><p>PyTorch documentation：<a href="https://pytorch.org/docs/stable/index.html">https://pytorch.org/docs/stable/index.html</a></p>]]></content>
    
    
    <summary type="html">PyTorch-26H-4</summary>
    
    
    
    <category term="PyTorch" scheme="http://hibiscidai.com/categories/PyTorch/"/>
    
    
    <category term="学习笔记" scheme="http://hibiscidai.com/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term="PyTorch" scheme="http://hibiscidai.com/tags/PyTorch/"/>
    
  </entry>
  
  <entry>
    <title>PyTorch-26H-3</title>
    <link href="http://hibiscidai.com/2024/08/16/PyTorch-26H-3/"/>
    <id>http://hibiscidai.com/2024/08/16/PyTorch-26H-3/</id>
    <published>2024-08-16T12:00:00.000Z</published>
    <updated>2024-08-22T14:11:32.271Z</updated>
    
    <content type="html"><![CDATA[<img src="/2024/08/16/PyTorch-26H-3/PyTorch-26H-3.png" class="" title="PyTorch-26H-3"><p>PyTorch-26H-3</p><span id="more"></span><h1 id="PyTorch-26H-3"><a href="#PyTorch-26H-3" class="headerlink" title="PyTorch-26H-3"></a>PyTorch-26H-3</h1><p>主页：<a href="https://www.freecodecamp.org/news/learn-pytorch-for-deep-learning-in-day/">https://www.freecodecamp.org/news/learn-pytorch-for-deep-learning-in-day/</a></p><p>youtub：<a href="https://youtu.be/V_xro1bcAuA">https://youtu.be/V_xro1bcAuA</a></p><p>github：<a href="https://github.com/mrdbourke/pytorch-deep-learning">https://github.com/mrdbourke/pytorch-deep-learning</a></p><p>Learn PyTorch for Deep Learning: Zero to Mastery book：<a href="https://www.learnpytorch.io/">https://www.learnpytorch.io/</a></p><p>PyTorch documentation：<a href="https://pytorch.org/docs/stable/index.html">https://pytorch.org/docs/stable/index.html</a></p>]]></content>
    
    
    <summary type="html">PyTorch-26H-3</summary>
    
    
    
    <category term="PyTorch" scheme="http://hibiscidai.com/categories/PyTorch/"/>
    
    
    <category term="学习笔记" scheme="http://hibiscidai.com/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term="PyTorch" scheme="http://hibiscidai.com/tags/PyTorch/"/>
    
  </entry>
  
  <entry>
    <title>PyTorch-26H-2</title>
    <link href="http://hibiscidai.com/2024/08/15/PyTorch-26H-2/"/>
    <id>http://hibiscidai.com/2024/08/15/PyTorch-26H-2/</id>
    <published>2024-08-15T12:00:00.000Z</published>
    <updated>2024-08-22T14:10:28.698Z</updated>
    
    <content type="html"><![CDATA[<img src="/2024/08/15/PyTorch-26H-2/PyTorch-26H-2.png" class="" title="PyTorch-26H-2"><p>PyTorch-26H-2</p><span id="more"></span><h1 id="PyTorch-26H-2"><a href="#PyTorch-26H-2" class="headerlink" title="PyTorch-26H-2"></a>PyTorch-26H-2</h1><p>主页：<a href="https://www.freecodecamp.org/news/learn-pytorch-for-deep-learning-in-day/">https://www.freecodecamp.org/news/learn-pytorch-for-deep-learning-in-day/</a></p><p>youtub：<a href="https://youtu.be/V_xro1bcAuA">https://youtu.be/V_xro1bcAuA</a></p><p>github：<a href="https://github.com/mrdbourke/pytorch-deep-learning">https://github.com/mrdbourke/pytorch-deep-learning</a></p><p>Learn PyTorch for Deep Learning: Zero to Mastery book：<a href="https://www.learnpytorch.io/">https://www.learnpytorch.io/</a></p><p>PyTorch documentation：<a href="https://pytorch.org/docs/stable/index.html">https://pytorch.org/docs/stable/index.html</a></p>]]></content>
    
    
    <summary type="html">PyTorch-26H-2</summary>
    
    
    
    <category term="PyTorch" scheme="http://hibiscidai.com/categories/PyTorch/"/>
    
    
    <category term="学习笔记" scheme="http://hibiscidai.com/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term="PyTorch" scheme="http://hibiscidai.com/tags/PyTorch/"/>
    
  </entry>
  
  <entry>
    <title>PyTorch-26H-1</title>
    <link href="http://hibiscidai.com/2024/08/14/PyTorch-26H-1/"/>
    <id>http://hibiscidai.com/2024/08/14/PyTorch-26H-1/</id>
    <published>2024-08-14T12:00:00.000Z</published>
    <updated>2024-08-19T09:16:59.000Z</updated>
    
    <content type="html"><![CDATA[<img src="/2024/08/14/PyTorch-26H-1/PyTorch-26H-1.png" class="" title="PyTorch-26H-1"><p>PyTorch-26H-1</p><span id="more"></span><h1 id="PyTorch-26H-1"><a href="#PyTorch-26H-1" class="headerlink" title="PyTorch-26H-1"></a>PyTorch-26H-1</h1><p>主页：<a href="https://www.freecodecamp.org/news/learn-pytorch-for-deep-learning-in-day/">https://www.freecodecamp.org/news/learn-pytorch-for-deep-learning-in-day/</a></p><p>youtub：<a href="https://youtu.be/V_xro1bcAuA">https://youtu.be/V_xro1bcAuA</a></p><p>github：<a href="https://github.com/mrdbourke/pytorch-deep-learning">https://github.com/mrdbourke/pytorch-deep-learning</a></p><p>Learn PyTorch for Deep Learning: Zero to Mastery book：<a href="https://www.learnpytorch.io/">https://www.learnpytorch.io/</a></p><p>PyTorch documentation：<a href="https://pytorch.org/docs/stable/index.html">https://pytorch.org/docs/stable/index.html</a></p><h1 id="Chapter-0-–-PyTorch-Fundamentals"><a href="#Chapter-0-–-PyTorch-Fundamentals" class="headerlink" title="Chapter 0 – PyTorch Fundamentals"></a>Chapter 0 – PyTorch Fundamentals</h1><h2 id="what-is-deep-learning"><a href="#what-is-deep-learning" class="headerlink" title="what is deep learning?"></a>what is deep learning?</h2><p>Machine learning is turning things (data) into numbers and finding patterns in those numbers.</p><p>Deep Learning ∈ Machine Learning ∈ Aritfical Intelligence</p><p>传统程序：输入+规则→输出<br>机器学些：输入+输出→规则</p><img src="/2024/08/14/PyTorch-26H-1/PyTorch-26H-1-1.png" class="" title="PyTorch-26H-1-1"><h2 id="Why-use-machine-deep-learning"><a href="#Why-use-machine-deep-learning" class="headerlink" title="Why use machine/deep learning?"></a>Why use machine/deep learning?</h2><p>对于复杂的问题，无法找到所有的规则。</p><h2 id="The-number-one-rule-of-ML"><a href="#The-number-one-rule-of-ML" class="headerlink" title="The number one rule of ML"></a>The number one rule of ML</h2><p>“If you can build a simple rule-based system that doesn’t require machine learning, do that.”</p><ul><li><p>A wise software engineer… (actually rule 1 of Google’s Machine Learning Handbook)</p></li><li><p>What deep learning is good for</p></li></ul><p>Problems with long lists of rules- when the traditional approach fails, machine learning/deep learning may help.<br>规则列表过长的问题——当传统方法失败时，机器学习/深度学习可能会有所帮助。</p><p>Continually changing environments- deep learning can adapt (learn’) to new scenarios.<br>不断变化的环境——深度学习可以适应（学习）新场景。</p><p>Discovering insights within large collections of data- can you imagine trying to hand-craft rules for what 101 different kinds of food look like?<br>在大量数据中发现见解——你能想象尝试手工制定 101 种不同食物的规则吗？</p><ul><li>What deep learning is not good for</li></ul><p>When you need explainability- -the patterns learned by a deep learning model are typically uninterpretable by a human.<br>当你需要可解释性时——深度学习模型学习到的模式通常无法被人类解释。</p><p>When the traditional approach is a better option一if you can accomplish what you need with a simple rule-based system.<br>当传统方法是更好的选择时——如果你可以使用简单的基于规则的系统完成所需的工作。</p><p>When errors are unacceptable一since the outputs of deep learning model aren’t always predictable.<br>当错误不可接受时——因为深度学习模型的输出并不总是可预测的。</p><p>When you don’t have much data一deep learning models usually require a fairly large amount of data to produce great results.<br>当你没有太多数据时——深度学习模型通常需要相当大量的数据才能产生很好的结果。</p><h2 id="Machine-learning-vs-deep-learning"><a href="#Machine-learning-vs-deep-learning" class="headerlink" title="Machine learning vs deep learning"></a>Machine learning vs deep learning</h2><img src="/2024/08/14/PyTorch-26H-1/PyTorch-26H-1-2.png" class="" title="PyTorch-26H-1-2"><ul><li>Machine learning</li></ul><p>适合处理结构化数据</p><p>常见算法：<br>Random forest 随机森林<br>Gradient boosted models 梯度提升模型<br>Naive Bayes 朴素贝叶斯<br>Nearest neighbour 最近邻<br>Support vector machine 支持向量机</p><ul><li>Deep learning</li></ul><p>适合处理非结构化数据</p><p>常见算法：<br>Neural networks 神经网络<br>Fully connected neural network 全连接神经网络<br>Convolutional neural network 卷积神经网络<br>Recurrent neuralnetwork 循环神经网络<br>Transformer</p><h2 id="Anatomy-of-neural-networks"><a href="#Anatomy-of-neural-networks" class="headerlink" title="Anatomy of neural networks"></a>Anatomy of neural networks</h2><img src="/2024/08/14/PyTorch-26H-1/PyTorch-26H-1-3.png" class="" title="PyTorch-26H-1-3"><p>数据→数字→神经网络→权重→输出</p><img src="/2024/08/14/PyTorch-26H-1/PyTorch-26H-1-4.png" class="" title="PyTorch-26H-1-4"><h2 id="Different-learning-paradigms"><a href="#Different-learning-paradigms" class="headerlink" title="Different learning paradigms"></a>Different learning paradigms</h2><img src="/2024/08/14/PyTorch-26H-1/PyTorch-26H-1-5.png" class="" title="PyTorch-26H-1-5"><p>监督学习：大量已知数据标注。</p><p>无监督学习：自动分析数据。</p><p>迁移学习：将学习到的模式嵌入到新的模型中。</p><p>强化学习reinforcement learning：奖励想要的结果。</p><img src="/2024/08/14/PyTorch-26H-1/PyTorch-26H-1-6.png" class="" title="PyTorch-26H-1-6"><h2 id="What-can-deep-learning-be-used-for"><a href="#What-can-deep-learning-be-used-for" class="headerlink" title="What can deep learning be used for?"></a>What can deep learning be used for?</h2><img src="/2024/08/14/PyTorch-26H-1/PyTorch-26H-1-7.png" class="" title="PyTorch-26H-1-7"><h2 id="What-is-why-PyTorch"><a href="#What-is-why-PyTorch" class="headerlink" title="What is/why PyTorch?"></a>What is/why PyTorch?</h2><h2 id="What-are-tensors"><a href="#What-are-tensors" class="headerlink" title="What are tensors?"></a>What are tensors?</h2><h2 id="Outline"><a href="#Outline" class="headerlink" title="Outline"></a>Outline</h2><h2 id="How-to-and-how-not-to-approach-this-course"><a href="#How-to-and-how-not-to-approach-this-course" class="headerlink" title="How to (and how not to) approach this course"></a>How to (and how not to) approach this course</h2><h2 id="Important-resources"><a href="#Important-resources" class="headerlink" title="Important resources"></a>Important resources</h2><h2 id="Getting-setup"><a href="#Getting-setup" class="headerlink" title="Getting setup"></a>Getting setup</h2><h2 id="Introduction-to-tensors"><a href="#Introduction-to-tensors" class="headerlink" title="Introduction to tensors"></a>Introduction to tensors</h2><h2 id="Creating-tensors"><a href="#Creating-tensors" class="headerlink" title="Creating tensors"></a>Creating tensors</h2><h2 id="Tensor-datatypes"><a href="#Tensor-datatypes" class="headerlink" title="Tensor datatypes"></a>Tensor datatypes</h2><h2 id="Tensor-attributes-information-about-tensors"><a href="#Tensor-attributes-information-about-tensors" class="headerlink" title="Tensor attributes (information about tensors)"></a>Tensor attributes (information about tensors)</h2><h2 id="Manipulating-tensors"><a href="#Manipulating-tensors" class="headerlink" title="Manipulating tensors"></a>Manipulating tensors</h2><h2 id="Matrix-multiplication"><a href="#Matrix-multiplication" class="headerlink" title="Matrix multiplication"></a>Matrix multiplication</h2><h2 id="Finding-the-min-max-mean-amp-sum"><a href="#Finding-the-min-max-mean-amp-sum" class="headerlink" title="Finding the min, max, mean &amp; sum"></a>Finding the min, max, mean &amp; sum</h2><h2 id="Reshaping-viewing-and-stacking"><a href="#Reshaping-viewing-and-stacking" class="headerlink" title="Reshaping, viewing and stacking"></a>Reshaping, viewing and stacking</h2><h2 id="Squeezing-unsqueezing-and-permuting"><a href="#Squeezing-unsqueezing-and-permuting" class="headerlink" title="Squeezing, unsqueezing and permuting"></a>Squeezing, unsqueezing and permuting</h2><h2 id="Selecting-data-indexing"><a href="#Selecting-data-indexing" class="headerlink" title="Selecting data (indexing)"></a>Selecting data (indexing)</h2><h2 id="PyTorch-and-NumPy"><a href="#PyTorch-and-NumPy" class="headerlink" title="PyTorch and NumPy"></a>PyTorch and NumPy</h2><h2 id="Reproducibility"><a href="#Reproducibility" class="headerlink" title="Reproducibility"></a>Reproducibility</h2><h2 id="Accessing-a-GPU"><a href="#Accessing-a-GPU" class="headerlink" title="Accessing a GPU"></a>Accessing a GPU</h2><h2 id="Setting-up-device-agnostic-code"><a href="#Setting-up-device-agnostic-code" class="headerlink" title="Setting up device agnostic code"></a>Setting up device agnostic code</h2>]]></content>
    
    
    <summary type="html">PyTorch-26H-1</summary>
    
    
    
    <category term="PyTorch" scheme="http://hibiscidai.com/categories/PyTorch/"/>
    
    
    <category term="学习笔记" scheme="http://hibiscidai.com/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term="PyTorch" scheme="http://hibiscidai.com/tags/PyTorch/"/>
    
  </entry>
  
  <entry>
    <title>Linux登录提示语</title>
    <link href="http://hibiscidai.com/2024/08/13/Linux%E7%99%BB%E5%BD%95%E6%8F%90%E7%A4%BA%E8%AF%AD/"/>
    <id>http://hibiscidai.com/2024/08/13/Linux%E7%99%BB%E5%BD%95%E6%8F%90%E7%A4%BA%E8%AF%AD/</id>
    <published>2024-08-13T02:00:00.000Z</published>
    <updated>2024-08-13T06:52:11.000Z</updated>
    
    <content type="html"><![CDATA[<img src="/2024/08/13/Linux%E7%99%BB%E5%BD%95%E6%8F%90%E7%A4%BA%E8%AF%AD/Linux%E7%99%BB%E5%BD%95%E6%8F%90%E7%A4%BA%E8%AF%AD.png" class="" title="Linux登录提示语"><p>Linux登录提示语</p><span id="more"></span><h1 id="Linux登录提示语"><a href="#Linux登录提示语" class="headerlink" title="Linux登录提示语"></a>Linux登录提示语</h1><p><code>/etc/issue</code> 本地（虚拟控制台KVM等）登录前提示语，支持转义字符</p><p><code>/etc/issue.net</code> 远程（telnet，ssh）登录前提示语，不支持转义字符</p><p><code>/etc/motd</code> 登录后提示语</p><p><code>/etc/issue</code> 和 <code>/etc/issue.net</code> ：这2个文件是你在登录之前显示的，区别一个负责本地登录前显示，一个负责网络登录前显示。也即 <code>/etc/issue</code> 是显示在控制台登录前（非图形界面），而 <code>/etc/issue.net</code> 是显示在 Telnet (SSH默认不开启）远程登录前，另外 <code>/etc/issue.net</code> 不支持转义字符。</p><p><code>/etc/motd</code> ：这个文件是在你登录之后显示的，不管你是 TTY 还是 PTS 登录，也不管是  Telnet 或 SSH 都显示这个文件里面的信息。</p><p>配置更改后，需要重启SSH服务。</p><ul><li><code>\d</code> : 插入目前日期。</li><li><code>\t</code> : 插入当前时间</li><li><code>\s</code> : 插入系统名称，操作系统名称</li><li><code>\r</code> : 插入操作系统版本号，例如1.1.9.</li><li><code>\v</code> : 插入操作系统的版本</li><li><code>\m</code> : 展示设备的架构标记符，例如i486</li><li><code>\n</code> : 插入设备主机名</li><li><code>\o</code> : 插入设备域名</li><li><code>\l</code> : 插入当前tty终端名称</li><li><code>\u</code> : 插入当前登录用户数</li><li><code>\U</code> : 插入当前登录用户数，以 “1 user” or “ users” 形式</li></ul><h1 id="Ubuntu-系统登录提示"><a href="#Ubuntu-系统登录提示" class="headerlink" title="Ubuntu 系统登录提示"></a>Ubuntu 系统登录提示</h1><p>一般的静态MOTD在<code>/etc/motd</code>中存放，而动态的MOTD在<code>/run/motd.dynamic</code>中存放。</p><p><code>update-motd.d</code>中的东西会存放在<code>motd.dynamic</code>中，然后<code>motd.dynamic</code>再通过<code>pam_motd</code>执行。</p><p>这里的<code>pam_motd</code>其实就是<code>pam_motd.so</code>用于执行<code>update-motd.d</code>文件夹中可执行文件的。</p><p>文件夹：<code>/etc/update-motd.d</code></p><p><code>00-header</code><br><code>10-help-text</code><br><code>50-landscape-sysinfo</code><br><code>50-motd-news</code><br><code>85-fvupd</code><br><code>90-updates-available</code><br><code>91-contract-ua-esm-status</code><br><code>91-release-upgrade</code><br><code>92-nattended-upgrades</code><br><code>95-hwe-eol</code><br><code>97-overlayroot</code><br><code>98-fsck-at-reboot</code><br><code>98-reboot-required</code></p><p>这几个脚本文件，前面的 数字决定了执行顺序，数字越小执行顺序越靠前。</p><p>修改文件内容即可</p><h1 id="命令行美化"><a href="#命令行美化" class="headerlink" title="命令行美化"></a>命令行美化</h1><ul><li><p>figlet: 将英文字母转换为ASCII字符画</p></li><li><p>jp2a: 将图片转换为ASCII字符画</p></li><li><p>asciitable 输出好看的ASCII表格</p></li><li><p><a href="https://motd.bakaya.ro/?ref=xavier.wang">图片转Linux Shell彩色文本</a></p></li><li><p><a href="https://rivers.chaitin.cn/tools/figlet">在线figlet</a></p></li></ul><h1 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h1><p>文件位置：<code>/etc/update-motd.d/xx.txt</code></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">  _  _  _        ____   _____     _     ____       _____  _   _  ___  ____         _  _  _ </span><br><span class="line"> | || || |      |  _ \ | ____|   / \   |  _ \     |_   _|| | | ||_ _|/ ___|       | || || |</span><br><span class="line"> | || || |      | |_) ||  _|    / _ \  | | | |      | |  | |_| | | | \___ \       | || || |</span><br><span class="line"> |_||_||_|      |  _ &lt; | |___  / ___ \ | |_| |      | |  |  _  | | |  ___) |      |_||_||_|</span><br><span class="line"> (_)(_)(_)      |_| \_\|_____|/_/   \_\|____/       |_|  |_| |_||___||____/       (_)(_)(_)</span><br><span class="line">                                                                                                                                                                 </span><br><span class="line">                                                                      </span><br><span class="line">！！！    不按要求操作，删除账号    ！！！</span><br><span class="line">！！！    If you do not follow the instructions, your account will be deleted    ！！！</span><br><span class="line"></span><br><span class="line">https://docs.qq.com/doc/xxxx</span><br><span class="line"></span><br><span class="line">  _  _  _        ____   _____     _     ____       _____  _   _  ___  ____         _  _  _ </span><br><span class="line"> | || || |      |  _ \ | ____|   / \   |  _ \     |_   _|| | | ||_ _|/ ___|       | || || |</span><br><span class="line"> | || || |      | |_) ||  _|    / _ \  | | | |      | |  | |_| | | | \___ \       | || || |</span><br><span class="line"> |_||_||_|      |  _ &lt; | |___  / ___ \ | |_| |      | |  |  _  | | |  ___) |      |_||_||_|</span><br><span class="line"> (_)(_)(_)      |_| \_\|_____|/_/   \_\|____/       |_|  |_| |_||___||____/       (_)(_)(_)</span><br><span class="line">                                                                                          </span><br><span class="line">···</span><br><span class="line"></span><br><span class="line">printf &quot;******************************************************************\n&quot;</span><br><span class="line">printf &quot;******************************************************************\n&quot;</span><br><span class="line">printf &quot; * 使用前必读-YOU MUST READ IT: https://docs.qq.com/doc/DRWNzTWNsSlRtY0lV\n&quot;</span><br><span class="line">printf &quot;******************************************************************\n&quot;</span><br><span class="line">printf &quot;******************************************************************\n&quot;</span><br></pre></td></tr></table></figure><p>修改<code>/etc/update-motd.d/92-unattended-upgrades</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/update-motd.d/xxx.txt</span><br></pre></td></tr></table></figure><p>查询效果：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">run-parts /etc/update-motd.d</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">Linux登录提示语</summary>
    
    
    
    <category term="Linux" scheme="http://hibiscidai.com/categories/Linux/"/>
    
    
    <category term="Linux" scheme="http://hibiscidai.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>drd-Digital_Rocks_Data</title>
    <link href="http://hibiscidai.com/2024/08/12/drd-Digital_Rocks_Data/"/>
    <id>http://hibiscidai.com/2024/08/12/drd-Digital_Rocks_Data/</id>
    <published>2024-08-12T07:00:00.000Z</published>
    <updated>2024-08-12T07:46:12.000Z</updated>
    
    <content type="html"><![CDATA[<img src="/2024/08/12/drd-Digital_Rocks_Data/drd-Digital_Rocks_Data.png" class="" title="drd-Digital_Rocks_Data"><p>drd-Digital_Rocks_Data</p><span id="more"></span><h1 id="drd-Digital-Rocks-Data"><a href="#drd-Digital-Rocks-Data" class="headerlink" title="drd-Digital_Rocks_Data"></a>drd-Digital_Rocks_Data</h1><p><a href="https://pypi.org/project/drd/">drd-pypi</a></p><p><a href="https://github.com/lukasmosser/digital_rocks_data">digital_rocks_data_github</a></p><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>Digital Rock Images are three-dimensional datasets of rocks and other porous media.<br>数字岩石图像是岩石和其他多孔介质的三维数据集。</p><p>These are typically acquired using three-dimensional imaging techniques such as Micro-Computer Tomography (MicroCT).<br>这些图像通常使用三维成像技术（例如微型计算机断层扫描 (MicroCT)）获取。</p><p>They represent a rich dataset that form a basis for characterization of physical processes involving porous media.<br>它们代表了丰富的数据集，为表征涉及多孔介质的物理过程奠定了基础。</p><p>Digital Rock Images are scattered throughout the web on various hosting sites such as the Digital Rocks Portal, Zenodo, or university specific sites. This library aims to make downloading these datasets easy through a python interface so they can be used in automated image processing workflows, reproducible research, or data science and machine learning worfklows.<br>数字岩石图像分散在网络上的各种托管网站上，例如 Digital Rocks Portal、Zenodo 或大学专用网站。该库旨在通过 Python 界面轻松下载这些数据集，以便它们可用于自动图像处理工作流程、可重复研究或数据科学和机器学习工作流程。</p><p>Furthermore, these images are associated with metadata about their spatial dimensions which should be considered when loading these image datasets.<br>The library therefore requires these metadata to be available and creates an xarray DataArray which can keep spatial scale information when loading an image dataset.<br>此外，这些图像与有关其空间维度的元数据相关联，在加载这些图像数据集时应考虑这些元数据。<br>因此，该库要求这些元数据可用，并创建一个 xarray DataArray，它可以在加载图像数据集时保留空间尺度信息。</p><p>Each dataset is linked in this library i.e. no hosting is done by the library itself.<br>每个数据集都链接到此库中，即库本身不进行任何托管。</p><p><a href="https://www.digitalrocksportal.org/">Digital Rocks Portal</a>：<br><a href="https://www.digitalrocksportal.org/projects/317">Eleven Sandstones Dataset</a></p><ul><li>Berea</li><li>Bandera Brown</li><li>Bandera Gray</li><li>Bentheimer</li><li>Berea Sister Gray</li><li>Berea Upper Gray</li><li>Buff Berea</li><li>Castle Gate</li><li>Kirby</li><li>Leopard</li><li>Parker</li></ul><p><a href="https://www.imperial.ac.uk/earth-science/research/research-groups/pore-scale-modelling/micro-ct-images-and-networks/">Imperial College London</a>：</p><ul><li>MicroCT Images of Sandstones and Carbonates 2015</li><li><a href="https://figshare.com/projects/micro-CT_Images_-_2009/2275">icroCT Images of Sandstones and Carbonates 2009</a></li></ul><h1 id="使用说明"><a href="#使用说明" class="headerlink" title="使用说明"></a>使用说明</h1><ul><li>安装使用</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install drd</span><br></pre></td></tr></table></figure><ul><li><code>plot_eleven_sandstones_dataset_example.py</code></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">Eleven Sandstones Plotting Example</span></span><br><span class="line"><span class="string">=========================</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">This example shows how we can load an image from the eleven sandstones dataset.</span></span><br><span class="line"><span class="string">这个例子展示了如何从十一块砂岩数据集中加载图像。</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">from</span> drd.datasets.eleven_sandstones <span class="keyword">import</span> load_eleven_sandstones</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line"><span class="comment"># %%</span></span><br><span class="line"><span class="comment"># Loading the Image</span></span><br><span class="line"><span class="comment"># ------------------------</span></span><br><span class="line"><span class="comment"># 我们将使用名为“load_eleven_sandstones”的实用函数来生成 xarray DataArray</span></span><br><span class="line"><span class="comment"># We will use one of the utility functions called `load_eleven_sandstones` to generate an xarray DataArray </span></span><br><span class="line"><span class="comment"># 它已经包含所有预先配置的空间轴信息和缩放比例。</span></span><br><span class="line"><span class="comment"># which already contains all the spatial axis information and scaling preconfigured.</span></span><br><span class="line"><span class="comment"># 这样，我们将根据空间坐标系对图像数据有一个适当的定义。</span></span><br><span class="line"><span class="comment"># This way we will have a proper definition of the image data in terms of a spatial coordinate system.</span></span><br><span class="line"></span><br><span class="line">img = load_eleven_sandstones(<span class="string">&quot;Berea&quot;</span>, <span class="string">&quot;Berea_2d25um_grayscale.raw&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 这是“代码块”的结尾（如果使用上述 IDE）。</span></span><br><span class="line"><span class="comment"># This is the end of the &#x27;code block&#x27; (if using an above IDE). All code within</span></span><br><span class="line"><span class="comment"># 此块可轻松一次性执行。</span></span><br><span class="line"><span class="comment"># this block can be easily executed all at once.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># %%</span></span><br><span class="line"><span class="comment"># 使用 xarray 绘制图像数据</span></span><br><span class="line"><span class="comment"># Plotting the Image Data using xarray</span></span><br><span class="line"><span class="comment"># ------------------------</span></span><br><span class="line"><span class="comment"># 我们将使用 xarray 的功能来汇总或选择我们的数据以绘制 z 维度的平均值。</span></span><br><span class="line"><span class="comment"># We will use xarray&#x27;s ability to summarize or select our data to plot an average over the z dimension.</span></span><br><span class="line"></span><br><span class="line">img.mean(dim=<span class="string">&#x27;z&#x27;</span>).plot()</span><br><span class="line">plt.tight_layout()</span><br><span class="line">plt.show()</span><br><span class="line"></span><br><span class="line"><span class="comment"># %%</span></span><br><span class="line"><span class="comment"># 我们可以清楚地看到我们如何首先从网络下载图像数据，然后计算微型 CT 图像数据集的平均值。</span></span><br><span class="line"><span class="comment"># We can clearly see how we first downloaded the image data from the web and subsequently compute an average over the micro-ct image dataset.</span></span><br></pre></td></tr></table></figure><ul><li><code>plot_icl_sandstones_carbonates_2009_example.py</code></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">Imperial College London Sandstones &amp; Carbonates 2009 Dataset</span></span><br><span class="line"><span class="string">=========================</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">This example shows how we can load an image from the Imperial College London Sandstones &amp; Carbonates 2009 dataset.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">from</span> drd.datasets.icl_sandstones_carbonates_2009 <span class="keyword">import</span> load_icl_sandstones_carbonates_2009</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line"><span class="comment"># %%</span></span><br><span class="line"><span class="comment"># Loading the Image</span></span><br><span class="line"><span class="comment"># ------------------------</span></span><br><span class="line"><span class="comment"># 我们将使用名为“load_icl_sandstones_carbonates_2009”的实用函数来生成 xarray DataArray</span></span><br><span class="line"><span class="comment"># We will use one of the utility functions called `load_icl_sandstones_carbonates_2009` to generate an xarray DataArray </span></span><br><span class="line"><span class="comment"># 它已经包含所有预先配置的空间轴信息和缩放比例。</span></span><br><span class="line"><span class="comment"># which already contains all the spatial axis information and scaling preconfigured.</span></span><br><span class="line"><span class="comment"># 这样，我们将根据空间坐标系对图像数据有一个适当的定义。</span></span><br><span class="line"><span class="comment"># This way we will have a proper definition of the image data in terms of a spatial coordinate system.</span></span><br><span class="line"></span><br><span class="line">img = load_icl_sandstones_carbonates_2009(<span class="string">&quot;Berea&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 这是“代码块”的结尾（如果使用上述 IDE）。</span></span><br><span class="line"><span class="comment"># This is the end of the &#x27;code block&#x27; (if using an above IDE). All code within</span></span><br><span class="line"><span class="comment"># 此块可轻松一次性执行。</span></span><br><span class="line"><span class="comment"># this block can be easily executed all at once.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># %%</span></span><br><span class="line"><span class="comment"># Plotting the Image Data using xarray</span></span><br><span class="line"><span class="comment"># ------------------------</span></span><br><span class="line"><span class="comment"># We will use xarray&#x27;s ability to summarize or select our data to plot an average over the z dimension.</span></span><br><span class="line"></span><br><span class="line">img.mean(dim=<span class="string">&#x27;z&#x27;</span>).plot()</span><br><span class="line">plt.tight_layout()</span><br><span class="line">plt.show()</span><br><span class="line"></span><br><span class="line"><span class="comment"># %%</span></span><br><span class="line"><span class="comment"># We can clearly see how we first downloaded the image data from the web and subsequently compute an average over the micro-ct image dataset.</span></span><br></pre></td></tr></table></figure><h1 id="数据集"><a href="#数据集" class="headerlink" title="数据集"></a>数据集</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br></pre></td><td class="code"><pre><span class="line">DATASET_METADATA = &#123;</span><br><span class="line">    <span class="string">&quot;Berea&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;Berea_2d25um_grayscale.raw&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;url&quot;</span>: <span class="string">&quot;https://www.digitalrocksportal.org/projects/317/images/223451/download/&quot;</span>,</span><br><span class="line">            <span class="string">&quot;voxel_length&quot;</span>: [<span class="number">2.25</span>, <span class="number">2.25</span>, <span class="number">2.25</span>],</span><br><span class="line">            <span class="string">&quot;metric_voxel_length_unit&quot;</span>:  <span class="number">1e-6</span>,</span><br><span class="line">            <span class="string">&quot;width&quot;</span>: <span class="number">1000</span>, </span><br><span class="line">            <span class="string">&quot;height&quot;</span>: <span class="number">1000</span>, </span><br><span class="line">            <span class="string">&quot;number_of_slices&quot;</span>: <span class="number">1000</span>,</span><br><span class="line">            <span class="string">&quot;byte_order&quot;</span>: <span class="string">&quot;little-endian&quot;</span>,</span><br><span class="line">            <span class="string">&quot;image_type&quot;</span>: np.uint8</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&quot;Berea_2d25um_grayscale_filtered.raw&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;url&quot;</span>: <span class="string">&quot;https://www.digitalrocksportal.org/projects/317/images/223452/download/&quot;</span>,</span><br><span class="line">            <span class="string">&quot;voxel_length&quot;</span>: [<span class="number">2.25</span>, <span class="number">2.25</span>, <span class="number">2.25</span>],</span><br><span class="line">            <span class="string">&quot;metric_voxel_length_unit&quot;</span>:  <span class="number">1e-6</span>,</span><br><span class="line">            <span class="string">&quot;width&quot;</span>: <span class="number">1000</span>, </span><br><span class="line">            <span class="string">&quot;height&quot;</span>: <span class="number">1000</span>, </span><br><span class="line">            <span class="string">&quot;number_of_slices&quot;</span>: <span class="number">1000</span>,</span><br><span class="line">            <span class="string">&quot;byte_order&quot;</span>: <span class="string">&quot;little-endian&quot;</span>,</span><br><span class="line">            <span class="string">&quot;image_type&quot;</span>: np.uint8</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&quot;Berea_2d25um_binary.raw&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;url&quot;</span>: <span class="string">&quot;https://www.digitalrocksportal.org/projects/317/images/223453/download/&quot;</span>,</span><br><span class="line">            <span class="string">&quot;voxel_length&quot;</span>: [<span class="number">2.25</span>, <span class="number">2.25</span>, <span class="number">2.25</span>],</span><br><span class="line">            <span class="string">&quot;metric_voxel_length_unit&quot;</span>: <span class="number">1e-6</span>,</span><br><span class="line">            <span class="string">&quot;width&quot;</span>: <span class="number">1000</span>, </span><br><span class="line">            <span class="string">&quot;height&quot;</span>: <span class="number">1000</span>, </span><br><span class="line">            <span class="string">&quot;number_of_slices&quot;</span>: <span class="number">1000</span>,</span><br><span class="line">            <span class="string">&quot;byte_order&quot;</span>: <span class="string">&quot;little-endian&quot;</span>,</span><br><span class="line">            <span class="string">&quot;image_type&quot;</span>: np.uint8</span><br><span class="line">        &#125;   </span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&quot;BanderaBrown&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;BanderaBrown_2d25um_grayscale.raw&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;url&quot;</span>: <span class="string">&quot;https://www.digitalrocksportal.org/projects/317/images/223448/download/&quot;</span>,</span><br><span class="line">            <span class="string">&quot;voxel_length&quot;</span>: [<span class="number">2.25</span>, <span class="number">2.25</span>, <span class="number">2.25</span>],</span><br><span class="line">            <span class="string">&quot;metric_voxel_length_unit&quot;</span>:  <span class="number">1e-6</span>,</span><br><span class="line">            <span class="string">&quot;width&quot;</span>: <span class="number">1000</span>, </span><br><span class="line">            <span class="string">&quot;height&quot;</span>: <span class="number">1000</span>, </span><br><span class="line">            <span class="string">&quot;number_of_slices&quot;</span>: <span class="number">1000</span>,</span><br><span class="line">            <span class="string">&quot;byte_order&quot;</span>: <span class="string">&quot;little-endian&quot;</span>,</span><br><span class="line">            <span class="string">&quot;image_type&quot;</span>: np.uint8</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&quot;BanderaBrown_2d25um_grayscale_filtered.raw&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;url&quot;</span>: <span class="string">&quot;https://www.digitalrocksportal.org/projects/317/images/223454/download/&quot;</span>,</span><br><span class="line">            <span class="string">&quot;voxel_length&quot;</span>: [<span class="number">2.25</span>, <span class="number">2.25</span>, <span class="number">2.25</span>],</span><br><span class="line">            <span class="string">&quot;metric_voxel_length_unit&quot;</span>:  <span class="number">1e-6</span>,</span><br><span class="line">            <span class="string">&quot;width&quot;</span>: <span class="number">1000</span>, </span><br><span class="line">            <span class="string">&quot;height&quot;</span>: <span class="number">1000</span>, </span><br><span class="line">            <span class="string">&quot;number_of_slices&quot;</span>: <span class="number">1000</span>,</span><br><span class="line">            <span class="string">&quot;byte_order&quot;</span>: <span class="string">&quot;little-endian&quot;</span>,</span><br><span class="line">            <span class="string">&quot;image_type&quot;</span>: np.uint8</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&quot;BanderaBrown_2d25um_binary.raw&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;url&quot;</span>: <span class="string">&quot;https://www.digitalrocksportal.org/projects/317/images/223455/download/&quot;</span>,</span><br><span class="line">            <span class="string">&quot;voxel_length&quot;</span>: [<span class="number">2.25</span>, <span class="number">2.25</span>, <span class="number">2.25</span>],</span><br><span class="line">            <span class="string">&quot;metric_voxel_length_unit&quot;</span>: <span class="number">1e-6</span>,</span><br><span class="line">            <span class="string">&quot;width&quot;</span>: <span class="number">1000</span>, </span><br><span class="line">            <span class="string">&quot;height&quot;</span>: <span class="number">1000</span>, </span><br><span class="line">            <span class="string">&quot;number_of_slices&quot;</span>: <span class="number">1000</span>,</span><br><span class="line">            <span class="string">&quot;byte_order&quot;</span>: <span class="string">&quot;little-endian&quot;</span>,</span><br><span class="line">            <span class="string">&quot;image_type&quot;</span>: np.uint8</span><br><span class="line">        &#125;   </span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&quot;BanderaGray&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;BanderaGray_2d25um_grayscale.raw&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;url&quot;</span>: <span class="string">&quot;https://www.digitalrocksportal.org/projects/317/images/223459/download/&quot;</span>,</span><br><span class="line">            <span class="string">&quot;voxel_length&quot;</span>: [<span class="number">2.25</span>, <span class="number">2.25</span>, <span class="number">2.25</span>],</span><br><span class="line">            <span class="string">&quot;metric_voxel_length_unit&quot;</span>:  <span class="number">1e-6</span>,</span><br><span class="line">            <span class="string">&quot;width&quot;</span>: <span class="number">1000</span>, </span><br><span class="line">            <span class="string">&quot;height&quot;</span>: <span class="number">1000</span>, </span><br><span class="line">            <span class="string">&quot;number_of_slices&quot;</span>: <span class="number">1000</span>,</span><br><span class="line">            <span class="string">&quot;byte_order&quot;</span>: <span class="string">&quot;little-endian&quot;</span>,</span><br><span class="line">            <span class="string">&quot;image_type&quot;</span>: np.uint8</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&quot;BanderaGray_2d25um_grayscale_filtered.raw&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;url&quot;</span>: <span class="string">&quot;https://www.digitalrocksportal.org/projects/317/images/223457/download/&quot;</span>,</span><br><span class="line">            <span class="string">&quot;voxel_length&quot;</span>: [<span class="number">2.25</span>, <span class="number">2.25</span>, <span class="number">2.25</span>],</span><br><span class="line">            <span class="string">&quot;metric_voxel_length_unit&quot;</span>:  <span class="number">1e-6</span>,</span><br><span class="line">            <span class="string">&quot;width&quot;</span>: <span class="number">1000</span>, </span><br><span class="line">            <span class="string">&quot;height&quot;</span>: <span class="number">1000</span>, </span><br><span class="line">            <span class="string">&quot;number_of_slices&quot;</span>: <span class="number">1000</span>,</span><br><span class="line">            <span class="string">&quot;byte_order&quot;</span>: <span class="string">&quot;little-endian&quot;</span>,</span><br><span class="line">            <span class="string">&quot;image_type&quot;</span>: np.uint8</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&quot;BanderaGray_2d25um_binary.raw&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;url&quot;</span>: <span class="string">&quot;https://www.digitalrocksportal.org/projects/317/images/223458/download/&quot;</span>,</span><br><span class="line">            <span class="string">&quot;voxel_length&quot;</span>: [<span class="number">2.25</span>, <span class="number">2.25</span>, <span class="number">2.25</span>],</span><br><span class="line">            <span class="string">&quot;metric_voxel_length_unit&quot;</span>: <span class="number">1e-6</span>,</span><br><span class="line">            <span class="string">&quot;width&quot;</span>: <span class="number">1000</span>, </span><br><span class="line">            <span class="string">&quot;height&quot;</span>: <span class="number">1000</span>, </span><br><span class="line">            <span class="string">&quot;number_of_slices&quot;</span>: <span class="number">1000</span>,</span><br><span class="line">            <span class="string">&quot;byte_order&quot;</span>: <span class="string">&quot;little-endian&quot;</span>,</span><br><span class="line">            <span class="string">&quot;image_type&quot;</span>: np.uint8</span><br><span class="line">        &#125;   </span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&quot;Bentheimer&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;Bentheimer_2d25um_grayscale.raw&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;url&quot;</span>: <span class="string">&quot;https://www.digitalrocksportal.org/projects/317/images/223461/download/&quot;</span>,</span><br><span class="line">            <span class="string">&quot;voxel_length&quot;</span>: [<span class="number">2.25</span>, <span class="number">2.25</span>, <span class="number">2.25</span>],</span><br><span class="line">            <span class="string">&quot;metric_voxel_length_unit&quot;</span>:  <span class="number">1e-6</span>,</span><br><span class="line">            <span class="string">&quot;width&quot;</span>: <span class="number">1000</span>, </span><br><span class="line">            <span class="string">&quot;height&quot;</span>: <span class="number">1000</span>, </span><br><span class="line">            <span class="string">&quot;number_of_slices&quot;</span>: <span class="number">1000</span>,</span><br><span class="line">            <span class="string">&quot;byte_order&quot;</span>: <span class="string">&quot;little-endian&quot;</span>,</span><br><span class="line">            <span class="string">&quot;image_type&quot;</span>: np.uint8</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&quot;Bentheimer_2d25um_grayscale_filtered.raw&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;url&quot;</span>: <span class="string">&quot;https://www.digitalrocksportal.org/projects/317/images/223462/download/&quot;</span>,</span><br><span class="line">            <span class="string">&quot;voxel_length&quot;</span>: [<span class="number">2.25</span>, <span class="number">2.25</span>, <span class="number">2.25</span>],</span><br><span class="line">            <span class="string">&quot;metric_voxel_length_unit&quot;</span>:  <span class="number">1e-6</span>,</span><br><span class="line">            <span class="string">&quot;width&quot;</span>: <span class="number">1000</span>, </span><br><span class="line">            <span class="string">&quot;height&quot;</span>: <span class="number">1000</span>, </span><br><span class="line">            <span class="string">&quot;number_of_slices&quot;</span>: <span class="number">1000</span>,</span><br><span class="line">            <span class="string">&quot;byte_order&quot;</span>: <span class="string">&quot;little-endian&quot;</span>,</span><br><span class="line">            <span class="string">&quot;image_type&quot;</span>: np.uint8</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&quot;Bentheimer_2d25um_binary.raw&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;url&quot;</span>: <span class="string">&quot;https://www.digitalrocksportal.org/projects/317/images/223463/download/&quot;</span>,</span><br><span class="line">            <span class="string">&quot;voxel_length&quot;</span>: [<span class="number">2.25</span>, <span class="number">2.25</span>, <span class="number">2.25</span>],</span><br><span class="line">            <span class="string">&quot;metric_voxel_length_unit&quot;</span>: <span class="number">1e-6</span>,</span><br><span class="line">            <span class="string">&quot;width&quot;</span>: <span class="number">1000</span>, </span><br><span class="line">            <span class="string">&quot;height&quot;</span>: <span class="number">1000</span>, </span><br><span class="line">            <span class="string">&quot;number_of_slices&quot;</span>: <span class="number">1000</span>,</span><br><span class="line">            <span class="string">&quot;byte_order&quot;</span>: <span class="string">&quot;little-endian&quot;</span>,</span><br><span class="line">            <span class="string">&quot;image_type&quot;</span>: np.uint8</span><br><span class="line">        &#125;   </span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&quot;BSG&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;BSG_2d25um_grayscale.raw&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;url&quot;</span>: <span class="string">&quot;https://www.digitalrocksportal.org/projects/317/images/223464/download/&quot;</span>,</span><br><span class="line">            <span class="string">&quot;voxel_length&quot;</span>: [<span class="number">2.25</span>, <span class="number">2.25</span>, <span class="number">2.25</span>],</span><br><span class="line">            <span class="string">&quot;metric_voxel_length_unit&quot;</span>:  <span class="number">1e-6</span>,</span><br><span class="line">            <span class="string">&quot;width&quot;</span>: <span class="number">1000</span>, </span><br><span class="line">            <span class="string">&quot;height&quot;</span>: <span class="number">1000</span>, </span><br><span class="line">            <span class="string">&quot;number_of_slices&quot;</span>: <span class="number">1000</span>,</span><br><span class="line">            <span class="string">&quot;byte_order&quot;</span>: <span class="string">&quot;little-endian&quot;</span>,</span><br><span class="line">            <span class="string">&quot;image_type&quot;</span>: np.uint8</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&quot;BSG_2d25um_grayscale_filtered.raw&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;url&quot;</span>: <span class="string">&quot;https://www.digitalrocksportal.org/projects/317/images/223465/download/&quot;</span>,</span><br><span class="line">            <span class="string">&quot;voxel_length&quot;</span>: [<span class="number">2.25</span>, <span class="number">2.25</span>, <span class="number">2.25</span>],</span><br><span class="line">            <span class="string">&quot;metric_voxel_length_unit&quot;</span>:  <span class="number">1e-6</span>,</span><br><span class="line">            <span class="string">&quot;width&quot;</span>: <span class="number">1000</span>, </span><br><span class="line">            <span class="string">&quot;height&quot;</span>: <span class="number">1000</span>, </span><br><span class="line">            <span class="string">&quot;number_of_slices&quot;</span>: <span class="number">1000</span>,</span><br><span class="line">            <span class="string">&quot;byte_order&quot;</span>: <span class="string">&quot;little-endian&quot;</span>,</span><br><span class="line">            <span class="string">&quot;image_type&quot;</span>: np.uint8</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&quot;BSG_2d25um_binary.raw&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;url&quot;</span>: <span class="string">&quot;https://www.digitalrocksportal.org/projects/317/images/223466/download/&quot;</span>,</span><br><span class="line">            <span class="string">&quot;voxel_length&quot;</span>: [<span class="number">2.25</span>, <span class="number">2.25</span>, <span class="number">2.25</span>],</span><br><span class="line">            <span class="string">&quot;metric_voxel_length_unit&quot;</span>: <span class="number">1e-6</span>,</span><br><span class="line">            <span class="string">&quot;width&quot;</span>: <span class="number">1000</span>, </span><br><span class="line">            <span class="string">&quot;height&quot;</span>: <span class="number">1000</span>, </span><br><span class="line">            <span class="string">&quot;number_of_slices&quot;</span>: <span class="number">1000</span>,</span><br><span class="line">            <span class="string">&quot;byte_order&quot;</span>: <span class="string">&quot;little-endian&quot;</span>,</span><br><span class="line">            <span class="string">&quot;image_type&quot;</span>: np.uint8</span><br><span class="line">        &#125;   </span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&quot;BUG&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;BUG_2d25um_grayscale.raw&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;url&quot;</span>: <span class="string">&quot;https://www.digitalrocksportal.org/projects/317/images/223467/download/&quot;</span>,</span><br><span class="line">            <span class="string">&quot;voxel_length&quot;</span>: [<span class="number">2.25</span>, <span class="number">2.25</span>, <span class="number">2.25</span>],</span><br><span class="line">            <span class="string">&quot;metric_voxel_length_unit&quot;</span>:  <span class="number">1e-6</span>,</span><br><span class="line">            <span class="string">&quot;width&quot;</span>: <span class="number">1000</span>, </span><br><span class="line">            <span class="string">&quot;height&quot;</span>: <span class="number">1000</span>, </span><br><span class="line">            <span class="string">&quot;number_of_slices&quot;</span>: <span class="number">1000</span>,</span><br><span class="line">            <span class="string">&quot;byte_order&quot;</span>: <span class="string">&quot;little-endian&quot;</span>,</span><br><span class="line">            <span class="string">&quot;image_type&quot;</span>: np.uint8</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&quot;BUG_2d25um_grayscale_filtered.raw&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;url&quot;</span>: <span class="string">&quot;https://www.digitalrocksportal.org/projects/317/images/223468/download/&quot;</span>,</span><br><span class="line">            <span class="string">&quot;voxel_length&quot;</span>: [<span class="number">2.25</span>, <span class="number">2.25</span>, <span class="number">2.25</span>],</span><br><span class="line">            <span class="string">&quot;metric_voxel_length_unit&quot;</span>:  <span class="number">1e-6</span>,</span><br><span class="line">            <span class="string">&quot;width&quot;</span>: <span class="number">1000</span>, </span><br><span class="line">            <span class="string">&quot;height&quot;</span>: <span class="number">1000</span>, </span><br><span class="line">            <span class="string">&quot;number_of_slices&quot;</span>: <span class="number">1000</span>,</span><br><span class="line">            <span class="string">&quot;byte_order&quot;</span>: <span class="string">&quot;little-endian&quot;</span>,</span><br><span class="line">            <span class="string">&quot;image_type&quot;</span>: np.uint8</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&quot;BUG_2d25um_binary.raw&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;url&quot;</span>: <span class="string">&quot;https://www.digitalrocksportal.org/projects/317/images/223469/download/&quot;</span>,</span><br><span class="line">            <span class="string">&quot;voxel_length&quot;</span>: [<span class="number">2.25</span>, <span class="number">2.25</span>, <span class="number">2.25</span>],</span><br><span class="line">            <span class="string">&quot;metric_voxel_length_unit&quot;</span>: <span class="number">1e-6</span>,</span><br><span class="line">            <span class="string">&quot;width&quot;</span>: <span class="number">1000</span>, </span><br><span class="line">            <span class="string">&quot;height&quot;</span>: <span class="number">1000</span>, </span><br><span class="line">            <span class="string">&quot;number_of_slices&quot;</span>: <span class="number">1000</span>,</span><br><span class="line">            <span class="string">&quot;byte_order&quot;</span>: <span class="string">&quot;little-endian&quot;</span>,</span><br><span class="line">            <span class="string">&quot;image_type&quot;</span>: np.uint8</span><br><span class="line">        &#125;   </span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&quot;BB&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;BB_2d25um_grayscale.raw&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;url&quot;</span>: <span class="string">&quot;https://www.digitalrocksportal.org/projects/317/images/223470/download/&quot;</span>,</span><br><span class="line">            <span class="string">&quot;voxel_length&quot;</span>: [<span class="number">2.25</span>, <span class="number">2.25</span>, <span class="number">2.25</span>],</span><br><span class="line">            <span class="string">&quot;metric_voxel_length_unit&quot;</span>:  <span class="number">1e-6</span>,</span><br><span class="line">            <span class="string">&quot;width&quot;</span>: <span class="number">1000</span>, </span><br><span class="line">            <span class="string">&quot;height&quot;</span>: <span class="number">1000</span>, </span><br><span class="line">            <span class="string">&quot;number_of_slices&quot;</span>: <span class="number">1000</span>,</span><br><span class="line">            <span class="string">&quot;byte_order&quot;</span>: <span class="string">&quot;little-endian&quot;</span>,</span><br><span class="line">            <span class="string">&quot;image_type&quot;</span>: np.uint8</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&quot;BB_2d25um_grayscale_filtered.raw&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;url&quot;</span>: <span class="string">&quot;https://www.digitalrocksportal.org/projects/317/images/223471/download/&quot;</span>,</span><br><span class="line">            <span class="string">&quot;voxel_length&quot;</span>: [<span class="number">2.25</span>, <span class="number">2.25</span>, <span class="number">2.25</span>],</span><br><span class="line">            <span class="string">&quot;metric_voxel_length_unit&quot;</span>:  <span class="number">1e-6</span>,</span><br><span class="line">            <span class="string">&quot;width&quot;</span>: <span class="number">1000</span>, </span><br><span class="line">            <span class="string">&quot;height&quot;</span>: <span class="number">1000</span>, </span><br><span class="line">            <span class="string">&quot;number_of_slices&quot;</span>: <span class="number">1000</span>,</span><br><span class="line">            <span class="string">&quot;byte_order&quot;</span>: <span class="string">&quot;little-endian&quot;</span>,</span><br><span class="line">            <span class="string">&quot;image_type&quot;</span>: np.uint8</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&quot;BB_2d25um_binary.raw&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;url&quot;</span>: <span class="string">&quot;https://www.digitalrocksportal.org/projects/317/images/223472/download/&quot;</span>,</span><br><span class="line">            <span class="string">&quot;voxel_length&quot;</span>: [<span class="number">2.25</span>, <span class="number">2.25</span>, <span class="number">2.25</span>],</span><br><span class="line">            <span class="string">&quot;metric_voxel_length_unit&quot;</span>: <span class="number">1e-6</span>,</span><br><span class="line">            <span class="string">&quot;width&quot;</span>: <span class="number">1000</span>, </span><br><span class="line">            <span class="string">&quot;height&quot;</span>: <span class="number">1000</span>, </span><br><span class="line">            <span class="string">&quot;number_of_slices&quot;</span>: <span class="number">1000</span>,</span><br><span class="line">            <span class="string">&quot;byte_order&quot;</span>: <span class="string">&quot;little-endian&quot;</span>,</span><br><span class="line">            <span class="string">&quot;image_type&quot;</span>: np.uint8</span><br><span class="line">        &#125;   </span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&quot;CastleGate&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;CastleGate_2d25um_grayscale.raw&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;url&quot;</span>: <span class="string">&quot;https://www.digitalrocksportal.org/projects/317/images/223473/download/&quot;</span>,</span><br><span class="line">            <span class="string">&quot;voxel_length&quot;</span>: [<span class="number">2.25</span>, <span class="number">2.25</span>, <span class="number">2.25</span>],</span><br><span class="line">            <span class="string">&quot;metric_voxel_length_unit&quot;</span>:  <span class="number">1e-6</span>,</span><br><span class="line">            <span class="string">&quot;width&quot;</span>: <span class="number">1000</span>, </span><br><span class="line">            <span class="string">&quot;height&quot;</span>: <span class="number">1000</span>, </span><br><span class="line">            <span class="string">&quot;number_of_slices&quot;</span>: <span class="number">1000</span>,</span><br><span class="line">            <span class="string">&quot;byte_order&quot;</span>: <span class="string">&quot;little-endian&quot;</span>,</span><br><span class="line">            <span class="string">&quot;image_type&quot;</span>: np.uint8</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&quot;CastleGate_2d25um_grayscale_filtered.raw&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;url&quot;</span>: <span class="string">&quot;https://www.digitalrocksportal.org/projects/317/images/223474/download/&quot;</span>,</span><br><span class="line">            <span class="string">&quot;voxel_length&quot;</span>: [<span class="number">2.25</span>, <span class="number">2.25</span>, <span class="number">2.25</span>],</span><br><span class="line">            <span class="string">&quot;metric_voxel_length_unit&quot;</span>:  <span class="number">1e-6</span>,</span><br><span class="line">            <span class="string">&quot;width&quot;</span>: <span class="number">1000</span>, </span><br><span class="line">            <span class="string">&quot;height&quot;</span>: <span class="number">1000</span>, </span><br><span class="line">            <span class="string">&quot;number_of_slices&quot;</span>: <span class="number">1000</span>,</span><br><span class="line">            <span class="string">&quot;byte_order&quot;</span>: <span class="string">&quot;little-endian&quot;</span>,</span><br><span class="line">            <span class="string">&quot;image_type&quot;</span>: np.uint8</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&quot;CastleGate_2d25um_binary.raw&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;url&quot;</span>: <span class="string">&quot;https://www.digitalrocksportal.org/projects/317/images/223475/download/&quot;</span>,</span><br><span class="line">            <span class="string">&quot;voxel_length&quot;</span>: [<span class="number">2.25</span>, <span class="number">2.25</span>, <span class="number">2.25</span>],</span><br><span class="line">            <span class="string">&quot;metric_voxel_length_unit&quot;</span>: <span class="number">1e-6</span>,</span><br><span class="line">            <span class="string">&quot;width&quot;</span>: <span class="number">1000</span>, </span><br><span class="line">            <span class="string">&quot;height&quot;</span>: <span class="number">1000</span>, </span><br><span class="line">            <span class="string">&quot;number_of_slices&quot;</span>: <span class="number">1000</span>,</span><br><span class="line">            <span class="string">&quot;byte_order&quot;</span>: <span class="string">&quot;little-endian&quot;</span>,</span><br><span class="line">            <span class="string">&quot;image_type&quot;</span>: np.uint8</span><br><span class="line">        &#125;   </span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&quot;Kirby&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;Kirby_2d25um_grayscale.raw&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;url&quot;</span>: <span class="string">&quot;https://www.digitalrocksportal.org/projects/317/images/223476/download/&quot;</span>,</span><br><span class="line">            <span class="string">&quot;voxel_length&quot;</span>: [<span class="number">2.25</span>, <span class="number">2.25</span>, <span class="number">2.25</span>],</span><br><span class="line">            <span class="string">&quot;metric_voxel_length_unit&quot;</span>:  <span class="number">1e-6</span>,</span><br><span class="line">            <span class="string">&quot;width&quot;</span>: <span class="number">1000</span>, </span><br><span class="line">            <span class="string">&quot;height&quot;</span>: <span class="number">1000</span>, </span><br><span class="line">            <span class="string">&quot;number_of_slices&quot;</span>: <span class="number">1000</span>,</span><br><span class="line">            <span class="string">&quot;byte_order&quot;</span>: <span class="string">&quot;little-endian&quot;</span>,</span><br><span class="line">            <span class="string">&quot;image_type&quot;</span>: np.uint8</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&quot;Kirby_2d25um_grayscale_filtered.raw&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;url&quot;</span>: <span class="string">&quot;https://www.digitalrocksportal.org/projects/317/images/223477/download/&quot;</span>,</span><br><span class="line">            <span class="string">&quot;voxel_length&quot;</span>: [<span class="number">2.25</span>, <span class="number">2.25</span>, <span class="number">2.25</span>],</span><br><span class="line">            <span class="string">&quot;metric_voxel_length_unit&quot;</span>:  <span class="number">1e-6</span>,</span><br><span class="line">            <span class="string">&quot;width&quot;</span>: <span class="number">1000</span>, </span><br><span class="line">            <span class="string">&quot;height&quot;</span>: <span class="number">1000</span>, </span><br><span class="line">            <span class="string">&quot;number_of_slices&quot;</span>: <span class="number">1000</span>,</span><br><span class="line">            <span class="string">&quot;byte_order&quot;</span>: <span class="string">&quot;little-endian&quot;</span>,</span><br><span class="line">            <span class="string">&quot;image_type&quot;</span>: np.uint8</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&quot;Kirby_2d25um_binary.raw&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;url&quot;</span>: <span class="string">&quot;https://www.digitalrocksportal.org/projects/317/images/223478/download/&quot;</span>,</span><br><span class="line">            <span class="string">&quot;voxel_length&quot;</span>: [<span class="number">2.25</span>, <span class="number">2.25</span>, <span class="number">2.25</span>],</span><br><span class="line">            <span class="string">&quot;metric_voxel_length_unit&quot;</span>: <span class="number">1e-6</span>,</span><br><span class="line">            <span class="string">&quot;width&quot;</span>: <span class="number">1000</span>, </span><br><span class="line">            <span class="string">&quot;height&quot;</span>: <span class="number">1000</span>, </span><br><span class="line">            <span class="string">&quot;number_of_slices&quot;</span>: <span class="number">1000</span>,</span><br><span class="line">            <span class="string">&quot;byte_order&quot;</span>: <span class="string">&quot;little-endian&quot;</span>,</span><br><span class="line">            <span class="string">&quot;image_type&quot;</span>: np.uint8</span><br><span class="line">        &#125;   </span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&quot;Leopard&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;Leopard_2d25um_grayscale.raw&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;url&quot;</span>: <span class="string">&quot;https://www.digitalrocksportal.org/projects/317/images/223479/download/&quot;</span>,</span><br><span class="line">            <span class="string">&quot;voxel_length&quot;</span>: [<span class="number">2.25</span>, <span class="number">2.25</span>, <span class="number">2.25</span>],</span><br><span class="line">            <span class="string">&quot;metric_voxel_length_unit&quot;</span>:  <span class="number">1e-6</span>,</span><br><span class="line">            <span class="string">&quot;width&quot;</span>: <span class="number">1000</span>, </span><br><span class="line">            <span class="string">&quot;height&quot;</span>: <span class="number">1000</span>, </span><br><span class="line">            <span class="string">&quot;number_of_slices&quot;</span>: <span class="number">1000</span>,</span><br><span class="line">            <span class="string">&quot;byte_order&quot;</span>: <span class="string">&quot;little-endian&quot;</span>,</span><br><span class="line">            <span class="string">&quot;image_type&quot;</span>: np.uint8</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&quot;Leopard_2d25um_grayscale_filtered.raw&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;url&quot;</span>: <span class="string">&quot;https://www.digitalrocksportal.org/projects/317/images/223480/download/&quot;</span>,</span><br><span class="line">            <span class="string">&quot;voxel_length&quot;</span>: [<span class="number">2.25</span>, <span class="number">2.25</span>, <span class="number">2.25</span>],</span><br><span class="line">            <span class="string">&quot;metric_voxel_length_unit&quot;</span>:  <span class="number">1e-6</span>,</span><br><span class="line">            <span class="string">&quot;width&quot;</span>: <span class="number">1000</span>, </span><br><span class="line">            <span class="string">&quot;height&quot;</span>: <span class="number">1000</span>, </span><br><span class="line">            <span class="string">&quot;number_of_slices&quot;</span>: <span class="number">1000</span>,</span><br><span class="line">            <span class="string">&quot;byte_order&quot;</span>: <span class="string">&quot;little-endian&quot;</span>,</span><br><span class="line">            <span class="string">&quot;image_type&quot;</span>: np.uint8</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&quot;Leopard_2d25um_binary.raw&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;url&quot;</span>: <span class="string">&quot;https://www.digitalrocksportal.org/projects/317/images/223481/download/&quot;</span>,</span><br><span class="line">            <span class="string">&quot;voxel_length&quot;</span>: [<span class="number">2.25</span>, <span class="number">2.25</span>, <span class="number">2.25</span>],</span><br><span class="line">            <span class="string">&quot;metric_voxel_length_unit&quot;</span>: <span class="number">1e-6</span>,</span><br><span class="line">            <span class="string">&quot;width&quot;</span>: <span class="number">1000</span>, </span><br><span class="line">            <span class="string">&quot;height&quot;</span>: <span class="number">1000</span>, </span><br><span class="line">            <span class="string">&quot;number_of_slices&quot;</span>: <span class="number">1000</span>,</span><br><span class="line">            <span class="string">&quot;byte_order&quot;</span>: <span class="string">&quot;little-endian&quot;</span>,</span><br><span class="line">            <span class="string">&quot;image_type&quot;</span>: np.uint8</span><br><span class="line">        &#125;   </span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&quot;Parker&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;Parker_2d25um_grayscale.raw&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;url&quot;</span>: <span class="string">&quot;https://www.digitalrocksportal.org/projects/317/images/223482/download/&quot;</span>,</span><br><span class="line">            <span class="string">&quot;voxel_length&quot;</span>: [<span class="number">2.25</span>, <span class="number">2.25</span>, <span class="number">2.25</span>],</span><br><span class="line">            <span class="string">&quot;metric_voxel_length_unit&quot;</span>:  <span class="number">1e-6</span>,</span><br><span class="line">            <span class="string">&quot;width&quot;</span>: <span class="number">1000</span>, </span><br><span class="line">            <span class="string">&quot;height&quot;</span>: <span class="number">1000</span>, </span><br><span class="line">            <span class="string">&quot;number_of_slices&quot;</span>: <span class="number">1000</span>,</span><br><span class="line">            <span class="string">&quot;byte_order&quot;</span>: <span class="string">&quot;little-endian&quot;</span>,</span><br><span class="line">            <span class="string">&quot;image_type&quot;</span>: np.uint8</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&quot;Parker_2d25um_grayscale_filtered.raw&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;url&quot;</span>: <span class="string">&quot;https://www.digitalrocksportal.org/projects/317/images/223483/download/&quot;</span>,</span><br><span class="line">            <span class="string">&quot;voxel_length&quot;</span>: [<span class="number">2.25</span>, <span class="number">2.25</span>, <span class="number">2.25</span>],</span><br><span class="line">            <span class="string">&quot;metric_voxel_length_unit&quot;</span>:  <span class="number">1e-6</span>,</span><br><span class="line">            <span class="string">&quot;width&quot;</span>: <span class="number">1000</span>, </span><br><span class="line">            <span class="string">&quot;height&quot;</span>: <span class="number">1000</span>, </span><br><span class="line">            <span class="string">&quot;number_of_slices&quot;</span>: <span class="number">1000</span>,</span><br><span class="line">            <span class="string">&quot;byte_order&quot;</span>: <span class="string">&quot;little-endian&quot;</span>,</span><br><span class="line">            <span class="string">&quot;image_type&quot;</span>: np.uint8</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&quot;Parker_2d25um_binary.raw&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;url&quot;</span>: <span class="string">&quot;https://www.digitalrocksportal.org/projects/317/images/223484/download/&quot;</span>,</span><br><span class="line">            <span class="string">&quot;voxel_length&quot;</span>: [<span class="number">2.25</span>, <span class="number">2.25</span>, <span class="number">2.25</span>],</span><br><span class="line">            <span class="string">&quot;metric_voxel_length_unit&quot;</span>: <span class="number">1e-6</span>,</span><br><span class="line">            <span class="string">&quot;width&quot;</span>: <span class="number">1000</span>, </span><br><span class="line">            <span class="string">&quot;height&quot;</span>: <span class="number">1000</span>, </span><br><span class="line">            <span class="string">&quot;number_of_slices&quot;</span>: <span class="number">1000</span>,</span><br><span class="line">            <span class="string">&quot;byte_order&quot;</span>: <span class="string">&quot;little-endian&quot;</span>,</span><br><span class="line">            <span class="string">&quot;image_type&quot;</span>: np.uint8</span><br><span class="line">        &#125;   </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h1><p>创建conda环境，通过pip安装drd</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> drd.datasets.eleven_sandstones <span class="keyword">import</span> load_eleven_sandstones</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line"><span class="comment"># xarray DataArray with image data</span></span><br><span class="line">img = load_eleven_sandstones(<span class="string">&quot;Berea&quot;</span>, <span class="string">&quot;Berea_2d25um_grayscale.raw&quot;</span>, <span class="string">&quot;/home/daijin/data/drd_data/&quot;</span>)</span><br><span class="line"><span class="comment">#img = load_eleven_sandstones(&quot;Berea&quot;, &quot;Berea_2d25um_grayscale_filtered.raw&quot;, &quot;/home/daijin/data/drd_data/&quot;)</span></span><br><span class="line"><span class="comment">#img = load_eleven_sandstones(&quot;Berea&quot;, &quot;Berea_2d25um_binary.raw&quot;, &quot;/home/daijin/data/drd_data/&quot;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Plot average over z dimension</span></span><br><span class="line">img.mean(dim=<span class="string">&#x27;z&#x27;</span>).plot()</span><br><span class="line"><span class="comment">#img.mean(dim=&#x27;x&#x27;).plot()</span></span><br><span class="line"><span class="comment">#img.mean(dim=&#x27;y&#x27;).plot()</span></span><br><span class="line"></span><br><span class="line">plt.tight_layout()</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p>程序运行会检查文件是否下载，下载完成后进行文件校验，校验完成后进行数据读取。</p><img src="/2024/08/12/drd-Digital_Rocks_Data/Berea_2d25um_grayscale_z.png" class="" title="Berea_2d25um_grayscale_z"><img src="/2024/08/12/drd-Digital_Rocks_Data/Berea_2d25um_grayscale_filtered_z.png" class="" title="Berea_2d25um_grayscale_filtered_z"><img src="/2024/08/12/drd-Digital_Rocks_Data/Berea_2d25um_binary_z.png" class="" title="Berea_2d25um_binary_z"><img src="/2024/08/12/drd-Digital_Rocks_Data/Berea_2d25um_grayscale_x.png" class="" title="Berea_2d25um_grayscale_x"><img src="/2024/08/12/drd-Digital_Rocks_Data/Berea_2d25um_grayscale_filtered_x.png" class="" title="Berea_2d25um_grayscale_filtered_x"><img src="/2024/08/12/drd-Digital_Rocks_Data/Berea_2d25um_binary_x.png" class="" title="Berea_2d25um_binary_x"><img src="/2024/08/12/drd-Digital_Rocks_Data/Berea_2d25um_grayscale_y.png" class="" title="Berea_2d25um_grayscale_y"><img src="/2024/08/12/drd-Digital_Rocks_Data/Berea_2d25um_grayscale_filtered_y.png" class="" title="Berea_2d25um_grayscale_filtered_y"><img src="/2024/08/12/drd-Digital_Rocks_Data/Berea_2d25um_binary_y.png" class="" title="Berea_2d25um_binary_y">]]></content>
    
    
    <summary type="html">drd-Digital_Rocks_Data</summary>
    
    
    
    <category term="岩石物理" scheme="http://hibiscidai.com/categories/%E5%B2%A9%E7%9F%B3%E7%89%A9%E7%90%86/"/>
    
    
    <category term="数字岩心" scheme="http://hibiscidai.com/tags/%E6%95%B0%E5%AD%97%E5%B2%A9%E5%BF%83/"/>
    
    <category term="岩石物理" scheme="http://hibiscidai.com/tags/%E5%B2%A9%E7%9F%B3%E7%89%A9%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>WebDAV-使用指南</title>
    <link href="http://hibiscidai.com/2024/08/12/WebDAV-%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/"/>
    <id>http://hibiscidai.com/2024/08/12/WebDAV-%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</id>
    <published>2024-08-12T06:00:00.000Z</published>
    <updated>2024-08-12T06:10:29.000Z</updated>
    
    <content type="html"><![CDATA[<img src="/2024/08/12/WebDAV-%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/WebDAV-%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97.png" class="" title="WebDAV-使用指南"><p>WebDAV-使用指南</p><span id="more"></span><h1 id="WebDAV-使用指南"><a href="#WebDAV-使用指南" class="headerlink" title="WebDAV-使用指南"></a>WebDAV-使用指南</h1><p><a href="https://kb.synology.cn/zh-cn/DSM/tutorial/How_to_access_files_on_Synology_NAS_with_WebDAV">如何使用 WebDAV 访问 Synology NAS 上的文件？</a></p><p><a href="https://kb.synology.cn/zh-cn/DSM/help/WebDAVServer/webdav_server?version=7">WebDAV Server</a></p><p><a href="https://www.raidrive.com/">RaiDriver</a></p><h1 id="WebDAV是啥"><a href="#WebDAV是啥" class="headerlink" title="WebDAV是啥"></a>WebDAV是啥</h1><p>基于Web的分布式编写和版本控制（英语：Web-based Distributed Authoring and Versioning，缩写：WebDAV）是超文本传输协议（HTTP）的扩展，有利于用户间协同编辑和管理存储在万维网服务器文档。</p><p>WebDAV协议为用户在服务器上创建、更改和移动文档提供了一个框架。WebDAV协议最重要的功能包括作者或修改日期等属性的维护、命名空间管理、集合和覆盖保护。为属性维护所提供的功能包括创建、删除和查询文件信息等；命名空间管理处理在服务器名称空间内复制和移动网页的能力；集合（Collections）处理各种资源的创建、删除和列举；覆盖保护处理与锁定文件相关的问题。WebDAV协议利用TLS、HTTP摘要认证、XML等技术来满足这些需求。</p><h1 id="Synology设置要求"><a href="#Synology设置要求" class="headerlink" title="Synology设置要求"></a>Synology设置要求</h1><p>参看前文连接</p><h1 id="RaiDriver配置"><a href="#RaiDriver配置" class="headerlink" title="RaiDriver配置"></a>RaiDriver配置</h1><p>下载RaiDriver<br>安装RaiDriver</p><img src="/2024/08/12/WebDAV-%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/RaiDriver%E9%85%8D%E7%BD%AE-1.png" class="" title="RaiDriver配置-1"><p>此软件只保证在win上通过WebDAV协议进行访问，可以测试连通性。<br>测试成功后可以在本地电脑磁盘上看到映射的文件</p><h1 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h1><p>群辉自带内网穿透，http写：<br><a href="https://{内网ip}.{quickconnect}.quickconnect.cn:{端口}/{映射文件夹}">https://{内网ip}.{quickconnect}.quickconnect.cn:{端口}/{映射文件夹}</a></p><p>账户密码可以用一个，但建议创建新用户，防止密码泄密后访问所有文件。</p>]]></content>
    
    
    <summary type="html">WebDAV-使用指南</summary>
    
    
    
    <category term="软件" scheme="http://hibiscidai.com/categories/%E8%BD%AF%E4%BB%B6/"/>
    
    
    <category term="软件" scheme="http://hibiscidai.com/tags/%E8%BD%AF%E4%BB%B6/"/>
    
    <category term="WebDAV" scheme="http://hibiscidai.com/tags/WebDAV/"/>
    
  </entry>
  
  <entry>
    <title>Cesium-使用指南</title>
    <link href="http://hibiscidai.com/2024/08/06/Cesium-%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/"/>
    <id>http://hibiscidai.com/2024/08/06/Cesium-%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</id>
    <published>2024-08-06T08:00:00.000Z</published>
    <updated>2024-08-08T09:22:57.000Z</updated>
    
    <content type="html"><![CDATA[<img src="/2024/08/06/Cesium-%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/Cesium-%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97.png" class="" title="Cesium-使用指南"><p>Cesium-使用指南</p><span id="more"></span><h1 id="Cesium-使用指南"><a href="#Cesium-使用指南" class="headerlink" title="Cesium-使用指南"></a>Cesium-使用指南</h1><p><a href="https://cesium.com/">Cesium: The Platform for 3D Geospatial</a></p><p><a href="https://github.com/CesiumGS/cesium">Cesium-github</a></p><p><a href="https://cesium.com/learn/cesiumjs-sandcastle/">Cesium-doc</a></p><p><a href="https://sandcastle.cesium.com/">Cesium-沙盒</a></p><p><a href="https://ion.cesium.com/">Cesium-用户控制面板</a></p><p><a href="http://lbs.tianditu.gov.cn/">国家地理信息公共服务平台天地图</a></p><p><a href="http://lbs.tianditu.gov.cn/server/MapService.html">天地图-地图API</a></p><p><a href=""></a></p><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>CesiumJS is a JavaScript library for creating 3D globes and 2D maps in a web browser without a plugin. It uses WebGL for hardware-accelerated graphics, and is cross-platform, cross-browser, and tuned for dynamic-data visualization.<br>CesiumJS 是一个 JavaScript 库，用于在 Web 浏览器中创建 3D 地球仪和 2D 地图，无需插件。它使用 WebGL 进行硬件加速图形处理，并且跨平台、跨浏览器，并针对动态数据可视化进行了调整。</p><p>Built on open formats, CesiumJS is designed for robust interoperability and scaling for massive datasets.<br>CesiumJS 基于开放格式构建，旨在实现强大的互操作性和对海量数据集的扩展。</p><h1 id="注册"><a href="#注册" class="headerlink" title="注册"></a>注册</h1><p>登陆cesium官网注册账号，然后前往用户控制面板查看自己的<code>Access Tokens</code>，最好新建一个token，打开全部权限。</p><p>登陆天地图官网进行注册，进入用户平台。创建新的应用，得到应用的key。</p><h1 id="安装CesiumJS"><a href="#安装CesiumJS" class="headerlink" title="安装CesiumJS"></a>安装CesiumJS</h1><h2 id="CDN安装-主要安装方式"><a href="#CDN安装-主要安装方式" class="headerlink" title="CDN安装-主要安装方式"></a>CDN安装-主要安装方式</h2><p>Below is a complete HTML page that will load the required JavaScript and CSS files and initialize the scene at San Francisco. If you don’t have a development environment, you can create a file containing this HTML and view it in a browser.<br>下面是一个完整的 HTML 页面，它将加载所需的 JavaScript 和 CSS 文件并初始化旧金山的场景。如果您没有开发环境，您可以创建一个包含此 HTML 的文件并在浏览器中查看它。</p><p>Just replace your_access_token with your Cesium ion access token.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- Include the CesiumJS JavaScript and CSS files --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cesium.com/downloads/cesiumjs/releases/1.120/Build/Cesium/Cesium.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;https://cesium.com/downloads/cesiumjs/releases/1.120/Build/Cesium/Widgets/widgets.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;cesiumContainer&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;module&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// Your access token can be found at: https://ion.cesium.com/tokens.</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// Replace `your_access_token` with your Cesium ion access token.</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">Cesium</span>.<span class="property">Ion</span>.<span class="property">defaultAccessToken</span> = <span class="string">&#x27;your_access_token&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// Initialize the Cesium Viewer in the HTML element with the `cesiumContainer` ID.</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> viewer = <span class="keyword">new</span> <span class="title class_">Cesium</span>.<span class="title class_">Viewer</span>(<span class="string">&#x27;cesiumContainer&#x27;</span>, &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">terrain</span>: <span class="title class_">Cesium</span>.<span class="property">Terrain</span>.<span class="title function_">fromWorldTerrain</span>(),</span></span><br><span class="line"><span class="language-javascript">    &#125;);    </span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// Fly the camera to San Francisco at the given longitude, latitude, and height.</span></span></span><br><span class="line"><span class="language-javascript">    viewer.<span class="property">camera</span>.<span class="title function_">flyTo</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">destination</span>: <span class="title class_">Cesium</span>.<span class="property">Cartesian3</span>.<span class="title function_">fromDegrees</span>(-<span class="number">122.4175</span>, <span class="number">37.655</span>, <span class="number">400</span>),</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">orientation</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">heading</span>: <span class="title class_">Cesium</span>.<span class="property">Math</span>.<span class="title function_">toRadians</span>(<span class="number">0.0</span>),</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">pitch</span>: <span class="title class_">Cesium</span>.<span class="property">Math</span>.<span class="title function_">toRadians</span>(-<span class="number">15.0</span>),</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// Add Cesium OSM Buildings, a global 3D buildings layer.</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> buildingTileset = <span class="keyword">await</span> <span class="title class_">Cesium</span>.<span class="title function_">createOsmBuildingsAsync</span>();</span></span><br><span class="line"><span class="language-javascript">    viewer.<span class="property">scene</span>.<span class="property">primitives</span>.<span class="title function_">add</span>(buildingTileset);   </span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><img src="/2024/08/06/Cesium-%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/CesiumJSHelloWorld.png" class="" title="CesiumJSHelloWorld"><h2 id="挂载服务器"><a href="#挂载服务器" class="headerlink" title="挂载服务器"></a>挂载服务器</h2><p>在本地打开的html可以预览格式和js，但是调用cesium的地图服务需要采用http传输协议，所以在本地容易出现卡地图加载不出来的情况。</p><p>需要将静态页面部署到有公网ip的服务器上，进行静态页面访问即可。</p><h3 id="宝塔新建静态网页"><a href="#宝塔新建静态网页" class="headerlink" title="宝塔新建静态网页"></a>宝塔新建静态网页</h3><p>默认网页端口是80，如果想创建多个网站，可以使用多端口映射。</p><p>先去ecs控制台打开81（也可以自己定义）端口，然后宝塔界面安全组也打开。</p><p>网站→添加站点<br>域名：xxx.xxx.xxx.xxx:81<br>根目录：www/wwwroot/新建网站文件夹<br>FTP：无<br>数据库：无<br>PHP版本：纯静态<br>网站分类：默认分类</p><p>创建完成之后根目录中index.html即可<br>可以通过<code>xxx.xxx.xxxx.xxx:81</code>访问index<br>根目录中其他网页可以输入<code>xxx.xxx.xxxx.xxx:81/xxx.html</code>访问</p><h2 id="NPM安装-参考安装，本文不采用"><a href="#NPM安装-参考安装，本文不采用" class="headerlink" title="NPM安装-参考安装，本文不采用"></a>NPM安装-参考安装，本文不采用</h2><p>If you’re building your application using a module bundler such as Webpack, Parcel, or Rollup, you can install CesiumJS by running:<br>如果您使用模块捆绑器（例如 Webpack、Parcel 或 Rollup）构建应用程序，则可以通过运行以下命令安装 CesiumJS：</p><p>npm install cesium</p><p>The code below loads the required JavaScript and CSS files.<br>以下代码加载所需的 JavaScript 和 CSS 文件。</p><p>Just replace your_access_token with your Cesium ion access token.<br>只需将 your_access_token 替换为您的 Cesium ion 访问令牌即可。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">// The URL on your server where CesiumJS<span class="string">&#x27;s static files are hosted.</span></span><br><span class="line"><span class="string">window.CESIUM_BASE_URL = &#x27;</span>/<span class="string">&#x27;;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">import &#123; Cartesian3, createOsmBuildingsAsync, Ion, Math as CesiumMath, Terrain, Viewer &#125; from &#x27;</span>cesium<span class="string">&#x27;;</span></span><br><span class="line"><span class="string">import &quot;cesium/Build/Cesium/Widgets/widgets.css&quot;;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">// Your access token can be found at: https://ion.cesium.com/tokens.</span></span><br><span class="line"><span class="string">// Replace `your_access_token` with your Cesium ion access token.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Ion.defaultAccessToken = &#x27;</span>your_access_token<span class="string">&#x27;;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">// Initialize the Cesium Viewer in the HTML element with the `cesiumContainer` ID.</span></span><br><span class="line"><span class="string">const viewer = new Viewer(&#x27;</span>cesiumContaine<span class="string">r&#x27;, &#123;</span></span><br><span class="line"><span class="string">  terrain: Terrain.fromWorldTerrain(),</span></span><br><span class="line"><span class="string">&#125;);    </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">// Fly the camera to San Francisco at the given longitude, latitude, and height.</span></span><br><span class="line"><span class="string">viewer.camera.flyTo(&#123;</span></span><br><span class="line"><span class="string">  destination: Cartesian3.fromDegrees(-122.4175, 37.655, 400),</span></span><br><span class="line"><span class="string">  orientation: &#123;</span></span><br><span class="line"><span class="string">    heading: CesiumMath.toRadians(0.0),</span></span><br><span class="line"><span class="string">    pitch: CesiumMath.toRadians(-15.0),</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">&#125;);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">// Add Cesium OSM Buildings, a global 3D buildings layer.</span></span><br><span class="line"><span class="string">const buildingTileset = await createOsmBuildingsAsync();</span></span><br><span class="line"><span class="string">viewer.scene.primitives.add(buildingTileset);   </span></span><br></pre></td></tr></table></figure><h3 id="Configuring-CESIUM-BASE-URL"><a href="#Configuring-CESIUM-BASE-URL" class="headerlink" title="Configuring CESIUM_BASE_URL"></a>Configuring CESIUM_BASE_URL</h3><p>CesiumJS requires a few static files to be hosted on your server, like web workers and SVG icons. Configure your module bundler to copy the following four directories and serve them as static files:<br>CesiumJS 需要在您的服务器上托管一些静态文件，例如 Web Worker 和 SVG 图标。配置您的模块捆绑器以复制以下四个目录并将它们作为静态文件提供：</p><ul><li><code>node_modules/cesium/Build/Cesium/Workers</code></li><li><code>node_modules/cesium/Build/Cesium/ThirdParty</code></li><li><code>node_modules/cesium/Build/Cesium/Assets</code></li><li><code>node_modules/cesium/Build/Cesium/Widgets</code></li></ul><p>The <code>window.CESIUM_BASE_URL</code> global variable must be set before CesiumJS is imported. It must point to the URL where those four directories are served.</p><p>在导入 CesiumJS 之前必须设置 <code>window.CESIUM_BASE_URL</code> 全局变量。它必须指向提供这四个目录的 URL。</p><p>For example, if the image at <code>Assets/Images/cesium_credit.png</code> is served with a <code>static/Cesium/</code> prefix under <a href="http://localhost:8080/static/Cesium/Assets/Images/cesium_credit.png">http://localhost:8080/static/Cesium/Assets/Images/cesium_credit.png</a>, then you would set the base URL as follows:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">window.CESIUM_BASE_URL = &#x27;/static/Cesium/&#x27;;</span><br></pre></td></tr></table></figure><p>See the Cesium Webpack Example for a complete Webpack config.<br>请参阅 Cesium Webpack 示例以了解完整的 Webpack 配置。</p><h1 id="地图"><a href="#地图" class="headerlink" title="地图"></a>地图</h1><h2 id="Cesium平台提供的地图"><a href="#Cesium平台提供的地图" class="headerlink" title="Cesium平台提供的地图"></a>Cesium平台提供的地图</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- Include the CesiumJS JavaScript and CSS files --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cesium.com/downloads/cesiumjs/releases/1.120/Build/Cesium/Cesium.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;https://cesium.com/downloads/cesiumjs/releases/1.120/Build/Cesium/Widgets/widgets.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;cesiumContainer&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// Natural Earth II with Shaded Relief, Water, and Drainages from http://www.naturalearthdata.com</span></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">const</span> viewer = <span class="keyword">new</span> <span class="title class_">Cesium</span>.<span class="title class_">Viewer</span>(<span class="string">&quot;cesiumContainer&quot;</span>, &#123;</span></span><br><span class="line"><span class="language-javascript"><span class="attr">baseLayer</span>: <span class="title class_">Cesium</span>.<span class="property">ImageryLayer</span>.<span class="title function_">fromProviderAsync</span>(</span></span><br><span class="line"><span class="language-javascript"><span class="title class_">Cesium</span>.<span class="property">IonImageryProvider</span>.<span class="title function_">fromAssetId</span>(<span class="number">3813</span>)</span></span><br><span class="line"><span class="language-javascript">),</span></span><br><span class="line"><span class="language-javascript">            &#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;csiumContain&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>添加个人token会导致无法调用地图。</p></blockquote><p>其中<code>AssetId</code>为官方提供的id地址</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> viewer = <span class="keyword">new</span> <span class="title class_">Cesium</span>.<span class="title class_">Viewer</span>(<span class="string">&#x27;cesiumContainer&#x27;</span>, </span></span><br><span class="line"><span class="language-javascript">    &#123;</span></span><br><span class="line"><span class="language-javascript"><span class="attr">baseLayer</span>: <span class="title class_">Cesium</span>.<span class="property">ImageryLayer</span>.<span class="title function_">fromProviderAsync</span>(</span></span><br><span class="line"><span class="language-javascript"><span class="title class_">Cesium</span>.<span class="property">IonImageryProvider</span>.<span class="title function_">fromAssetId</span>(<span class="number">3</span>)</span></span><br><span class="line"><span class="language-javascript">),</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在cesium-用户控制台中<code>My Assets</code>可以找到对应的id</p><div class="table-container"><table><thead><tr><th style="text-align:center">ID</th><th style="text-align:center">Name</th><th style="text-align:center">Type</th><th style="text-align:center">Data added</th><th style="text-align:center">Size</th></tr></thead><tbody><tr><td style="text-align:center">2275207</td><td style="text-align:center">Google Photorealistic 3D Tiles</td><td style="text-align:center">3D Tiles</td><td style="text-align:center">2023-9-13</td><td style="text-align:center">-</td></tr><tr><td style="text-align:center">96188</td><td style="text-align:center">Cesium OSM Buildings</td><td style="text-align:center">3D Tiles</td><td style="text-align:center">2020-5-1</td><td style="text-align:center">-</td></tr><tr><td style="text-align:center">4</td><td style="text-align:center">Bing Maps Road</td><td style="text-align:center">Imagery</td><td style="text-align:center">2016-10-27</td><td style="text-align:center">-</td></tr><tr><td style="text-align:center">3</td><td style="text-align:center">Bing Maps Aerial with Labels</td><td style="text-align:center">Imagery</td><td style="text-align:center">2016-10-27</td><td style="text-align:center">-</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center">Bing Maps Aerial</td><td style="text-align:center">Imagery</td><td style="text-align:center">2016-10-27</td><td style="text-align:center">-</td></tr><tr><td style="text-align:center">1</td><td style="text-align:center">Cesium World Terrain</td><td style="text-align:center">Terrain</td><td style="text-align:center">2016-10-18</td><td style="text-align:center">-</td></tr><tr><td style="text-align:center">3831</td><td style="text-align:center">Natural Earth II</td><td style="text-align:center">-</td><td style="text-align:center">-</td><td style="text-align:center">-</td></tr></tbody></table></div><img src="/2024/08/06/Cesium-%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/Google%20Photorealistic%203D%20Tiles.png" class="" alt="Google Photorealistic 3D Tiles"><img src="/2024/08/06/Cesium-%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/Cesium%20OSM%20Buildings.png" class="" alt="Cesium OSM Buildings"><img src="/2024/08/06/Cesium-%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/Bing%20Maps%20Road.png" class="" alt="Bing Maps Road"><img src="/2024/08/06/Cesium-%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/Bing%20Maps%20Aerial%20with%20Labels.png" class="" alt="Bing Maps Aerial with Labels"><img src="/2024/08/06/Cesium-%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/Bing%20Maps%20Aerial.png" class="" alt="Bing Maps Aerial"><img src="/2024/08/06/Cesium-%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/Cesium%20World%20Terrain.png" class="" alt="Cesium World Terrain"><img src="/2024/08/06/Cesium-%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/Natural%20Earth%20II.png" class="" alt="Natural Earth II"><h2 id="天地图提供的地图"><a href="#天地图提供的地图" class="headerlink" title="天地图提供的地图"></a>天地图提供的地图</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- Include the CesiumJS JavaScript and CSS files --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cesium.com/downloads/cesiumjs/releases/1.120/Build/Cesium/Cesium.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;https://cesium.com/downloads/cesiumjs/releases/1.120/Build/Cesium/Widgets/widgets.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;cesiumContainer&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">// 这个 tk 只能在本域名下使用</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> token = <span class="string">&#x27;xxx&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript"><span class="comment">// 服务域名</span></span></span><br><span class="line"><span class="language-javascript"><span class="comment">//var tdtUrl = &#x27;https://t&#123;s&#125;.tianditu.gov.cn/&#x27;;</span></span></span><br><span class="line"><span class="language-javascript"><span class="comment">// 服务负载子域</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> subdomains=[<span class="string">&#x27;0&#x27;</span>,<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;2&#x27;</span>,<span class="string">&#x27;3&#x27;</span>,<span class="string">&#x27;4&#x27;</span>,<span class="string">&#x27;5&#x27;</span>,<span class="string">&#x27;6&#x27;</span>,<span class="string">&#x27;7&#x27;</span>];</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> viewer = <span class="keyword">new</span> <span class="title class_">Cesium</span>.<span class="title class_">Viewer</span>(<span class="string">&#x27;cesiumContainer&#x27;</span>,&#123;</span></span><br><span class="line"><span class="language-javascript"><span class="attr">shouldAnimate</span>: <span class="literal">true</span>,</span></span><br><span class="line"><span class="language-javascript"><span class="attr">selectionIndicator</span>:<span class="literal">true</span>,</span></span><br><span class="line"><span class="language-javascript"><span class="attr">animation</span>:<span class="literal">true</span>,       <span class="comment">//动画</span></span></span><br><span class="line"><span class="language-javascript"><span class="attr">homeButton</span>:<span class="literal">true</span>,       <span class="comment">//home键</span></span></span><br><span class="line"><span class="language-javascript"><span class="attr">geocoder</span>:<span class="literal">true</span>,         <span class="comment">//地址编码</span></span></span><br><span class="line"><span class="language-javascript"><span class="attr">baseLayerPicker</span>:<span class="literal">true</span>, <span class="comment">//图层选择控件</span></span></span><br><span class="line"><span class="language-javascript"><span class="attr">timeline</span>:<span class="literal">true</span>,        <span class="comment">//时间轴</span></span></span><br><span class="line"><span class="language-javascript"><span class="attr">fullscreenButton</span>:<span class="literal">true</span>, <span class="comment">//全屏显示</span></span></span><br><span class="line"><span class="language-javascript"><span class="attr">infoBox</span>:<span class="literal">true</span>,         <span class="comment">//点击要素之后浮窗</span></span></span><br><span class="line"><span class="language-javascript"><span class="attr">sceneModePicker</span>:<span class="literal">true</span>,  <span class="comment">//投影方式  三维/二维</span></span></span><br><span class="line"><span class="language-javascript"><span class="attr">navigationInstructionsInitiallyVisible</span>:<span class="literal">true</span>, <span class="comment">//导航指令</span></span></span><br><span class="line"><span class="language-javascript"><span class="attr">navigationHelpButton</span>:<span class="literal">true</span>,     <span class="comment">//帮助信息</span></span></span><br><span class="line"><span class="language-javascript"><span class="attr">selectionIndicator</span>:<span class="literal">true</span>, <span class="comment">// 选择</span></span></span><br><span class="line"><span class="language-javascript"><span class="attr">imageryProvider</span>: <span class="keyword">new</span> <span class="variable language_">window</span>.<span class="property">Cesium</span>.<span class="title class_">WebMapTileServiceImageryProvider</span>(&#123;</span></span><br><span class="line"><span class="language-javascript"><span class="comment">//影像底图,</span></span></span><br><span class="line"><span class="language-javascript"><span class="attr">url</span>: <span class="string">&quot;http://t0.tianditu.gov.cn/ter_c/wmts?tk=&quot;</span>+token,<span class="comment">//天地图的地图晕眩-经纬度</span></span></span><br><span class="line"><span class="language-javascript"><span class="comment">//url: &quot;http://t0.tianditu.gov.cn/ter_w/wmts?tk=&quot;+token,//天地图的地图晕眩-球面墨卡托</span></span></span><br><span class="line"><span class="language-javascript"><span class="attr">subdomains</span>: subdomains,</span></span><br><span class="line"><span class="language-javascript"><span class="attr">layer</span>: <span class="string">&quot;tdtImgLayer&quot;</span>,</span></span><br><span class="line"><span class="language-javascript"><span class="attr">style</span>: <span class="string">&quot;default&quot;</span>,</span></span><br><span class="line"><span class="language-javascript"><span class="attr">format</span>: <span class="string">&quot;image/jpeg&quot;</span>,</span></span><br><span class="line"><span class="language-javascript"><span class="attr">tileMatrixSetID</span>: <span class="string">&quot;GoogleMapsCompatible&quot;</span>,<span class="comment">//使用谷歌的瓦片切片方式</span></span></span><br><span class="line"><span class="language-javascript"><span class="attr">show</span>: <span class="literal">true</span></span></span><br><span class="line"><span class="language-javascript">&#125;)</span></span><br><span class="line"><span class="language-javascript">&#125;);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">viewer.<span class="property">imageryLayers</span>.<span class="title function_">addImageryProvider</span>(<span class="keyword">new</span> <span class="variable language_">window</span>.<span class="property">Cesium</span>.<span class="title class_">WebMapTileServiceImageryProvider</span>(&#123;</span></span><br><span class="line"><span class="language-javascript"><span class="comment">//影像注记</span></span></span><br><span class="line"><span class="language-javascript"><span class="comment">//url: &quot;http://t0.tianditu.gov.cn/cta_c/wmts?tk=&quot;+token,//天地图的地形标注-经纬度</span></span></span><br><span class="line"><span class="language-javascript"><span class="attr">url</span>: <span class="string">&quot;http://t0.tianditu.gov.cn/cta_w/wmts?tk=&quot;</span>+token,<span class="comment">//天地图的地形标注-球面墨卡托</span></span></span><br><span class="line"><span class="language-javascript"><span class="attr">subdomains</span>: subdomains,</span></span><br><span class="line"><span class="language-javascript"><span class="attr">layer</span>: <span class="string">&quot;tdtCiaLayer&quot;</span>,</span></span><br><span class="line"><span class="language-javascript"><span class="attr">style</span>: <span class="string">&quot;default&quot;</span>,</span></span><br><span class="line"><span class="language-javascript"><span class="attr">format</span>: <span class="string">&quot;image/jpeg&quot;</span>,</span></span><br><span class="line"><span class="language-javascript"><span class="attr">tileMatrixSetID</span>: <span class="string">&quot;GoogleMapsCompatible&quot;</span>,</span></span><br><span class="line"><span class="language-javascript"><span class="attr">show</span>: <span class="literal">true</span></span></span><br><span class="line"><span class="language-javascript">&#125;));</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">viewer.<span class="property">camera</span>.<span class="title function_">setView</span>(&#123;</span></span><br><span class="line"><span class="language-javascript"><span class="comment">// fromDegrees()方法，将经纬度和高程转换为世界坐标</span></span></span><br><span class="line"><span class="language-javascript"><span class="attr">destination</span>:<span class="title class_">Cesium</span>.<span class="property">Cartesian3</span>.<span class="title function_">fromDegrees</span>(-<span class="number">121.9068641</span>,<span class="number">56.20149076</span>,<span class="number">20000000</span>),</span></span><br><span class="line"><span class="language-javascript"><span class="attr">orientation</span>:&#123;</span></span><br><span class="line"><span class="language-javascript"><span class="comment">// 指向</span></span></span><br><span class="line"><span class="language-javascript"><span class="attr">heading</span>:<span class="title class_">Cesium</span>.<span class="property">Math</span>.<span class="title function_">toRadians</span>(<span class="number">270</span>,<span class="number">0</span>),</span></span><br><span class="line"><span class="language-javascript"><span class="comment">// 视角</span></span></span><br><span class="line"><span class="language-javascript"><span class="attr">pitch</span>:<span class="title class_">Cesium</span>.<span class="property">Math</span>.<span class="title function_">toRadians</span>(-<span class="number">90</span>),</span></span><br><span class="line"><span class="language-javascript"><span class="attr">roll</span>:<span class="number">0.0</span></span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript">&#125;);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">viewer.<span class="property">scene</span>.<span class="property">mode</span> = <span class="title class_">Cesium</span>.<span class="property">SceneMode</span>.<span class="property">SCENE2D</span>;<span class="comment">// 2D 模式</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>矢量底图</li></ul><img src="/2024/08/06/Cesium-%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/%E5%A4%A9%E5%9C%B0%E5%9B%BE_%E7%9F%A2%E9%87%8F%E5%BA%95%E5%9B%BE.png" class="" title="天地图_矢量底图"><p>经纬度投影：<a href="http://t0.tianditu.gov.cn/vec_c/wmts?tk=您的密钥">http://t0.tianditu.gov.cn/vec_c/wmts?tk=您的密钥</a></p><p>球面墨卡托投影：<a href="http://t0.tianditu.gov.cn/vec_w/wmts?tk=您的密钥">http://t0.tianditu.gov.cn/vec_w/wmts?tk=您的密钥</a></p><ul><li>矢量注记</li></ul><img src="/2024/08/06/Cesium-%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/%E5%A4%A9%E5%9C%B0%E5%9B%BE_%E7%9F%A2%E9%87%8F%E6%B3%A8%E8%AE%B0.png" class="" title="天地图_矢量注记"><p>经纬度投影：<a href="http://t0.tianditu.gov.cn/cva_c/wmts?tk=您的密钥">http://t0.tianditu.gov.cn/cva_c/wmts?tk=您的密钥</a></p><p>球面墨卡托投影：<a href="http://t0.tianditu.gov.cn/cva_w/wmts?tk=您的密钥">http://t0.tianditu.gov.cn/cva_w/wmts?tk=您的密钥</a></p><ul><li>影像底图</li></ul><img src="/2024/08/06/Cesium-%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/%E5%A4%A9%E5%9C%B0%E5%9B%BE_%E5%BD%B1%E5%83%8F%E5%BA%95%E5%9B%BE.png" class="" title="天地图_影像底图"><p>经纬度投影：<a href="http://t0.tianditu.gov.cn/img_c/wmts?tk=您的密钥">http://t0.tianditu.gov.cn/img_c/wmts?tk=您的密钥</a></p><p>球面墨卡托投影：<a href="http://t0.tianditu.gov.cn/img_w/wmts?tk=您的密钥">http://t0.tianditu.gov.cn/img_w/wmts?tk=您的密钥</a></p><ul><li>影像注记</li></ul><img src="/2024/08/06/Cesium-%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/%E5%A4%A9%E5%9C%B0%E5%9B%BE_%E5%BD%B1%E5%83%8F%E6%B3%A8%E8%AE%B0.png" class="" title="天地图_影像注记"><p>经纬度投影：<a href="http://t0.tianditu.gov.cn/cia_c/wmts?tk=您的密钥">http://t0.tianditu.gov.cn/cia_c/wmts?tk=您的密钥</a></p><p>球面墨卡托投影：<a href="http://t0.tianditu.gov.cn/cia_w/wmts?tk=您的密钥">http://t0.tianditu.gov.cn/cia_w/wmts?tk=您的密钥</a></p><ul><li>地形晕眩</li></ul><img src="/2024/08/06/Cesium-%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/%E5%A4%A9%E5%9C%B0%E5%9B%BE_%E5%9C%B0%E5%BD%A2%E6%99%95%E7%9C%A9.png" class="" title="天地图_地形晕眩"><p>经纬度投影：<a href="http://t0.tianditu.gov.cn/ter_c/wmts?tk=您的密钥">http://t0.tianditu.gov.cn/ter_c/wmts?tk=您的密钥</a></p><p>球面墨卡托投影：<a href="http://t0.tianditu.gov.cn/ter_w/wmts?tk=您的密钥">http://t0.tianditu.gov.cn/ter_w/wmts?tk=您的密钥</a></p><ul><li>地形注记</li></ul><img src="/2024/08/06/Cesium-%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/%E5%A4%A9%E5%9C%B0%E5%9B%BE_%E5%9C%B0%E5%BD%A2%E6%B3%A8%E8%AE%B0.png" class="" title="天地图_地形注记"><p>经纬度投影：<a href="http://t0.tianditu.gov.cn/cta_c/wmts?tk=您的密钥">http://t0.tianditu.gov.cn/cta_c/wmts?tk=您的密钥</a></p><p>球面墨卡托投影：<a href="http://t0.tianditu.gov.cn/cta_w/wmts?tk=您的密钥">http://t0.tianditu.gov.cn/cta_w/wmts?tk=您的密钥</a></p><ul><li>全球境界</li></ul><img src="/2024/08/06/Cesium-%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/%E5%A4%A9%E5%9C%B0%E5%9B%BE_%E5%85%A8%E7%90%83%E5%A2%83%E7%95%8C.png" class="" title="天地图_全球境界"><p>经纬度投影：<a href="http://t0.tianditu.gov.cn/ibo_c/wmts?tk=您的密钥">http://t0.tianditu.gov.cn/ibo_c/wmts?tk=您的密钥</a></p><p>球面墨卡托投影：<a href="http://t0.tianditu.gov.cn/ibo_w/wmts?tk=您的密钥">http://t0.tianditu.gov.cn/ibo_w/wmts?tk=您的密钥</a></p><ul><li>三维地名</li></ul><img src="/2024/08/06/Cesium-%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/%E5%A4%A9%E5%9C%B0%E5%9B%BE_%E4%B8%89%E7%BB%B4%E5%9C%B0%E5%90%8D.png" class="" title="天地图_三维地名"><p>调用说明：<a href="http://lbs.tianditu.gov.cn/docs/#/sanwei/">http://lbs.tianditu.gov.cn/docs/#/sanwei/</a></p><p>cesuim扩展包：<a href="http://lbs.tianditu.gov.cn/docs/#/sanwei/">http://lbs.tianditu.gov.cn/docs/#/sanwei/</a></p><p>服务地址：https://[ t0-t7 ].tianditu.gov.cn/mapservice/GetTiles?tk=您的密钥</p><ul><li>三维地形</li></ul><img src="/2024/08/06/Cesium-%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/%E5%A4%A9%E5%9C%B0%E5%9B%BE_%E4%B8%89%E7%BB%B4%E5%9C%B0%E5%BD%A2.jpg" class="" title="天地图_三维地形"><p>调用说明：<a href="http://lbs.tianditu.gov.cn/docs/#/sanwei/">http://lbs.tianditu.gov.cn/docs/#/sanwei/</a></p><p>cesuim扩展包：<a href="http://lbs.tianditu.gov.cn/docs/#/sanwei/">http://lbs.tianditu.gov.cn/docs/#/sanwei/</a></p><p>服务地址：https://[ t0-t7 ].tianditu.gov.cn/mapservice/swdx?tk=您的密钥</p><ul><li>备注</li></ul><p>天地图地图服务二级域名包括t0-t7，您可以随机选择使用，如<a href="http://t2.tianditu.gov.cn/vec_c/wmts?tk=您的密钥">http://t2.tianditu.gov.cn/vec_c/wmts?tk=您的密钥</a></p><p>元数据查询：<br><a href="http://t0.tianditu.gov.cn/img_w/wmts?request=GetCapabilities&amp;service=wmts">http://t0.tianditu.gov.cn/img_w/wmts?request=GetCapabilities&amp;service=wmts</a></p><p>地图瓦片获取：<br><a href="http://t0.tianditu.gov.cn/img_w/wmts?SERVICE=WMTS&amp;REQUEST=GetTile&amp;VERSION=1.0.0&amp;LAYER=img&amp;STYLE=default&amp;TILEMATRIXSET=w&amp;FORMAT=tiles&amp;TILEMATRIX={z}&amp;TILEROW={y}&amp;TILECOL={x}&amp;tk=您的密钥">http://t0.tianditu.gov.cn/img_w/wmts?SERVICE=WMTS&amp;REQUEST=GetTile&amp;VERSION=1.0.0&amp;LAYER=img&amp;STYLE=default&amp;TILEMATRIXSET=w&amp;FORMAT=tiles&amp;TILEMATRIX={z}&amp;TILEROW={y}&amp;TILECOL={x}&amp;tk=您的密钥</a></p><h1 id="画点"><a href="#画点" class="headerlink" title="画点"></a>画点</h1><h2 id="月球点案例"><a href="#月球点案例" class="headerlink" title="月球点案例"></a>月球点案例</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> pointsOfInterest = [</span></span><br><span class="line"><span class="language-javascript">  &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">text</span>: <span class="string">&quot;Apollo 11&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">latitude</span>: <span class="number">0.67416</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">longitude</span>: <span class="number">23.47315</span>,</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">  &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">text</span>: <span class="string">&quot;Apollo 14&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">latitude</span>: -<span class="number">3.64417</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">longitude</span>: <span class="number">342.52135</span>,</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">  &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">text</span>: <span class="string">&quot;Apollo 15&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">latitude</span>: <span class="number">26.13341</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">longitude</span>: <span class="number">3.6285</span>,</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">  &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">text</span>: <span class="string">&quot;Lunokhod 1&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">latitude</span>: <span class="number">38.2378</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">longitude</span>: -<span class="number">35.0017</span>,</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">  &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">text</span>: <span class="string">&quot;Lunokhod 2&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">latitude</span>: <span class="number">25.83232</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">longitude</span>: <span class="number">30.92215</span>,</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">];</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">// Natural Earth II with Shaded Relief, Water, and Drainages from http://www.naturalearthdata.com</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> viewer = <span class="keyword">new</span> <span class="title class_">Cesium</span>.<span class="title class_">Viewer</span>(<span class="string">&quot;cesiumContainer&quot;</span>, &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">baseLayer</span>: <span class="title class_">Cesium</span>.<span class="property">ImageryLayer</span>.<span class="title function_">fromProviderAsync</span>(</span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">Cesium</span>.<span class="property">IonImageryProvider</span>.<span class="title function_">fromAssetId</span>(<span class="number">3813</span>)</span></span><br><span class="line"><span class="language-javascript">  ),</span></span><br><span class="line"><span class="language-javascript">&#125;);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">viewer.<span class="property">entities</span>.<span class="title function_">add</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">position</span>: <span class="title class_">Cesium</span>.<span class="property">Cartesian3</span>.<span class="title function_">fromDegrees</span>(-<span class="number">121.9068641</span>,<span class="number">56.20149076</span>),</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">point</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">color</span>: <span class="title class_">Cesium</span>.<span class="property">Color</span>.<span class="property">YELLOW</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">pixelSize</span>: <span class="number">10</span></span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="添加多个点"><a href="#添加多个点" class="headerlink" title="添加多个点"></a>添加多个点</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">// 使用提供的坐标创建点位置数组</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> positions = [</span></span><br><span class="line"><span class="language-javascript">  [<span class="number">56.20149</span>, -<span class="number">121.906864</span>],</span></span><br><span class="line"><span class="language-javascript">  [<span class="number">57.00581</span>, -<span class="number">122.605421</span>],</span></span><br><span class="line"><span class="language-javascript">  [<span class="number">57.00405</span>, -<span class="number">122.682536</span>],</span></span><br><span class="line"><span class="language-javascript">  [<span class="number">57.06126</span>, -<span class="number">122.344514</span>],</span></span><br><span class="line"><span class="language-javascript">  [<span class="number">57.54797</span>, -<span class="number">122.754017</span>],</span></span><br><span class="line"><span class="language-javascript">  [<span class="number">57.33774</span>, -<span class="number">122.300309</span>],</span></span><br><span class="line"><span class="language-javascript">  [<span class="number">57.58799</span>, -<span class="number">122.798906</span>],</span></span><br><span class="line"><span class="language-javascript">  [<span class="number">56.23782</span>, -<span class="number">122.059896</span>],</span></span><br><span class="line"><span class="language-javascript">  [<span class="number">56.66702</span>, -<span class="number">122.241126</span>],</span></span><br><span class="line"><span class="language-javascript">  [<span class="number">56.96679</span>, -<span class="number">122.183874</span>],</span></span><br><span class="line"><span class="language-javascript">  [<span class="number">56.99772</span>, -<span class="number">122.251137</span>],</span></span><br><span class="line"><span class="language-javascript">  [<span class="number">52.42144</span>, -<span class="number">122.44831</span>],</span></span><br><span class="line"><span class="language-javascript">  [<span class="number">56.38861</span>, -<span class="number">122.31356</span>],</span></span><br><span class="line"><span class="language-javascript">  [<span class="number">56.87023</span>, -<span class="number">122.12061</span>]</span></span><br><span class="line"><span class="language-javascript">];</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">// 为每个位置添加一个点实体</span></span></span><br><span class="line"><span class="language-javascript">positions.<span class="title function_">forEach</span>(<span class="function">(<span class="params">pos, index</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">  viewer.<span class="property">entities</span>.<span class="title function_">add</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">position</span>: <span class="title class_">Cesium</span>.<span class="property">Cartesian3</span>.<span class="title function_">fromDegrees</span>(pos[<span class="number">1</span>], pos[<span class="number">0</span>]),  <span class="comment">// 注意：经度在前，纬度在后</span></span></span><br><span class="line"><span class="language-javascript">    <span class="attr">point</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">color</span>: <span class="title class_">Cesium</span>.<span class="property">Color</span>.<span class="title function_">fromRandom</span>(&#123;<span class="attr">alpha</span>: <span class="number">1.0</span>&#125;), <span class="comment">// 随机颜色</span></span></span><br><span class="line"><span class="language-javascript">      <span class="attr">pixelSize</span>: <span class="number">10</span>,</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">label</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">text</span>: <span class="string">`Point <span class="subst">$&#123;index + <span class="number">1</span>&#125;</span>`</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">font</span>: <span class="string">&#x27;14pt sans-serif&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">horizontalOrigin</span>: <span class="title class_">Cesium</span>.<span class="property">HorizontalOrigin</span>.<span class="property">LEFT</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">verticalOrigin</span>: <span class="title class_">Cesium</span>.<span class="property">VerticalOrigin</span>.<span class="property">BOTTOM</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">pixelOffset</span>: <span class="keyword">new</span> <span class="title class_">Cesium</span>.<span class="title class_">Cartesian2</span>(<span class="number">5</span>, <span class="number">5</span>)</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;);</span></span><br><span class="line"><span class="language-javascript">&#125;);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">// 设置相机视角以适应所有点</span></span></span><br><span class="line"><span class="language-javascript">viewer.<span class="title function_">zoomTo</span>(viewer.<span class="property">entities</span>);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="设置中心点"><a href="#设置中心点" class="headerlink" title="设置中心点"></a>设置中心点</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">viewer.camera.setView(&#123;</span><br><span class="line">    // fromDegrees()方法，将经纬度和高程转换为世界坐标</span><br><span class="line">    destination:Cesium.Cartesian3.fromDegrees(117.48,30.67,15000.0),</span><br><span class="line">    orientation:&#123;</span><br><span class="line">    // 指向</span><br><span class="line">    heading:Cesium.Math.toRadians(90,0),</span><br><span class="line">    // 视角</span><br><span class="line">    pitch:Cesium.Math.toRadians(-90),</span><br><span class="line">    roll:0.0</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">viewer.camera.flyTo(&#123;</span><br><span class="line">    // fromDegrees()方法，将经纬度和高程转换为世界坐标</span><br><span class="line">    destination:Cesium.Cartesian3.fromDegrees(117.48,30.67,15000.0),</span><br><span class="line">    orientation:&#123;</span><br><span class="line">    // 指向</span><br><span class="line">    heading:Cesium.Math.toRadians(90,0),</span><br><span class="line">    // 视角</span><br><span class="line">    pitch:Cesium.Math.toRadians(-90),</span><br><span class="line">    roll:0.0</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h1 id="设置默认显示模式"><a href="#设置默认显示模式" class="headerlink" title="设置默认显示模式"></a>设置默认显示模式</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">// 2.5D 哥伦布模式</span><br><span class="line">viewer.scene.mode = Cesium.SceneMode.COLUMBUS_VIEW;</span><br><span class="line">// 2D 模式</span><br><span class="line">viewer.scene.mode = Cesium.SceneMode.SCENE2D;</span><br><span class="line">// 3D 模式</span><br><span class="line">viewer.scene.mode = Cesium.SceneMode.SCENE3D;</span><br><span class="line">// 变形模式</span><br><span class="line">viewer.scene.mode = Cesium.SceneMode.MORPHING;</span><br></pre></td></tr></table></figure><h1 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">saveToFile</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> canvas = viewer.<span class="property">scene</span>.<span class="property">canvas</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> image = canvas.<span class="title function_">toDataURL</span>(<span class="string">&quot;image/png&quot;</span>).<span class="title function_">replace</span>(<span class="string">&quot;image/png&quot;</span>, <span class="string">&quot;image/octet-stream&quot;</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> link = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;a&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> blob = <span class="title function_">dataURLtoBlob</span>(image);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> objurl = <span class="variable constant_">URL</span>.<span class="title function_">createObjectURL</span>(blob);</span></span><br><span class="line"><span class="language-javascript">        link.<span class="property">download</span> = <span class="string">&quot;scene.png&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">        link.<span class="property">href</span> = objurl;</span></span><br><span class="line"><span class="language-javascript">        link.<span class="title function_">click</span>();</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">dataURLtoBlob</span>(<span class="params">dataurl</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> arr = dataurl.<span class="title function_">split</span>(<span class="string">&#x27;,&#x27;</span>),</span></span><br><span class="line"><span class="language-javascript">        mime = arr[<span class="number">0</span>].<span class="title function_">match</span>(<span class="regexp">/:(.*?);/</span>)[<span class="number">1</span>],</span></span><br><span class="line"><span class="language-javascript">        bstr = <span class="title function_">atob</span>(arr[<span class="number">1</span>]),</span></span><br><span class="line"><span class="language-javascript">        n = bstr.<span class="property">length</span>,</span></span><br><span class="line"><span class="language-javascript">        u8arr = <span class="keyword">new</span> <span class="title class_">Uint8Array</span>(n);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">while</span> (n--) &#123;</span></span><br><span class="line"><span class="language-javascript">        u8arr[n] = bstr.<span class="title function_">charCodeAt</span>(n);</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Blob</span>([u8arr], &#123; <span class="attr">type</span>: mime &#125;);</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;toolbar&quot;</span> <span class="attr">class</span>=<span class="string">&quot;param-container tool-bar layui-form-item&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span>  <span class="attr">onclick</span>=<span class="string">&quot;saveToFile()&quot;</span>&gt;</span>场景出图<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="沙盒代码"><a href="#沙盒代码" class="headerlink" title="沙盒代码"></a>沙盒代码</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">// Natural Earth II 3831</span><br><span class="line">const viewer = new Cesium.Viewer(&quot;cesiumContainer&quot;, &#123;</span><br><span class="line">  baseLayer: Cesium.ImageryLayer.fromProviderAsync(</span><br><span class="line">    Cesium.IonImageryProvider.fromAssetId(3813)</span><br><span class="line">  ),</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">viewer.camera.setView(&#123;</span><br><span class="line">    // fromDegrees()方法，将经纬度和高程转换为世界坐标</span><br><span class="line">    destination:Cesium.Cartesian3.fromDegrees(-121.9068641,56.20149076,20000000),</span><br><span class="line">    orientation:&#123;</span><br><span class="line">    // 指向</span><br><span class="line">    heading:Cesium.Math.toRadians(270,0),</span><br><span class="line">    // 视角</span><br><span class="line">    pitch:Cesium.Math.toRadians(-90),</span><br><span class="line">    roll:0.0</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">viewer.entities.add(&#123;</span><br><span class="line">  position: Cesium.Cartesian3.fromDegrees(-121.9068641,56.20149076),</span><br><span class="line">  point: &#123;</span><br><span class="line">    color: Cesium.Color.YELLOW,</span><br><span class="line">    pixelSize: 10</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">// Natural Earth II 3831</span><br><span class="line">const viewer = new Cesium.Viewer(&quot;cesiumContainer&quot;, &#123;</span><br><span class="line">  baseLayer: Cesium.ImageryLayer.fromProviderAsync(</span><br><span class="line">    Cesium.IonImageryProvider.fromAssetId(3813)</span><br><span class="line">  ),</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">// 设置相机视角以覆盖所有点</span><br><span class="line">viewer.camera.setView(&#123;</span><br><span class="line">  destination: Cesium.Cartesian3.fromDegrees(-122.5, 55, 1000000),</span><br><span class="line">  orientation: &#123;</span><br><span class="line">    heading: Cesium.Math.toRadians(0),</span><br><span class="line">    pitch: Cesium.Math.toRadians(-45),</span><br><span class="line">    roll: 0.0</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">// 使用提供的坐标创建点位置数组</span><br><span class="line">const positions = [</span><br><span class="line">  [56.20149, -121.906864],</span><br><span class="line">  [57.00581, -122.605421],</span><br><span class="line">  [57.00405, -122.682536],</span><br><span class="line">  [57.06126, -122.344514],</span><br><span class="line">  [57.54797, -122.754017],</span><br><span class="line">  [57.33774, -122.300309],</span><br><span class="line">  [57.58799, -122.798906],</span><br><span class="line">  [56.23782, -122.059896],</span><br><span class="line">  [56.66702, -122.241126],</span><br><span class="line">  [56.96679, -122.183874],</span><br><span class="line">  [56.99772, -122.251137],</span><br><span class="line">  [52.42144, -122.44831],</span><br><span class="line">  [56.38861, -122.31356],</span><br><span class="line">  [56.87023, -122.12061]</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line">// 为每个位置添加一个点实体</span><br><span class="line">positions.forEach((pos, index) =&gt; &#123;</span><br><span class="line">  viewer.entities.add(&#123;</span><br><span class="line">    position: Cesium.Cartesian3.fromDegrees(pos[1], pos[0]),  // 注意：经度在前，纬度在后</span><br><span class="line">    point: &#123;</span><br><span class="line">      color: Cesium.Color.fromRandom(&#123;alpha: 1.0&#125;), // 随机颜色</span><br><span class="line">      pixelSize: 10,</span><br><span class="line">    &#125;,</span><br><span class="line">    label: &#123;</span><br><span class="line">      text: `Point $&#123;index + 1&#125;`,</span><br><span class="line">      font: &#x27;14pt sans-serif&#x27;,</span><br><span class="line">      horizontalOrigin: Cesium.HorizontalOrigin.LEFT,</span><br><span class="line">      verticalOrigin: Cesium.VerticalOrigin.BOTTOM,</span><br><span class="line">      pixelOffset: new Cesium.Cartesian2(5, 5)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">// 设置相机视角以适应所有点</span><br><span class="line">viewer.zoomTo(viewer.entities);</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">// Natural Earth II 3831</span><br><span class="line">const viewer = new Cesium.Viewer(&quot;cesiumContainer&quot;, &#123;</span><br><span class="line">  baseLayer: Cesium.ImageryLayer.fromProviderAsync(</span><br><span class="line">    Cesium.IonImageryProvider.fromAssetId(3831)</span><br><span class="line">  ),</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">viewer.camera.setView(&#123;</span><br><span class="line">    // fromDegrees()方法，将经纬度和高程转换为世界坐标</span><br><span class="line">    destination:Cesium.Cartesian3.fromDegrees(-121.9068641,56.20149076,20000000),</span><br><span class="line">    orientation:&#123;</span><br><span class="line">    // 指向</span><br><span class="line">    heading:Cesium.Math.toRadians(0,0),</span><br><span class="line">    // 视角</span><br><span class="line">    pitch:Cesium.Math.toRadians(-90),</span><br><span class="line">    roll:0.0</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">viewer.entities.add(&#123;</span><br><span class="line">  position: Cesium.Cartesian3.fromDegrees(-121.9068641,56.20149076),</span><br><span class="line">  point: &#123;</span><br><span class="line">    color: Cesium.Color.YELLOW,</span><br><span class="line">    pixelSize: 10</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">// 定义多个点的数据</span><br><span class="line">const points = [</span><br><span class="line">    &#123; lon: -121.9068641, lat: 56.20149076, color: Cesium.Color.YELLOW, pixes: 10 &#125;,</span><br><span class="line">    &#123; lon: -122.6054214, lat: 57.00580928, color: Cesium.Color.YELLOW, pixes: 10 &#125;,</span><br><span class="line">    &#123; lon: -122.6825364, lat: 57.004054, color: Cesium.Color.YELLOW, pixes: 10 &#125;,</span><br><span class="line">    &#123; lon: -122.3445136, lat: 57.06126005, color: Cesium.Color.YELLOW, pixes: 10 &#125;,</span><br><span class="line">    &#123; lon: -122.7540172, lat: 57.54796791, color: Cesium.Color.YELLOW, pixes: 10 &#125;,</span><br><span class="line">    &#123; lon: -122.3003092, lat: 57.33774351, color: Cesium.Color.YELLOW, pixes: 10 &#125;,</span><br><span class="line">    &#123; lon: -122.7989062, lat: 57.58799072, color: Cesium.Color.YELLOW, pixes: 10 &#125;,</span><br><span class="line">    &#123; lon: -122.0598957, lat: 56.23781614, color: Cesium.Color.YELLOW, pixes: 10 &#125;,</span><br><span class="line">    &#123; lon: -122.2411258, lat: 56.66701811, color: Cesium.Color.YELLOW, pixes: 10 &#125;,</span><br><span class="line">    &#123; lon: -122.1838739, lat: 56.96678936, color: Cesium.Color.YELLOW, pixes: 10 &#125;,</span><br><span class="line">    &#123; lon: -122.251137, lat: 56.99771651, color: Cesium.Color.YELLOW, pixes: 10 &#125;,</span><br><span class="line">    &#123; lon: -122.44831, lat: 52.42144, color: Cesium.Color.YELLOW, pixes: 10 &#125;,</span><br><span class="line">    &#123; lon: -122.31356, lat: 56.38861, color: Cesium.Color.YELLOW, pixes: 10 &#125;,</span><br><span class="line">    &#123; lon: -122.12061, lat: 56.87023, color: Cesium.Color.YELLOW, pixes: 10 &#125;</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line">// 遍历点数据并添加到地图上</span><br><span class="line">points.forEach(point =&gt; &#123;</span><br><span class="line">    viewer.entities.add(&#123;</span><br><span class="line">        position: Cesium.Cartesian3.fromDegrees(point.lon, point.lat),</span><br><span class="line">        point: &#123;</span><br><span class="line">            color: point.color,</span><br><span class="line">            pixelSize: point.pixes</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">Cesium-使用指南</summary>
    
    
    
    <category term="科研利器" scheme="http://hibiscidai.com/categories/%E7%A7%91%E7%A0%94%E5%88%A9%E5%99%A8/"/>
    
    
    <category term="学习笔记" scheme="http://hibiscidai.com/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term="软件" scheme="http://hibiscidai.com/tags/%E8%BD%AF%E4%BB%B6/"/>
    
    <category term="石油地质" scheme="http://hibiscidai.com/tags/%E7%9F%B3%E6%B2%B9%E5%9C%B0%E8%B4%A8/"/>
    
  </entry>
  
  <entry>
    <title>CGAN-TensorFlow</title>
    <link href="http://hibiscidai.com/2024/07/10/CGAN-TensorFlow/"/>
    <id>http://hibiscidai.com/2024/07/10/CGAN-TensorFlow/</id>
    <published>2024-07-10T09:00:00.000Z</published>
    <updated>2024-07-11T09:24:39.000Z</updated>
    
    <content type="html"><![CDATA[<img src="/2024/07/10/CGAN-TensorFlow/CGAN-TensorFlow.png" class="" title="CGAN-TensorFlow"><p>CGAN-TensorFlow</p><span id="more"></span><p>[TOC]</p><h1 id="CGAN-TensorFlow"><a href="#CGAN-TensorFlow" class="headerlink" title="CGAN-TensorFlow"></a>CGAN-TensorFlow</h1><p>原文链接：<a href="https://agustinus.kristia.de/techblog/2016/12/24/conditional-gan-tensorflow/">Conditional Generative Adversarial Nets in TensorFlow</a></p><p>We have seen the Generative Adversarial Nets (GAN) model in the previous post. We have also seen the arch nemesis of GAN, the VAE and its conditional variation: Conditional VAE (CVAE). Hence, it is only proper for us to study conditional variation of GAN, called Conditional GAN or CGAN for short.<br>我们在上一篇文章中看到了生成对抗网络（GAN）模型。我们还看到了 GAN 的死对头，VAE 及其条件变体：条件 VAE（CVAE）。因此，我们研究 GAN 的条件变体（称为条件 GAN 或简称 CGAN）是再合适不过的了。</p><h1 id="CGAN-Formulation-and-Architecture"><a href="#CGAN-Formulation-and-Architecture" class="headerlink" title="CGAN: Formulation and Architecture"></a>CGAN: Formulation and Architecture</h1><p>Recall, in GAN, we have two neural nets: the generator <script type="math/tex">G(z)</script>  and the discriminator <script type="math/tex">D(X)</script>.<br>Now, as we want to condition those networks with some vector <script type="math/tex">y</script>, the easiest way to do it is to feed <script type="math/tex">y</script> into both networks. Hence, our generator and discriminator are now <script type="math/tex">G(z,y)</script>  and  <script type="math/tex">D(X,y)</script> respectively.<br>回想一下，在 GAN 中，我们有两个神经网络：生成器 <script type="math/tex">G(z)</script> 和鉴别器 <script type="math/tex">D(X)</script>。<br>现在，由于我们想用某个向量 <script type="math/tex">y</script> 来调节这些网络，最简单的方法是将 <script type="math/tex">y</script> 输入两个网络。因此，我们的生成器和鉴别器现在分别是 <script type="math/tex">G(z,y)</script> 和 <script type="math/tex">D(X,y)</script>。</p><p>We can see it with a probabilistic point of view. <script type="math/tex">G(z,y)</script> is modeling the distribution of our data, given  <script type="math/tex">z</script> and  <script type="math/tex">y</script>, that is, our data is generated with this scheme <script type="math/tex">X~G(X|z，y)</script>.<br>我们可以用概率的角度来看待它。给定<script type="math/tex">z</script>和<script type="math/tex">y</script>，<script type="math/tex">G(z,y)</script>正在对我们的数据分布进行建模，也就是说，我们的数据是用这个方案<script type="math/tex">X \sim G(X|z，y)</script>生成的。</p><p>Likewise for the discriminator, now it tries to find discriminating label for <script type="math/tex">X</script> and <script type="math/tex">X_G</script>, that are modeled with <script type="math/tex">d \sim D(d|X,y)</script>.<br>同样对于鉴别器来说，现在它试图为 <script type="math/tex">X</script> 和 <script type="math/tex">X_G</script> 找到鉴别标签，用 <script type="math/tex">d \sim D(d|X,y)</script> 建模。</p><p>Hence, we could see that both <script type="math/tex">D</script> and <script type="math/tex">G</script> is jointly conditioned to two variables <script type="math/tex">z</script> or <script type="math/tex">X</script> and <script type="math/tex">y</script>.<br>因此，我们可以看到 <script type="math/tex">D</script> 和 <script type="math/tex">G</script> 都与两个变量 <script type="math/tex">z</script> 或 <script type="math/tex">X</script> 和 <script type="math/tex">y</script> 联合相关。</p><p>Now, the objective function is given by:<br>现在，目标函数如下：</p><script type="math/tex; mode=display">\min_G\max_DV(D,G)=\mathbb{E}_{x\sim p_{data}(x)}[\log D(x,y)]+\mathbb{E}_{z\sim p_z(z)}[\log(1-D(G(z,y),y))]</script><p>If we compare the above loss to GAN loss, the difference only lies in the additional parameter <script type="math/tex">y</script> in both <script type="math/tex">D</script> and <script type="math/tex">G</script>.<br>如果我们将上述损失与 GAN 损失进行比较，差异仅在于 <script type="math/tex">D</script> 和 <script type="math/tex">G</script> 中的附加参数 <script type="math/tex">y</script>。</p><p>The architecture of CGAN is now as follows (taken from [1]):<br>CGAN 的架构如下（取自[1]）：</p><img src="/2024/07/10/CGAN-TensorFlow/CGAN%E7%BD%91%E7%BB%9C%E7%BB%93%E6%9E%84.png" class="" title="CGAN网络结构"><p>In contrast with the architecture of GAN, we now has an additional input layer in both discriminator net and generator net.<br>与 GAN 的架构相比，我们现在在鉴别器网络和生成器网络中都增加了一个输入层。</p><h1 id="CGAN-Implementation-in-TensorFlow"><a href="#CGAN-Implementation-in-TensorFlow" class="headerlink" title="CGAN: Implementation in TensorFlow"></a>CGAN: Implementation in TensorFlow</h1><p>I’d like to direct the reader to the previous post about GAN, particularly for the implementation in TensorFlow. Implementing CGAN is so simple that we just need to add a handful of lines to the original GAN implementation. So, here we will only look at those modifications.<br>我想引导读者阅读上一篇关于 GAN 的文章，特别是关于在 TensorFlow 中的实现。实现 CGAN 非常简单，我们只需要在原始 GAN 实现中添加几行代码即可。因此，我们在这里只讨论这些修改。</p><p><a href="https://agustinus.kristia.de/techblog/2016/09/17/gan-tensorflow/">Generative Adversarial Nets in TensorFlow</a></p><p>The first additional code for CGAN is here:<br>CGAN 的第一个附加代码在这里：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">y = tf.placeholder(tf.float32, shape=[<span class="literal">None</span>, y_dim])</span><br></pre></td></tr></table></figure><p>We are adding new input to hold our variable we are conditioning our CGAN to.<br>我们正在添加新输入来保存我们用来调节 CGAN 的变量。</p><p>Next, we add it to both our generator net and discriminator net:<br>接下来，我们将其添加到我们的生成器网络和鉴别器网络中：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">generator</span>(<span class="params">z, y</span>):</span><br><span class="line">    <span class="comment"># Concatenate z and y</span></span><br><span class="line">    inputs = tf.concat(concat_dim=<span class="number">1</span>, values=[z, y])</span><br><span class="line"></span><br><span class="line">    G_h1 = tf.nn.relu(tf.matmul(inputs, G_W1) + G_b1)</span><br><span class="line">    G_log_prob = tf.matmul(G_h1, G_W2) + G_b2</span><br><span class="line">    G_prob = tf.nn.sigmoid(G_log_prob)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> G_prob</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">discriminator</span>(<span class="params">x, y</span>):</span><br><span class="line">    <span class="comment"># Concatenate x and y</span></span><br><span class="line">    inputs = tf.concat(concat_dim=<span class="number">1</span>, values=[x, y])</span><br><span class="line"></span><br><span class="line">    D_h1 = tf.nn.relu(tf.matmul(inputs, D_W1) + D_b1)</span><br><span class="line">    D_logit = tf.matmul(D_h1, D_W2) + D_b2</span><br><span class="line">    D_prob = tf.nn.sigmoid(D_logit)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> D_prob, D_logit</span><br></pre></td></tr></table></figure><p>The problem we have here is how to incorporate the new variable <script type="math/tex">y</script> into <script type="math/tex">D(x)</script> and <script type="math/tex">G(z)</script>. As we are trying to model the joint conditional, the simplest way to do it is to just concatenate both variables. Hence, in <script type="math/tex">G(z,y)</script>, we are concatenating <script type="math/tex">z</script> and <script type="math/tex">y</script> before we feed it into the networks. The same procedure is applied to <script type="math/tex">D(X,y)</script>.<br>我们这里的问题是如何将新变量 <script type="math/tex">y</script> 合并到 <script type="math/tex">D(x)</script> 和 <script type="math/tex">G(z)</script> 中。由于我们试图对联合条件进行建模，最简单的方法就是将两个变量连接起来。因此，在 <script type="math/tex">G(z,y)</script> 中，我们在将其输入网络之前将 <script type="math/tex">z</script> 和 <script type="math/tex">y</script> 连接起来。同样的程序也适用于 <script type="math/tex">D(X,y)</script>。</p><p>Of course, as our inputs for <script type="math/tex">D(X,y)</script> and <script type="math/tex">G(z,y)</script> is now different than the original GAN, we need to modify our weights:<br>当然，由于我们对 <script type="math/tex">D(X,y)</script> 和 <script type="math/tex">G(z,y)</script> 的输入现在与原始 GAN 不同，我们需要修改我们的权重：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Modify input to hidden weights for discriminator</span></span><br><span class="line"><span class="comment"># 修改鉴别器隐藏权重的输入</span></span><br><span class="line">D_W1 = tf.Variable(shape=[X_dim + y_dim, h_dim]))</span><br><span class="line"></span><br><span class="line"><span class="comment"># Modify input to hidden weights for generator</span></span><br><span class="line"><span class="comment"># 修改生成器隐藏权重的输入</span></span><br><span class="line">G_W1 = tf.Variable(shape=[Z_dim + y_dim, h_dim]))</span><br></pre></td></tr></table></figure><p>That is, we just adjust the dimensionality of our weights.<br>也就是说，我们只是调整权重的维数。</p><p>Next, we just use our new networks:<br>接下来，我们只需使用我们的新网络：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Add additional parameter y into all networks</span></span><br><span class="line"><span class="comment"># 在所有网络中添加附加参数 y</span></span><br><span class="line">G_sample = generator(Z, y)</span><br><span class="line">D_real, D_logit_real = discriminator(X, y)</span><br><span class="line">D_fake, D_logit_fake = discriminator(G_sample, y)</span><br></pre></td></tr></table></figure><p>And finally, when training, we also feed the value of <script type="math/tex">y</script> into the networks:<br>最后，在训练时，我们还将 <script type="math/tex">y</script> 的值输入网络：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">X_mb, y_mb = mnist.train.next_batch(mb_size)</span><br><span class="line"></span><br><span class="line">Z_sample = sample_Z(mb_size, Z_dim)</span><br><span class="line">_, D_loss_curr = sess.run([D_solver, D_loss], feed_dict=&#123;X: X_mb, Z: Z_sample, y:y_mb&#125;)</span><br><span class="line">_, G_loss_curr = sess.run([G_solver, G_loss], feed_dict=&#123;Z: Z_sample, y:y_mb&#125;)</span><br></pre></td></tr></table></figure><p>As an example above, we are training our GAN with MNIST data, and the conditional variable <script type="math/tex">y</script> is the labels.<br>如上例，我们使用 MNIST 数据训练我们的 GAN，条件变量 <script type="math/tex">y</script> 是标签。</p><h1 id="CGAN-Results"><a href="#CGAN-Results" class="headerlink" title="CGAN: Results"></a>CGAN: Results</h1><p>At test time, we want to generate new data samples with certain label. For example, we set the label to be 5, i.e. we want to generate digit “5”:<br>在测试时，我们希望生成具有特定标签的新数据样本。例如，我们将标签设置为 5，即我们希望生成数字“5”：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">n_sample = <span class="number">16</span></span><br><span class="line">Z_sample = sample_Z(n_sample, Z_dim)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Create conditional one-hot vector, with index 5 = 1</span></span><br><span class="line"><span class="comment"># 创建条件独热向量，索引 5 = 1</span></span><br><span class="line">y_sample = np.zeros(shape=[n_sample, y_dim])</span><br><span class="line">y_sample[:, <span class="number">5</span>] = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">samples = sess.run(G_sample, feed_dict=&#123;Z: Z_sample, y:y_sample&#125;)</span><br></pre></td></tr></table></figure><p>Above, we just sample <script type="math/tex">z</script>, and then construct the conditional variables. In our example case, the conditional variables is a collection of one-hot vectors with value 1 in the 5th index. The last thing we need to is to run the network with those variables as inputs.<br>上面，我们只是对 <script type="math/tex">z</script> 进行采样，然后构造条件变量。在我们的示例中，条件变量是第 5 个索引中值为 1 的独热向量集合。我们需要做的最后一件事是使用这些变量作为输入来运行网络。</p><p>Here is the results:<br>结果如下：</p><img src="/2024/07/10/CGAN-TensorFlow/CGAN%E7%BB%93%E6%9E%9C1.png" class="" title="CGAN结果1"><p>Looks pretty much like digit 5, right?<br>看起来很像数字 5，对吧？</p><p>If we set our one-hot vectors to have value of 1 in the 7th index:<br>如果我们将独热向量设置为第 7 个索引中的值为 1：</p><img src="/2024/07/10/CGAN-TensorFlow/CGAN%E7%BB%93%E6%9E%9C2.png" class="" title="CGAN结果2"><p>Those results confirmed that have successfully trained our CGAN.<br>这些结果证实了我们的 CGAN 训练成功。</p><p><a href="https://github.com/wiseodd/generative-models">完整代码</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cgan_pytorch.py</span></span><br><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> torch.nn.functional <span class="keyword">as</span> nn</span><br><span class="line"><span class="keyword">import</span> torch.autograd <span class="keyword">as</span> autograd</span><br><span class="line"><span class="keyword">import</span> torch.optim <span class="keyword">as</span> optim</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> matplotlib.gridspec <span class="keyword">as</span> gridspec</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> torch.autograd <span class="keyword">import</span> Variable</span><br><span class="line"><span class="keyword">from</span> tensorflow.examples.tutorials.mnist <span class="keyword">import</span> input_data</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">mnist = input_data.read_data_sets(<span class="string">&#x27;../../MNIST_data&#x27;</span>, one_hot=<span class="literal">True</span>)</span><br><span class="line">mb_size = <span class="number">64</span></span><br><span class="line">Z_dim = <span class="number">100</span></span><br><span class="line">X_dim = mnist.train.images.shape[<span class="number">1</span>]</span><br><span class="line">y_dim = mnist.train.labels.shape[<span class="number">1</span>]</span><br><span class="line">h_dim = <span class="number">128</span></span><br><span class="line">cnt = <span class="number">0</span></span><br><span class="line">lr = <span class="number">1e-3</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">xavier_init</span>(<span class="params">size</span>):</span><br><span class="line">    in_dim = size[<span class="number">0</span>]</span><br><span class="line">    xavier_stddev = <span class="number">1.</span> / np.sqrt(in_dim / <span class="number">2.</span>)</span><br><span class="line">    <span class="keyword">return</span> Variable(torch.randn(*size) * xavier_stddev, requires_grad=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot; ==================== GENERATOR ======================== &quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">Wzh = xavier_init(size=[Z_dim + y_dim, h_dim])</span><br><span class="line">bzh = Variable(torch.zeros(h_dim), requires_grad=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">Whx = xavier_init(size=[h_dim, X_dim])</span><br><span class="line">bhx = Variable(torch.zeros(X_dim), requires_grad=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">G</span>(<span class="params">z, c</span>):</span><br><span class="line">    inputs = torch.cat([z, c], <span class="number">1</span>)</span><br><span class="line">    h = nn.relu(inputs @ Wzh + bzh.repeat(inputs.size(<span class="number">0</span>), <span class="number">1</span>))</span><br><span class="line">    X = nn.sigmoid(h @ Whx + bhx.repeat(h.size(<span class="number">0</span>), <span class="number">1</span>))</span><br><span class="line">    <span class="keyword">return</span> X</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot; ==================== DISCRIMINATOR ======================== &quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">Wxh = xavier_init(size=[X_dim + y_dim, h_dim])</span><br><span class="line">bxh = Variable(torch.zeros(h_dim), requires_grad=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">Why = xavier_init(size=[h_dim, <span class="number">1</span>])</span><br><span class="line">bhy = Variable(torch.zeros(<span class="number">1</span>), requires_grad=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">D</span>(<span class="params">X, c</span>):</span><br><span class="line">    inputs = torch.cat([X, c], <span class="number">1</span>)</span><br><span class="line">    h = nn.relu(inputs @ Wxh + bxh.repeat(inputs.size(<span class="number">0</span>), <span class="number">1</span>))</span><br><span class="line">    y = nn.sigmoid(h @ Why + bhy.repeat(h.size(<span class="number">0</span>), <span class="number">1</span>))</span><br><span class="line">    <span class="keyword">return</span> y</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">G_params = [Wzh, bzh, Whx, bhx]</span><br><span class="line">D_params = [Wxh, bxh, Why, bhy]</span><br><span class="line">params = G_params + D_params</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot; ===================== TRAINING ======================== &quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">reset_grad</span>():</span><br><span class="line">    <span class="keyword">for</span> p <span class="keyword">in</span> params:</span><br><span class="line">        <span class="keyword">if</span> p.grad <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">            data = p.grad.data</span><br><span class="line">            p.grad = Variable(data.new().resize_as_(data).zero_())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">G_solver = optim.Adam(G_params, lr=<span class="number">1e-3</span>)</span><br><span class="line">D_solver = optim.Adam(D_params, lr=<span class="number">1e-3</span>)</span><br><span class="line"></span><br><span class="line">ones_label = Variable(torch.ones(mb_size, <span class="number">1</span>))</span><br><span class="line">zeros_label = Variable(torch.zeros(mb_size, <span class="number">1</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> it <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">100000</span>):</span><br><span class="line">    <span class="comment"># Sample data</span></span><br><span class="line">    z = Variable(torch.randn(mb_size, Z_dim))</span><br><span class="line">    X, c = mnist.train.next_batch(mb_size)</span><br><span class="line">    X = Variable(torch.from_numpy(X))</span><br><span class="line">    c = Variable(torch.from_numpy(c.astype(<span class="string">&#x27;float32&#x27;</span>)))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Dicriminator forward-loss-backward-update</span></span><br><span class="line">    G_sample = G(z, c)</span><br><span class="line">    D_real = D(X, c)</span><br><span class="line">    D_fake = D(G_sample, c)</span><br><span class="line"></span><br><span class="line">    D_loss_real = nn.binary_cross_entropy(D_real, ones_label)</span><br><span class="line">    D_loss_fake = nn.binary_cross_entropy(D_fake, zeros_label)</span><br><span class="line">    D_loss = D_loss_real + D_loss_fake</span><br><span class="line"></span><br><span class="line">    D_loss.backward()</span><br><span class="line">    D_solver.step()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Housekeeping - reset gradient</span></span><br><span class="line">    reset_grad()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Generator forward-loss-backward-update</span></span><br><span class="line">    z = Variable(torch.randn(mb_size, Z_dim))</span><br><span class="line">    G_sample = G(z, c)</span><br><span class="line">    D_fake = D(G_sample, c)</span><br><span class="line"></span><br><span class="line">    G_loss = nn.binary_cross_entropy(D_fake, ones_label)</span><br><span class="line"></span><br><span class="line">    G_loss.backward()</span><br><span class="line">    G_solver.step()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Housekeeping - reset gradient</span></span><br><span class="line">    reset_grad()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Print and plot every now and then</span></span><br><span class="line">    <span class="keyword">if</span> it % <span class="number">1000</span> == <span class="number">0</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;Iter-&#123;&#125;; D_loss: &#123;&#125;; G_loss: &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(it, D_loss.data.numpy(), G_loss.data.numpy()))</span><br><span class="line"></span><br><span class="line">        c = np.zeros(shape=[mb_size, y_dim], dtype=<span class="string">&#x27;float32&#x27;</span>)</span><br><span class="line">        c[:, np.random.randint(<span class="number">0</span>, <span class="number">10</span>)] = <span class="number">1.</span></span><br><span class="line">        c = Variable(torch.from_numpy(c))</span><br><span class="line">        samples = G(z, c).data.numpy()[:<span class="number">16</span>]</span><br><span class="line"></span><br><span class="line">        fig = plt.figure(figsize=(<span class="number">4</span>, <span class="number">4</span>))</span><br><span class="line">        gs = gridspec.GridSpec(<span class="number">4</span>, <span class="number">4</span>)</span><br><span class="line">        gs.update(wspace=<span class="number">0.05</span>, hspace=<span class="number">0.05</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i, sample <span class="keyword">in</span> <span class="built_in">enumerate</span>(samples):</span><br><span class="line">            ax = plt.subplot(gs[i])</span><br><span class="line">            plt.axis(<span class="string">&#x27;off&#x27;</span>)</span><br><span class="line">            ax.set_xticklabels([])</span><br><span class="line">            ax.set_yticklabels([])</span><br><span class="line">            ax.set_aspect(<span class="string">&#x27;equal&#x27;</span>)</span><br><span class="line">            plt.imshow(sample.reshape(<span class="number">28</span>, <span class="number">28</span>), cmap=<span class="string">&#x27;Greys_r&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(<span class="string">&#x27;out/&#x27;</span>):</span><br><span class="line">            os.makedirs(<span class="string">&#x27;out/&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        plt.savefig(<span class="string">&#x27;out/&#123;&#125;.png&#x27;</span>.<span class="built_in">format</span>(<span class="built_in">str</span>(cnt).zfill(<span class="number">3</span>)), bbox_inches=<span class="string">&#x27;tight&#x27;</span>)</span><br><span class="line">        cnt += <span class="number">1</span></span><br><span class="line">        plt.close(fig)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br><span class="line"><span class="keyword">from</span> tensorflow.examples.tutorials.mnist <span class="keyword">import</span> input_data</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> matplotlib.gridspec <span class="keyword">as</span> gridspec</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">mnist = input_data.read_data_sets(<span class="string">&#x27;../../MNIST_data&#x27;</span>, one_hot=<span class="literal">True</span>)</span><br><span class="line">mb_size = <span class="number">64</span></span><br><span class="line">Z_dim = <span class="number">100</span></span><br><span class="line">X_dim = mnist.train.images.shape[<span class="number">1</span>]</span><br><span class="line">y_dim = mnist.train.labels.shape[<span class="number">1</span>]</span><br><span class="line">h_dim = <span class="number">128</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">xavier_init</span>(<span class="params">size</span>):</span><br><span class="line">    in_dim = size[<span class="number">0</span>]</span><br><span class="line">    xavier_stddev = <span class="number">1.</span> / tf.sqrt(in_dim / <span class="number">2.</span>)</span><br><span class="line">    <span class="keyword">return</span> tf.random_normal(shape=size, stddev=xavier_stddev)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot; Discriminator Net model &quot;&quot;&quot;</span></span><br><span class="line">X = tf.placeholder(tf.float32, shape=[<span class="literal">None</span>, <span class="number">784</span>])</span><br><span class="line">y = tf.placeholder(tf.float32, shape=[<span class="literal">None</span>, y_dim])</span><br><span class="line"></span><br><span class="line">D_W1 = tf.Variable(xavier_init([X_dim + y_dim, h_dim]))</span><br><span class="line">D_b1 = tf.Variable(tf.zeros(shape=[h_dim]))</span><br><span class="line"></span><br><span class="line">D_W2 = tf.Variable(xavier_init([h_dim, <span class="number">1</span>]))</span><br><span class="line">D_b2 = tf.Variable(tf.zeros(shape=[<span class="number">1</span>]))</span><br><span class="line"></span><br><span class="line">theta_D = [D_W1, D_W2, D_b1, D_b2]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">discriminator</span>(<span class="params">x, y</span>):</span><br><span class="line">    inputs = tf.concat(axis=<span class="number">1</span>, values=[x, y])</span><br><span class="line">    D_h1 = tf.nn.relu(tf.matmul(inputs, D_W1) + D_b1)</span><br><span class="line">    D_logit = tf.matmul(D_h1, D_W2) + D_b2</span><br><span class="line">    D_prob = tf.nn.sigmoid(D_logit)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> D_prob, D_logit</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot; Generator Net model &quot;&quot;&quot;</span></span><br><span class="line">Z = tf.placeholder(tf.float32, shape=[<span class="literal">None</span>, Z_dim])</span><br><span class="line"></span><br><span class="line">G_W1 = tf.Variable(xavier_init([Z_dim + y_dim, h_dim]))</span><br><span class="line">G_b1 = tf.Variable(tf.zeros(shape=[h_dim]))</span><br><span class="line"></span><br><span class="line">G_W2 = tf.Variable(xavier_init([h_dim, X_dim]))</span><br><span class="line">G_b2 = tf.Variable(tf.zeros(shape=[X_dim]))</span><br><span class="line"></span><br><span class="line">theta_G = [G_W1, G_W2, G_b1, G_b2]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">generator</span>(<span class="params">z, y</span>):</span><br><span class="line">    inputs = tf.concat(axis=<span class="number">1</span>, values=[z, y])</span><br><span class="line">    G_h1 = tf.nn.relu(tf.matmul(inputs, G_W1) + G_b1)</span><br><span class="line">    G_log_prob = tf.matmul(G_h1, G_W2) + G_b2</span><br><span class="line">    G_prob = tf.nn.sigmoid(G_log_prob)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> G_prob</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">sample_Z</span>(<span class="params">m, n</span>):</span><br><span class="line">    <span class="keyword">return</span> np.random.uniform(-<span class="number">1.</span>, <span class="number">1.</span>, size=[m, n])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">plot</span>(<span class="params">samples</span>):</span><br><span class="line">    fig = plt.figure(figsize=(<span class="number">4</span>, <span class="number">4</span>))</span><br><span class="line">    gs = gridspec.GridSpec(<span class="number">4</span>, <span class="number">4</span>)</span><br><span class="line">    gs.update(wspace=<span class="number">0.05</span>, hspace=<span class="number">0.05</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i, sample <span class="keyword">in</span> <span class="built_in">enumerate</span>(samples):</span><br><span class="line">        ax = plt.subplot(gs[i])</span><br><span class="line">        plt.axis(<span class="string">&#x27;off&#x27;</span>)</span><br><span class="line">        ax.set_xticklabels([])</span><br><span class="line">        ax.set_yticklabels([])</span><br><span class="line">        ax.set_aspect(<span class="string">&#x27;equal&#x27;</span>)</span><br><span class="line">        plt.imshow(sample.reshape(<span class="number">28</span>, <span class="number">28</span>), cmap=<span class="string">&#x27;Greys_r&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> fig</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">G_sample = generator(Z, y)</span><br><span class="line">D_real, D_logit_real = discriminator(X, y)</span><br><span class="line">D_fake, D_logit_fake = discriminator(G_sample, y)</span><br><span class="line"></span><br><span class="line">D_loss_real = tf.reduce_mean(tf.nn.sigmoid_cross_entropy_with_logits(logits=D_logit_real, labels=tf.ones_like(D_logit_real)))</span><br><span class="line">D_loss_fake = tf.reduce_mean(tf.nn.sigmoid_cross_entropy_with_logits(logits=D_logit_fake, labels=tf.zeros_like(D_logit_fake)))</span><br><span class="line">D_loss = D_loss_real + D_loss_fake</span><br><span class="line">G_loss = tf.reduce_mean(tf.nn.sigmoid_cross_entropy_with_logits(logits=D_logit_fake, labels=tf.ones_like(D_logit_fake)))</span><br><span class="line"></span><br><span class="line">D_solver = tf.train.AdamOptimizer().minimize(D_loss, var_list=theta_D)</span><br><span class="line">G_solver = tf.train.AdamOptimizer().minimize(G_loss, var_list=theta_G)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sess = tf.Session()</span><br><span class="line">sess.run(tf.global_variables_initializer())</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(<span class="string">&#x27;out/&#x27;</span>):</span><br><span class="line">    os.makedirs(<span class="string">&#x27;out/&#x27;</span>)</span><br><span class="line"></span><br><span class="line">i = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> it <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1000000</span>):</span><br><span class="line">    <span class="keyword">if</span> it % <span class="number">1000</span> == <span class="number">0</span>:</span><br><span class="line">        n_sample = <span class="number">16</span></span><br><span class="line"></span><br><span class="line">        Z_sample = sample_Z(n_sample, Z_dim)</span><br><span class="line">        y_sample = np.zeros(shape=[n_sample, y_dim])</span><br><span class="line">        y_sample[:, <span class="number">7</span>] = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        samples = sess.run(G_sample, feed_dict=&#123;Z: Z_sample, y:y_sample&#125;)</span><br><span class="line"></span><br><span class="line">        fig = plot(samples)</span><br><span class="line">        plt.savefig(<span class="string">&#x27;out/&#123;&#125;.png&#x27;</span>.<span class="built_in">format</span>(<span class="built_in">str</span>(i).zfill(<span class="number">3</span>)), bbox_inches=<span class="string">&#x27;tight&#x27;</span>)</span><br><span class="line">        i += <span class="number">1</span></span><br><span class="line">        plt.close(fig)</span><br><span class="line"></span><br><span class="line">    X_mb, y_mb = mnist.train.next_batch(mb_size)</span><br><span class="line"></span><br><span class="line">    Z_sample = sample_Z(mb_size, Z_dim)</span><br><span class="line">    _, D_loss_curr = sess.run([D_solver, D_loss], feed_dict=&#123;X: X_mb, Z: Z_sample, y:y_mb&#125;)</span><br><span class="line">    _, G_loss_curr = sess.run([G_solver, G_loss], feed_dict=&#123;Z: Z_sample, y:y_mb&#125;)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> it % <span class="number">1000</span> == <span class="number">0</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;Iter: &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(it))</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;D loss: &#123;:.4&#125;&#x27;</span>. <span class="built_in">format</span>(D_loss_curr))</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;G_loss: &#123;:.4&#125;&#x27;</span>.<span class="built_in">format</span>(G_loss_curr))</span><br><span class="line">        <span class="built_in">print</span>()</span><br></pre></td></tr></table></figure><p>修改后代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导入必要库</span></span><br><span class="line"><span class="comment"># PyTorch用于深度学习</span></span><br><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> torch.nn.functional <span class="keyword">as</span> nn</span><br><span class="line"><span class="keyword">import</span> torch.autograd <span class="keyword">as</span> autograd</span><br><span class="line"><span class="keyword">import</span> torch.optim <span class="keyword">as</span> optim</span><br><span class="line"><span class="comment"># NumPy用于数值计算</span></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="comment"># Matplotlib用于绘图</span></span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> matplotlib.gridspec <span class="keyword">as</span> gridspec</span><br><span class="line"><span class="comment"># os用于文件操作</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> torch.autograd <span class="keyword">import</span> Variable</span><br><span class="line"><span class="comment"># TensorFlow用于加载MNIST数据集</span></span><br><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br><span class="line"><span class="comment">#from tensorflow.examples.tutorials.mnist import input_data</span></span><br><span class="line"><span class="keyword">import</span> csv</span><br><span class="line"></span><br><span class="line">mnist = tf.keras.datasets.mnist</span><br><span class="line">(x_train, y_train), (x_test, y_test) = mnist.load_data()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将图像数据标准化到 [0, 1] 范围</span></span><br><span class="line">x_train = x_train.reshape(x_train.shape[<span class="number">0</span>], <span class="number">784</span>).astype(<span class="string">&#x27;float32&#x27;</span>) / <span class="number">255.</span></span><br><span class="line">x_test = x_test.reshape(x_test.shape[<span class="number">0</span>], <span class="number">784</span>).astype(<span class="string">&#x27;float32&#x27;</span>) / <span class="number">255.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将标签转换为 one-hot 编码</span></span><br><span class="line">y_train = tf.keras.utils.to_categorical(y_train, <span class="number">10</span>)</span><br><span class="line">y_test = tf.keras.utils.to_categorical(y_test, <span class="number">10</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 不再使用原来的mnist.train.next_batch()方法，我们需要创建一个函数来模拟这个功能：</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">next_batch</span>(<span class="params">num, data, labels</span>):</span><br><span class="line">    idx = np.arange(<span class="number">0</span> , <span class="built_in">len</span>(data))</span><br><span class="line">    np.random.shuffle(idx)</span><br><span class="line">    idx = idx[:num]</span><br><span class="line">    data_shuffle = [data[i] <span class="keyword">for</span> i <span class="keyword">in</span> idx]</span><br><span class="line">    labels_shuffle = [labels[i] <span class="keyword">for</span> i <span class="keyword">in</span> idx]</span><br><span class="line">    <span class="keyword">return</span> np.asarray(data_shuffle), np.asarray(labels_shuffle)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># mnist = input_data.read_data_sets(&#x27;../../MNIST_data&#x27;, one_hot=True) # 加载MNIST数据集，旧的TensorFlow版本</span></span><br><span class="line">mb_size = <span class="number">64</span>    <span class="comment">#设置mini-batch大小为64</span></span><br><span class="line">Z_dim = <span class="number">100</span> <span class="comment">#设置随机向量维度为100</span></span><br><span class="line">X_dim = x_train.shape[<span class="number">1</span>]</span><br><span class="line">y_dim = y_train.shape[<span class="number">1</span>]</span><br><span class="line"><span class="comment">#X_dim = mnist.train.images.shape[1] # 设置输入图像维度(784,因为MNIST图像是28x28=784像素)</span></span><br><span class="line"><span class="comment">#y_dim = mnist.train.labels.shape[1] # 设置标签维度(10,因为MNIST有10个类别)</span></span><br><span class="line">h_dim = <span class="number">128</span> <span class="comment">#设置隐藏层维度为128</span></span><br><span class="line">c = <span class="number">0</span>   <span class="comment">#初始化计数器c</span></span><br><span class="line">lr = <span class="number">1e-3</span>   <span class="comment">#学习率lr</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Xavier初始化方法,用于初始化网络权重，它有助于解决深度网络中的梯度消失问题</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">xavier_init</span>(<span class="params">size</span>):</span><br><span class="line">    in_dim = size[<span class="number">0</span>]</span><br><span class="line">    xavier_stddev = <span class="number">1.</span> / np.sqrt(in_dim / <span class="number">2.</span>)</span><br><span class="line">    <span class="keyword">return</span> Variable(torch.randn(*size) * xavier_stddev, requires_grad=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot; ==================== GENERATOR ======================== &quot;&quot;&quot;</span></span><br><span class="line"><span class="comment"># 初始化了生成器的权重和偏置。Wzh和bzh是第一层的权重和偏置,Whx和bhx是第二层的。</span></span><br><span class="line">Wzh = xavier_init(size=[Z_dim, h_dim])</span><br><span class="line">bzh = Variable(torch.zeros(h_dim), requires_grad=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">Whx = xavier_init(size=[h_dim, X_dim])</span><br><span class="line">bhx = Variable(torch.zeros(X_dim), requires_grad=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成器函数。它接受噪声z作为输入,通过两层网络生成假图像。第一层使用ReLU激活函数,第二层使用Sigmoid函数。</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">G</span>(<span class="params">z</span>):</span><br><span class="line">    h = nn.relu(z @ Wzh + bzh.repeat(z.size(<span class="number">0</span>), <span class="number">1</span>))</span><br><span class="line">    X = nn.sigmoid(h @ Whx + bhx.repeat(h.size(<span class="number">0</span>), <span class="number">1</span>))</span><br><span class="line">    <span class="keyword">return</span> X</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot; ==================== DISCRIMINATOR ======================== &quot;&quot;&quot;</span></span><br><span class="line"><span class="comment"># 初始化判别器的权重和偏置。Wzh和bzh是第一层的权重和偏置,Whx和bhx是第二层的。</span></span><br><span class="line">Wxh = xavier_init(size=[X_dim, h_dim])</span><br><span class="line">bxh = Variable(torch.zeros(h_dim), requires_grad=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">Why = xavier_init(size=[h_dim, <span class="number">1</span>])</span><br><span class="line">bhy = Variable(torch.zeros(<span class="number">1</span>), requires_grad=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 判别器函数。它接受图像X作为输入,输出一个0到1之间的数,表示图像是真实的概率。</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">D</span>(<span class="params">X</span>):</span><br><span class="line">    h = nn.relu(X @ Wxh + bxh.repeat(X.size(<span class="number">0</span>), <span class="number">1</span>))</span><br><span class="line">    y = nn.sigmoid(h @ Why + bhy.repeat(h.size(<span class="number">0</span>), <span class="number">1</span>))</span><br><span class="line">    <span class="keyword">return</span> y</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将生成器和判别器的参数分别组织起来,方便后续优化。</span></span><br><span class="line">G_params = [Wzh, bzh, Whx, bhx]</span><br><span class="line">D_params = [Wxh, bxh, Why, bhy]</span><br><span class="line">params = G_params + D_params</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot; ===================== TRAINING ======================== &quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 重置所有参数的梯度。在每次更新参数之后调用,以准备下一次反向传播。</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">reset_grad</span>():</span><br><span class="line">    <span class="keyword">for</span> p <span class="keyword">in</span> params:</span><br><span class="line">        <span class="keyword">if</span> p.grad <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">            data = p.grad.data</span><br><span class="line">            p.grad = Variable(data.new().resize_as_(data).zero_())</span><br><span class="line"></span><br><span class="line"><span class="comment"># 为生成器和判别器分别创建了Adam优化器。</span></span><br><span class="line">G_solver = optim.Adam(G_params, lr=<span class="number">1e-3</span>)</span><br><span class="line">D_solver = optim.Adam(D_params, lr=<span class="number">1e-3</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建表示&quot;真&quot;和&quot;假&quot;的标签,用于计算损失。</span></span><br><span class="line">ones_label = Variable(torch.ones(mb_size, <span class="number">1</span>))</span><br><span class="line">zeros_label = Variable(torch.zeros(mb_size, <span class="number">1</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在训练循环外创建两个列表来存储loss值</span></span><br><span class="line">D_losses = []</span><br><span class="line">G_losses = []</span><br><span class="line"></span><br><span class="line"><span class="comment"># 曲线平滑方法</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">moving_average</span>(<span class="params">data, window_size</span>):</span><br><span class="line">    cumsum = np.cumsum(np.insert(data, <span class="number">0</span>, <span class="number">0</span>))</span><br><span class="line">    <span class="keyword">return</span> (cumsum[window_size:] - cumsum[:-window_size]) / window_size</span><br><span class="line"></span><br><span class="line"><span class="comment"># 保存loss曲线</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(<span class="string">&#x27;out_gan_pytorch_1/&#x27;</span>):</span><br><span class="line">    os.makedirs(<span class="string">&#x27;out_gan_pytorch_1/&#x27;</span>)</span><br><span class="line">csv_file = <span class="built_in">open</span>(<span class="string">&#x27;out_gan_pytorch_1/loss_data.csv&#x27;</span>, <span class="string">&#x27;w&#x27;</span>, newline=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">csv_writer = csv.writer(csv_file)</span><br><span class="line">csv_writer.writerow([<span class="string">&#x27;Iteration&#x27;</span>, <span class="string">&#x27;D_loss&#x27;</span>, <span class="string">&#x27;G_loss&#x27;</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 主训练循环,总共进行100000次迭代。</span></span><br><span class="line"><span class="keyword">for</span> it <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">100000</span>):</span><br><span class="line">    <span class="comment"># Sample data</span></span><br><span class="line">    z = Variable(torch.randn(mb_size, Z_dim))   <span class="comment">#生成一个随机噪声批次z作为生成器的输入。</span></span><br><span class="line">    <span class="comment"># X, _ = mnist.train.next_batch(mb_size)  #从MNIST数据集中获取一批真实图像X。</span></span><br><span class="line">    X, _ = next_batch(mb_size, x_train, y_train)</span><br><span class="line">    X = Variable(torch.from_numpy(X))   <span class="comment">#将X转换为PyTorch的Variable。</span></span><br><span class="line"></span><br><span class="line">    <span class="string">&quot;&quot;&quot; ===================== 判别器训练 ======================== &quot;&quot;&quot;</span></span><br><span class="line">    <span class="comment"># Dicriminator forward-loss-backward-update</span></span><br><span class="line">    G_sample = G(z) <span class="comment">#使用生成器G生成一批假图像G_sample</span></span><br><span class="line">    D_real = D(X)   <span class="comment">#判别器D对真实图像X进行评估,得到D_real</span></span><br><span class="line">    D_fake = D(G_sample)    <span class="comment">#判别器D对生成的假图像G_sample进行评估,得到D_fake</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 计算判别器的损失</span></span><br><span class="line">    D_loss_real = nn.binary_cross_entropy(D_real, ones_label)   <span class="comment">#D_loss_real是真实图像的损失, 目标是使D_real接近1。</span></span><br><span class="line">    D_loss_fake = nn.binary_cross_entropy(D_fake, zeros_label)  <span class="comment">#D_loss_fake是假图像的损失, 目标是使D_fake接近0。</span></span><br><span class="line">    D_loss = D_loss_real + D_loss_fake  <span class="comment">#总损失D_loss是这两部分之和。</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 对判别器进行反向传播和参数更新。</span></span><br><span class="line">    D_loss.backward()</span><br><span class="line">    D_solver.step()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Housekeeping - reset gradient</span></span><br><span class="line">    <span class="comment"># 重置所有参数的梯度,为下一步做准备。</span></span><br><span class="line">    reset_grad()</span><br><span class="line"></span><br><span class="line">    <span class="string">&quot;&quot;&quot; ===================== 生成器训练 ======================== &quot;&quot;&quot;</span></span><br><span class="line">    <span class="comment"># Generator forward-loss-backward-update</span></span><br><span class="line">    <span class="comment"># 为训练生成器,我们再次生成假图像并用判别器评估</span></span><br><span class="line">    z = Variable(torch.randn(mb_size, Z_dim))</span><br><span class="line">    G_sample = G(z)</span><br><span class="line">    D_fake = D(G_sample)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 计算生成器的损失。注意这里的目标是让D_fake接近1, 即欺骗判别器</span></span><br><span class="line">    G_loss = nn.binary_cross_entropy(D_fake, ones_label)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 对生成器进行反向传播和参数更新。</span></span><br><span class="line">    G_loss.backward()</span><br><span class="line">    G_solver.step()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Housekeeping - reset gradient</span></span><br><span class="line">    <span class="comment"># 再次重置梯度。</span></span><br><span class="line">    reset_grad()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 每次迭代都记录loss值</span></span><br><span class="line">    D_losses.append(D_loss.item())</span><br><span class="line">    G_losses.append(G_loss.item())</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Print and plot every now and then</span></span><br><span class="line">    <span class="comment"># 每1000次迭代打印一次当前的损失值。</span></span><br><span class="line">    <span class="keyword">if</span> it % <span class="number">1000</span> == <span class="number">0</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;Iter-&#123;&#125;; D_loss: &#123;&#125;; G_loss: &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(it, D_loss.data.numpy(), G_loss.data.numpy()))</span><br><span class="line"></span><br><span class="line">        samples = G(z).data.numpy()[:<span class="number">16</span>]    <span class="comment"># 生成16个样本。</span></span><br><span class="line"></span><br><span class="line">        fig = plt.figure(figsize=(<span class="number">4</span>, <span class="number">4</span>))    <span class="comment"># 创建一个4x4的图像网格。</span></span><br><span class="line">        gs = gridspec.GridSpec(<span class="number">4</span>, <span class="number">4</span>)    <span class="comment"># 将每个生成的样本绘制到网格中。</span></span><br><span class="line">        gs.update(wspace=<span class="number">0.05</span>, hspace=<span class="number">0.05</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i, sample <span class="keyword">in</span> <span class="built_in">enumerate</span>(samples):</span><br><span class="line">            ax = plt.subplot(gs[i])</span><br><span class="line">            plt.axis(<span class="string">&#x27;off&#x27;</span>)</span><br><span class="line">            ax.set_xticklabels([])</span><br><span class="line">            ax.set_yticklabels([])</span><br><span class="line">            ax.set_aspect(<span class="string">&#x27;equal&#x27;</span>)</span><br><span class="line">            plt.imshow(sample.reshape(<span class="number">28</span>, <span class="number">28</span>), cmap=<span class="string">&#x27;Greys_r&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(<span class="string">&#x27;out_gan_pytorch_1/&#x27;</span>):</span><br><span class="line">            os.makedirs(<span class="string">&#x27;out_gan_pytorch_1/&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        plt.savefig(<span class="string">&#x27;out_gan_pytorch_1/&#123;&#125;.png&#x27;</span>.<span class="built_in">format</span>(<span class="built_in">str</span>(c).zfill(<span class="number">3</span>)), bbox_inches=<span class="string">&#x27;tight&#x27;</span>)</span><br><span class="line">        c += <span class="number">1</span></span><br><span class="line">        plt.close(fig)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 保存当前的loss数据</span></span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;out_gan_pytorch_1/loss_data_ongoing.csv&#x27;</span>, <span class="string">&#x27;a&#x27;</span>, newline=<span class="string">&#x27;&#x27;</span>) <span class="keyword">as</span> file:</span><br><span class="line">            writer = csv.writer(file)</span><br><span class="line">            <span class="keyword">if</span> it == <span class="number">0</span>:  <span class="comment"># 如果是第一次写入，添加表头</span></span><br><span class="line">                writer.writerow([<span class="string">&quot;Iteration&quot;</span>, <span class="string">&quot;G_loss&quot;</span>, <span class="string">&quot;D_loss&quot;</span>])</span><br><span class="line">            writer.writerow([it, G_loss.item(), D_loss.item()])</span><br><span class="line"></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;Loss data at iteration <span class="subst">&#123;it&#125;</span> has been appended to &#x27;out_gan_pytorch_1/loss_data_ongoing.csv&#x27;&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 计算移动平均-曲线平滑</span></span><br><span class="line">window_size = <span class="number">1000</span></span><br><span class="line">G_losses_avg = moving_average(G_losses, window_size)</span><br><span class="line">D_losses_avg = moving_average(D_losses, window_size)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘制loss曲线</span></span><br><span class="line">plt.figure(figsize=(<span class="number">10</span>, <span class="number">5</span>))</span><br><span class="line">plt.title(<span class="string">&quot;Generator and Discriminator Loss During Training&quot;</span>)</span><br><span class="line">plt.plot(G_losses, label=<span class="string">&quot;G&quot;</span>)</span><br><span class="line">plt.plot(D_losses, label=<span class="string">&quot;D&quot;</span>)</span><br><span class="line">plt.xlabel(<span class="string">&quot;iterations&quot;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&quot;Loss&quot;</span>)</span><br><span class="line">plt.legend()</span><br><span class="line">plt.savefig(<span class="string">&#x27;out_gan_pytorch_1/loss_curve.png&#x27;</span>)</span><br><span class="line">plt.close()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 保存loss数据到CSV文件</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;out_gan_pytorch_1/loss_data.csv&#x27;</span>, <span class="string">&#x27;w&#x27;</span>, newline=<span class="string">&#x27;&#x27;</span>) <span class="keyword">as</span> file:</span><br><span class="line">    writer = csv.writer(file)</span><br><span class="line">    writer.writerow([<span class="string">&quot;Iteration&quot;</span>, <span class="string">&quot;G_loss&quot;</span>, <span class="string">&quot;D_loss&quot;</span>])  <span class="comment"># 写入表头</span></span><br><span class="line">    <span class="keyword">for</span> i, (g_loss, d_loss) <span class="keyword">in</span> <span class="built_in">enumerate</span>(<span class="built_in">zip</span>(G_losses, D_losses)):</span><br><span class="line">        writer.writerow([i, g_loss, d_loss])</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Loss data has been saved to &#x27;out_gan_pytorch_1/loss_data.csv&#x27;&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 计算移动平均</span></span><br><span class="line">window_size = <span class="number">1000</span></span><br><span class="line">G_losses_avg = moving_average(G_losses, window_size)</span><br><span class="line">D_losses_avg = moving_average(D_losses, window_size)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 保存移动平均后的loss数据到CSV文件</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;out_gan_pytorch_1/loss_data_avg.csv&#x27;</span>, <span class="string">&#x27;w&#x27;</span>, newline=<span class="string">&#x27;&#x27;</span>) <span class="keyword">as</span> file:</span><br><span class="line">    writer = csv.writer(file)</span><br><span class="line">    writer.writerow([<span class="string">&quot;Iteration&quot;</span>, <span class="string">&quot;G_loss_avg&quot;</span>, <span class="string">&quot;D_loss_avg&quot;</span>])  <span class="comment"># 写入表头</span></span><br><span class="line">    <span class="keyword">for</span> i, (g_loss, d_loss) <span class="keyword">in</span> <span class="built_in">enumerate</span>(<span class="built_in">zip</span>(G_losses_avg, D_losses_avg)):</span><br><span class="line">        writer.writerow([i+window_size, g_loss, d_loss])</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Averaged loss data has been saved to &#x27;out_gan_pytorch_1/loss_data_avg.csv&#x27;&quot;</span>)</span><br><span class="line"><span class="comment"># loss_data.csv：包含所有迭代的原始loss数据</span></span><br><span class="line"><span class="comment"># loss_data_avg.csv：包含移动平均后的loss数据</span></span><br><span class="line"><span class="comment"># loss_data_ongoing.csv：在训练过程中定期保存的loss数据</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">CGAN-TensorFlow</summary>
    
    
    
    <category term="人工智能" scheme="http://hibiscidai.com/categories/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/"/>
    
    
    <category term="GAN" scheme="http://hibiscidai.com/tags/GAN/"/>
    
    <category term="人工智能" scheme="http://hibiscidai.com/tags/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/"/>
    
    <category term="深度学习" scheme="http://hibiscidai.com/tags/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>小丑在殿堂</title>
    <link href="http://hibiscidai.com/2024/07/03/%E5%B0%8F%E4%B8%91%E5%9C%A8%E6%AE%BF%E5%A0%82/"/>
    <id>http://hibiscidai.com/2024/07/03/%E5%B0%8F%E4%B8%91%E5%9C%A8%E6%AE%BF%E5%A0%82/</id>
    <published>2024-07-03T06:00:00.000Z</published>
    <updated>2024-07-22T13:41:06.638Z</updated>
    
    <content type="html"><![CDATA[<img src="/2024/07/03/%E5%B0%8F%E4%B8%91%E5%9C%A8%E6%AE%BF%E5%A0%82/%E5%B0%8F%E4%B8%91%E5%9C%A8%E6%AE%BF%E5%A0%82.png" class="" title="小丑在殿堂"><p>小丑在殿堂</p><span id="more"></span><p>[TOC]</p><h1 id="小丑在殿堂"><a href="#小丑在殿堂" class="headerlink" title="小丑在殿堂"></a>小丑在殿堂</h1><p>也许你愿意相信的不是真理，而是权威。</p><p>尊长尊老的核心内涵在于对生命的敬畏、对更有深度的生命赞同。</p><ul><li>小人君子论</li></ul><p>定义：<br>对弱者包容，对强者尊重。→君子<br>对弱者欺压，对强者谄媚。→小人</p><p>情况分析：<br>小人见君子 → 小人最优<br>小人见小人 → ？<br>君子见君子 → 君子最优<br>君子见小人 → 君子最差</p><p>由此可得：<br>小人的最优收益望 = 君子的最优收益期望<br>小人的最差收益望 &gt; 君子的最差收益期望</p><p>结论：<br>君子难得！！！</p><p>言语所能传达的，大部分是情绪语调，半小时的交谈，不如一纸文书。</p><p>沟通的前提是平等尊重，带有强烈主观情绪色彩的交谈是单方面强权的霸凌。</p><p>谈事和谈态度傻傻分不清，事情没谈明白开始扯态度，态度可以了又说事不行。</p><p>我想听的不是你要怎么样，我只想听我想听到的。</p><p>在强权背景下，催生了畸形的运转模式，权利和能力被画上了等号，组织中每个人都视而不见，久而久之，权利逐渐盖过了能力，对能力的质疑转变了对权力的质疑，同样的，会受到强权的打压。</p><ul><li>忽有清风化剑气，直斩二十少年意。</li></ul><p>在象牙塔里的时光，容易让一个人意淫，对社会意淫，对未来意淫。当剥去幻想的衣裳，看到的才是赤裸的羞耻。</p><ul><li>小丑在殿堂，大师在流浪。</li></ul><p>开始记录与2024年07月04日，纪念逐渐远离梦想的少年。</p><p>上位者心中只有任务，在上位者的严重，处于权利弱势地位的人不是人，而是工具，为达自己的利益，合理的分配工具资源，才是上位者考虑的事情。</p>]]></content>
    
    
    <summary type="html">小丑在殿堂</summary>
    
    
    
    <category term="日志" scheme="http://hibiscidai.com/categories/%E6%97%A5%E5%BF%97/"/>
    
    
    <category term="日志" scheme="http://hibiscidai.com/tags/%E6%97%A5%E5%BF%97/"/>
    
    <category term="小丑在殿堂" scheme="http://hibiscidai.com/tags/%E5%B0%8F%E4%B8%91%E5%9C%A8%E6%AE%BF%E5%A0%82/"/>
    
  </entry>
  
  <entry>
    <title>PyCharm挂载Linux服务器</title>
    <link href="http://hibiscidai.com/2024/06/25/PyCharm%E6%8C%82%E8%BD%BDLinux%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>http://hibiscidai.com/2024/06/25/PyCharm%E6%8C%82%E8%BD%BDLinux%E6%9C%8D%E5%8A%A1%E5%99%A8/</id>
    <published>2024-06-25T00:00:00.000Z</published>
    <updated>2024-06-26T06:04:24.000Z</updated>
    
    <content type="html"><![CDATA[<img src="/2024/06/25/PyCharm%E6%8C%82%E8%BD%BDLinux%E6%9C%8D%E5%8A%A1%E5%99%A8/PyCharm%E6%8C%82%E8%BD%BDLinux%E6%9C%8D%E5%8A%A1%E5%99%A8.png" class="" title="PyCharm挂载Linux服务器"><p>PyCharm挂载Linux服务器</p><span id="more"></span><p>[TOC]</p><h1 id="PyCharm挂载Linux服务器"><a href="#PyCharm挂载Linux服务器" class="headerlink" title="PyCharm挂载Linux服务器"></a>PyCharm挂载Linux服务器</h1><blockquote><p>PyCharm社区版本无法实现ssh连接服务器。</p></blockquote><p><a href="https://www.jetbrains.com/help/pycharm/2024.1/remote-development-starting-page.html">PyCharm官网教程：从 PyCharm 连接到远程服务器</a></p><h2 id="服务器安装Anaconda"><a href="#服务器安装Anaconda" class="headerlink" title="服务器安装Anaconda"></a>服务器安装Anaconda</h2><h3 id="查看PC的Anaconda版本"><a href="#查看PC的Anaconda版本" class="headerlink" title="查看PC的Anaconda版本"></a>查看PC的Anaconda版本</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Windows PowerShell</span><br><span class="line">版权所有（C） Microsoft Corporation。保留所有权利。</span><br><span class="line">PS C:\Users\windows11&gt; conda --version</span><br><span class="line">conda 23.1.0</span><br></pre></td></tr></table></figure><p>Conda has been updated to v23.1.0. This installer uses python-3.10.9.</p><h3 id="去官网下载Anaconda"><a href="#去官网下载Anaconda" class="headerlink" title="去官网下载Anaconda"></a>去官网下载Anaconda</h3><p>选择 Anaconda Distribution 安装程序。</p><p>下载<code>Anaconda3-2024.02-1-Linux-x86_64.sh</code>，对应python版本3.11。</p><h3 id="上传安装文件"><a href="#上传安装文件" class="headerlink" title="上传安装文件"></a>上传安装文件</h3><p><strong>用自己账号登录服务器</strong>，上传至服务器，自己用户的根目录中。</p><h3 id="执行安装文件"><a href="#执行安装文件" class="headerlink" title="执行安装文件"></a>执行安装文件</h3><p>在根目录中执行，运行安装：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh Anaconda3-2024.02-1-Linux-x86_64.sh</span><br></pre></td></tr></table></figure></p><h3 id="配置环境"><a href="#配置环境" class="headerlink" title="配置环境"></a>配置环境</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.bashrc</span><br></pre></td></tr></table></figure><p>在空白处添加以下<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">在本用户权限下运行，不会影响其他用户的环境</span></span><br><span class="line">alias Python=&#x27;/home/USERNAME/anaconda3/bin&#x27;   </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">这里写anaconda的安装路径</span></span><br><span class="line">export PATH=&quot;/home/USERNAME/anaconda3/bin:$PATH&quot;</span><br></pre></td></tr></table></figure></p><p>加载配置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source ~/.bashrc</span><br></pre></td></tr></table></figure><h3 id="添加国内conda源"><a href="#添加国内conda源" class="headerlink" title="添加国内conda源"></a>添加国内conda源</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main</span><br><span class="line">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free</span><br><span class="line">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/r</span><br><span class="line">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/pro</span><br><span class="line">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/msys2</span><br></pre></td></tr></table></figure><h3 id="conda版本版本更换"><a href="#conda版本版本更换" class="headerlink" title="conda版本版本更换"></a>conda版本版本更换</h3><p>保证和本地版本相同，进行conda版本切换。<br>注意查看对应的python版本。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">conda install -n base conda=23.1.0</span><br><span class="line">conda install pyhton=3.7.4</span><br></pre></td></tr></table></figure><p>当然也可以保持现状，在创建conda环境时再进行python版本设置。</p><h2 id="创建虚拟环境"><a href="#创建虚拟环境" class="headerlink" title="创建虚拟环境"></a>创建虚拟环境</h2><h3 id="conda环境迁移"><a href="#conda环境迁移" class="headerlink" title="conda环境迁移"></a>conda环境迁移</h3><p>相同操作系统 的计算机之间复制环境，则可以生成 spec list。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda list --explicit &gt; spec-list.txt</span><br></pre></td></tr></table></figure><p>在新机子重现环境</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda create --name YOUR_ENV_NAME --file spec-list.txt</span><br></pre></td></tr></table></figure><h3 id="创建虚拟环境-1"><a href="#创建虚拟环境-1" class="headerlink" title="创建虚拟环境"></a>创建虚拟环境</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda create -n YOUR_ENV_NAME python=3.7</span><br></pre></td></tr></table></figure><p>查看当前存在哪些虚拟环境</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda env list</span><br></pre></td></tr></table></figure><p>激活虚拟环境</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda activate YOUR_ENV_NAME</span><br></pre></td></tr></table></figure><p>查看安装了哪些包</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda list</span><br></pre></td></tr></table></figure><blockquote><p>conda:matplotlib、pandas、numpy<br>pip:networkx、python_igraph、numba、scipy</p></blockquote><p>其他命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">conda update conda：               检查更新当前conda</span><br><span class="line">conda search XXX                   搜索包，查看可安装版本</span><br><span class="line">conda remove -n py36 --all         删除环境</span><br><span class="line">conda deactivate                   退出虚拟环境，conda4之前版本：source deactivate</span><br><span class="line"> </span><br><span class="line">pip install --upgrade &lt;包的名字&gt;     更新包</span><br><span class="line">pip install python_igraph          （import igraph包）</span><br></pre></td></tr></table></figure><h2 id="配置PyCharm"><a href="#配置PyCharm" class="headerlink" title="配置PyCharm"></a>配置PyCharm</h2><p>打开python项目→文件→设置→项目：xxx→python解释器→添加解释器→SSH</p><p>输入主机ip、端口、用户名</p><p>选择<code>Virtualenv环境</code>，如果识别conda环境可以直接选择conda。<br><code>系统解释器</code>面向root用户，属于全局，不方便使用。</p><p>解释器路径：<code>/home/USERNAME/anaconda3/envs/YOUR_ENV_NAME/bin/python</code><br>同步文件夹：<code>home/USERNAME/data/USERNAME/PROJECTNAME</code></p><img src="/2024/06/25/PyCharm%E6%8C%82%E8%BD%BDLinux%E6%9C%8D%E5%8A%A1%E5%99%A8/PyCharm%E9%85%8D%E7%BD%AESSH%E7%8E%AF%E5%A2%83.png" class="" title="PyCharm配置SSH环境"><p>工具→部署，可以调整文件夹同步设置</p><h2 id="运行测试"><a href="#运行测试" class="headerlink" title="运行测试"></a>运行测试</h2><p>运行代码测试</p><h2 id="直接在服务器运行代码"><a href="#直接在服务器运行代码" class="headerlink" title="直接在服务器运行代码"></a>直接在服务器运行代码</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">source activate YOUR_ENV_NAME</span><br><span class="line"></span><br><span class="line">nohup python3 -u my.py &gt;&gt; my.log 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">jobs -l      （当前终端查看全部进程）</span><br><span class="line">ps -aux|grep 进程号  （全局各个新终端查看指定进程）</span><br><span class="line">ps -ef         （全局全部进程）</span><br><span class="line">kill -STOP 进程号（命令可以直接暂停一个后台任务）</span><br><span class="line">kill -CONT 进程号（命令可以直接恢复一个后台任务）</span><br><span class="line">kill -9 进程号     （杀死进程）</span><br></pre></td></tr></table></figure><h2 id="JetBrains-Gateway"><a href="#JetBrains-Gateway" class="headerlink" title="JetBrains Gateway"></a>JetBrains Gateway</h2><p>JetBrains Gateway 是一个轻量级启动器，它将远程服务器与您的本地机器连接起来，在后端下载必要的组件，并在JetBrains Client中打开您的项目。</p><p>您可以将 JetBrains Gateway 用作独立启动器或作为 IDE 的入口点来连接到远程服务器。</p><p>默认情况下，下载的 PyCharm 位于远程服务器上的以下文件夹中：<code>~ /.cache /JetBrains /RemoteDev /dist</code>。</p><p>文件→远程开发→SSH</p><img src="/2024/06/25/PyCharm%E6%8C%82%E8%BD%BDLinux%E6%9C%8D%E5%8A%A1%E5%99%A8/JetBrainsGateway_1.png" class="" title="JetBrainsGateway_1"><p>选择对应的pycharm版本<br>会自动列出目前和本机相同的版本和最新版本</p><img src="/2024/06/25/PyCharm%E6%8C%82%E8%BD%BDLinux%E6%9C%8D%E5%8A%A1%E5%99%A8/JetBrainsGateway_2.png" class="" title="JetBrainsGateway_2"><p>选择项目目录</p><img src="/2024/06/25/PyCharm%E6%8C%82%E8%BD%BDLinux%E6%9C%8D%E5%8A%A1%E5%99%A8/JetBrainsGateway_3.png" class="" title="JetBrainsGateway_3"><p>使用gateway开发</p><img src="/2024/06/25/PyCharm%E6%8C%82%E8%BD%BDLinux%E6%9C%8D%E5%8A%A1%E5%99%A8/JetBrainsGateway_4.png" class="" title="JetBrainsGateway_4"><p>方法A：<br>代码在本地，运行环境在服务器。<br>本地安装pycharm，服务器不安装pyachrm。<br>代码运行通过本地上传至服务器，然后再服务器运行环境下返回运行结果。<br>用户实际操作的是本地pycharm。<br>关闭pycharm后代码中断。</p><p>方法B：<br>代码在服务器，运行环境在服务器。<br>本地安装pycharm，服务器不安装pyachrm。<br>代码直接运行在服务器上。用户可以用本地pycharm操作。<br>用户实际操作的是服务器pycharm。<br>关闭pycharm后代码可以选择不中断，可以选择在服务器后台跑。</p><p>可以先用方法A测试运行，上传部署代码后，使用方法B，可以直接在远程上打开IDE运行测试代码，适合有长时间跑数据的需求。</p><p>方法B中开发环境有些功能会有一些bug，尽量选择全新的IDE版本。</p>]]></content>
    
    
    <summary type="html">PyCharm挂载Linux服务器</summary>
    
    
    
    <category term="Linux" scheme="http://hibiscidai.com/categories/Linux/"/>
    
    
    <category term="Python" scheme="http://hibiscidai.com/tags/Python/"/>
    
    <category term="IDE" scheme="http://hibiscidai.com/tags/IDE/"/>
    
    <category term="Linux" scheme="http://hibiscidai.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>核磁共振测井</title>
    <link href="http://hibiscidai.com/2024/05/14/%E6%A0%B8%E7%A3%81%E5%85%B1%E6%8C%AF%E6%B5%8B%E4%BA%95/"/>
    <id>http://hibiscidai.com/2024/05/14/%E6%A0%B8%E7%A3%81%E5%85%B1%E6%8C%AF%E6%B5%8B%E4%BA%95/</id>
    <published>2024-05-14T03:00:00.000Z</published>
    <updated>2024-07-17T12:24:27.000Z</updated>
    
    <content type="html"><![CDATA[<img src="/2024/05/14/%E6%A0%B8%E7%A3%81%E5%85%B1%E6%8C%AF%E6%B5%8B%E4%BA%95/%E6%A0%B8%E7%A3%81%E5%85%B1%E6%8C%AF%E6%B5%8B%E4%BA%95.png" class="" title="核磁共振测井"><p>核磁共振测井</p><span id="more"></span><p>[TOC]</p><h1 id="核磁共振测井"><a href="#核磁共振测井" class="headerlink" title="核磁共振测井"></a>核磁共振测井</h1><p>用作本人速查</p><h1 id="核磁共振测井物理基础"><a href="#核磁共振测井物理基础" class="headerlink" title="核磁共振测井物理基础"></a>核磁共振测井物理基础</h1><p>核磁共振是量子力学最经典的一个实例。</p><p>核磁共振原理经典六张图。</p><img src="/2024/05/14/%E6%A0%B8%E7%A3%81%E5%85%B1%E6%8C%AF%E6%B5%8B%E4%BA%95/%E6%A0%B8%E7%A3%81%E5%85%B1%E6%8C%AF%E5%8E%9F%E7%90%86%E7%BB%8F%E5%85%B8%E5%85%AD%E5%BC%A0%E5%9B%BE-1.png" class="" title="核磁共振测井"><p>很多原子核都可以做核磁共振，但是测井的重点在于氢核，氢核本身在高速运动。<br>氢核本身在做高速运动的时候像一个石头一样有南北极。<br>对于一个原子核来说是有磁性的，但是当很多氢原子核在一起的时候，如果没有外加磁场，每一个氢核都是随机取向的，所以没有什么磁性。</p><p>单独的氢核，快速运动，具有一定的磁性，产生一个N极和S极。<br>当氢核放在外加磁场中，外加磁场强度是B0，氢核会围绕外加磁场方向轴转动，称为进动。进动频率为拉莫尔频率。</p><script type="math/tex; mode=display">f = \frac{\gamma}{2 \pi} B_0</script><script type="math/tex; mode=display">\gamma $$ 叫旋磁比，是原子核的一个性质，核素定了，数值就定了。$$ B_0 $$ 是外加磁场强度。当磁场强度确定的时候，进动频率确定。在同一个磁场强度里面，不同的原子核因为它有不同的旋磁比，所以他们也会有不同的进动频率。在不同的磁场强度里面，那么对同一个原子核，也会不同的进动频率。单个自旋是理想状态，通常任何时候都是多个自旋。在B0磁场内，进动是量子化的，不是一个有很多种连续这个进度频率状态存在的，而是对于氢原子核来说，它有一个进动是沿着B0方向向，还有一种进动是逆着B0方向。那么对应的就是两个态，一个是高能态，一个是低能态，高能态的是逆着B0方向的，低能态顺着B0方向。在磁场里面当多个自旋的时候，有一个能级的分裂。没有外加磁场只有一个能级，加了外加磁场能级就分开了。氢原子核有两个能级。低能态的原子核数量会稍多于高能态的原子核数量。恰恰是因为这两个人群之间有原子核的数量有稍微的差异，所以就能够去做核磁共振。最终原子核数量的差异会产生一个宏观磁化量M0，可测量。不仅是可以测量它，而且可以测量它的变化过程。M0跟这个体系里面的氢原子核的数量成正比，如果能够把M0测出来，那么实际上通过标定，就可以把这个样品里面的原子核的数量测量出来。通过标定以后，实际上可以把孔隙度测量出来。M0它不是一下就形成的，它会有个过程，一个磁化的过程里面，它服从这样一个指数的这样一个规律，就这个原子核这么多原子核放在B0磁场里面的时候，M慢慢长，长的过程叫做纵向弛豫的过程，或者说实际上它是一个磁化的过程，极化的过程。Mt慢慢随着时间的增加是这样的长涨着涨到了一个平衡态，这个平衡态就是最终M0，完全极化。$$ M_t = M_0 * (1 - e^{\frac{-t}{T_1}})</script><p>增长的速率就是用这个时间常数，T1表示，纵向弛豫时间。</p><p>单纯从磁化量变化或者磁化的过程来看，来定义它，但实际上其一它还有更多的物理含义。<br>物理上定义为自旋-晶格弛豫时间。</p><p>我怎么样才能够磁化，让它充分磁化？充分磁化，因为它是一个无限接近的过程。<br>怎么样在比较少的时间里面，就让它代表了充分磁化？<br>T1，后面要讲到孔隙介质T1的时候，它还对应了我们样品的很多的属性，很多的特性，可以做很多的应用。</p><p>在跟B0磁场垂直的方向，加一个B1磁场。<br>B1磁场的频率刚好等于拉摩尔进动频率，此时会发生共振。核加了这样一个磁，核磁，然后再加一个磁场，共振。</p><p>共振：共振的情况就是低能态的原子核会从电磁场里面吸收能量，当拉莫尔频率进动的频率和外加磁场的频率相等的时候，低磁低能级的低能态的这个自旋会从这个磁场里面吸收能量，跃迁到高能态。</p><p>从量子力学的角度来说，它量子跃迁了第一轮胎的这个自旋发生了，量子跃迁到高能上去了。<br>从经典力学的角度来描述，需要一个很重要的概念叫坐标变换，没有这个坐标变换，我们很难来理解很多事儿。<br>目前我们讨论那么进度评论这些都是在叫实验室坐标系里面，实验室坐标系，就是我们现在坐在这里，所以我们能够看到它高速的进洞，看到它自己去在自选看这两个现象。<br>但是磁场加了以后，你要理解后续发生的行为，要做一个坐标系的变换，要在旋转坐标系里面来看待问题。<br>我们自己要跟着进动的自旋跑步跑，跟着进动自旋跑，就是在自旋，围绕着 B0磁场，我们现在要跟着它一起跑，那就叫旋转坐标系，我们是在旋转的，跟着进动频率在旋转。<br>我们加了电磁波加的 b1磁场，它是个脉冲磁场。早期工作的时候是叫连续波，连续波的时候它不是一个脉冲的，但是现在所有的核磁共振技术是脉冲核磁共振技术。<br>脉冲里面有一个宽度脉冲的宽度，然后有一个幅度，然后里面有一个调制频率，调制频率就是拉莫尔的进动频率。<br>所以脉冲电磁波它有三个要素，调制频率，幅度，长度。<br>你加上脉冲以后，如果我们在旋转坐标系里面来看，就有一个很重要的现象。<br>你就发现原来在旋转坐标系里面，我们随着这个来旋转的话，那么原来宏观磁化量是m，然后在旋转坐标系下，加上脉冲后，实际上等效于把m要搬转翻转。翻转到一个角度：<script type="math/tex">\Theta</script></p><script type="math/tex; mode=display">\Theta = \gamma B_1 \tau</script><p>前提条件是脉冲的调制频率等于进动频率，或者等于旋转坐标系的频率，否则它不会共振，否则也看不到板转的过程。</p><p>假设这个条件满足的情况下，那么 M就被扳转一个<script type="math/tex">\Theta</script>角，这个<script type="math/tex">\Theta</script>角完全由脉冲它的高度和它的长度来定义。如果希望把 M翻转到XY平面上来，实际上就是翻转90度，我们把脉冲叫90度脉冲。如果要搬转到180度，也就是从这个方向搬到另外一个方向，我们就把板转角叫做180度脉冲。</p><img src="/2024/05/14/%E6%A0%B8%E7%A3%81%E5%85%B1%E6%8C%AF%E6%B5%8B%E4%BA%95/%E6%A0%B8%E7%A3%81%E5%85%B1%E6%8C%AF%E5%8E%9F%E7%90%86%E7%BB%8F%E5%85%B8%E5%85%AD%E5%BC%A0%E5%9B%BE-2.png" class="" title="核磁共振测井"><p>本来是 M0是这个方向的，然后我们加一个90度脉冲意味着什么呢？这个方向的磁化量，我们把它搬走了，XY平面来，90的脉冲激发完了以后，如果我们用线圈去接收的话，你可以接收到一个信号，这个信号就是我们把这个FID叫自由感应衰减。</p><p>这个FID信号是因为我们把它搬走了，XY平面以后，它会散向。在旋转这个系里面，我们把它叫做相位散掉了。相位的分散，实际上对应的是实验室坐标系里面，它的频率不一样。<br>它的频率为什么不一样？因为它的磁场不是完全均匀的，磁场不是完全均匀，所以拉莫尔频率不是完全一样，它就会分散。在我们的旋转坐标系里面，就是它们的相位不一样，那么相位不一样。<br>所以慢慢的随着时间推移，它慢慢散相散相，散相了以后就变成了各个方向都有了，所以在XY平面上，平均值慢慢就归零了，这个过程我们也把它叫做横向弛豫过程。</p><p>FID在理想条件下，我们也是可以把它用一个方程来表达出来的。</p><script type="math/tex; mode=display">M_t = M_0 * e^{\frac {-t} {T_2 ^ * } }</script><p>T2称为横向弛豫时间，<script type="math/tex">T_ 2 ^ *</script> 是理想状态的，<script type="math/tex">T_ 2</script> 是实际测量到的。</p><p>因为这里面可能有磁场的不均匀性等等问题，所以 <script type="math/tex">T_ 2 ^ *</script> 跟我们样品本身的T2可能会有区别，甚至会区别比较大。但是从它的弛豫机制来说，我们把这个过程叫横向弛豫的过程。有一个横向弛豫的速率，叫T2，横向弛豫时间。</p><p>但是由于磁场本身的不均匀性，使得拉莫尔频率不一样，使它的相位在实验室在旋转坐标系里面，它不容易重聚，所以这样得到的T2不是我们本真的T2，而是T2和磁场的非均匀性的一个共同作用的结果。</p><p>用FID是测不到真实的T2的，如何测量到真实的T2？这个时候就提出了一个叫CPMG，叫自旋回波的方法，是测量横向弛豫时间的方法。</p><p>最简单的一个自旋回波的脉冲序列，它包括什么呢？包括一个90度脉冲，把它磁化量翻转90度到xy平面，到xy平面以后，由于磁场的非均匀性，它会散相。这个时候我们再加一个所谓的180的脉冲。<br>一个90的脉冲，然后我们再过一段时间加一个180的脉冲。加一个180的脉冲，然后再等待相同的时间，会产生一个所谓的回波，叫自旋回波。自旋回波就成为我们真实的实验的一个方法，包括我们岩心分析和下面的测井，都来用自旋回波。</p><p>而且自旋回波不光是可以测一个，它还可以测很多一个序列，一个系列，这个系列我们把它叫自旋回波串。<br>就是你在90度脉冲，一个FID，然后我们加一个180的脉冲，形成一个回波，再加一个180的脉冲，再形成回波，再加再形成。你不断的加180的脉冲，它会有一串回波，而这一串回波它是按照我们的横向弛豫时间为时间常数来衰减的，所以我们通过这个方法就得到了所谓的横向弛豫时间的测量值。</p><p>在旋转坐标系里面去理解90脉冲，180脉冲，所谓的脉冲扳转角。<br>我们过去的很多的测量是一个fid信号，甚至我们在很多的化学谱里面，他就测fid信号。<br>磁场非常的均匀条件下，就用这个FID来解析它的谱学的信息。<br>通谱学的信息来获得分子的结构，分子的动力学等等很多的应用。</p><p>很多脉冲序列来做所谓的量子调控，做很多所谓的极化转移。就是它可以通过一大堆的这些脉冲序列对量子调控，然后让分子发生变化，然后来获取分子里面的信息，来实现对分子的表征，对分子结构的解析。高场方向发展。</p><p>我们这里考虑了磁场的非均匀性，因为高场的时候希望磁场越均匀越好，但是我们面对低场，面对我们的孔隙介质，你是不可能做到均匀的。我们也不去用这个FID了，我们来做弛豫的测量。在非均匀磁场的条件下，怎么样把它的持续时间测准。</p><p>怎么产生回波？</p><p>90度脉冲以后，我们仍然在旋转坐标系里面来看的话，那就是相位的问题。因为我们知道这一个磁化量，它实际上是很多单个的自旋磁化量的一个叠加。那么单个的自旋它可能有我们考虑到磁场的非均匀性，它可能是由于我们外加的B0磁场不均匀，也可能是由于我们的样品本身里面产生了一个背景梯度磁场，不管什么原因，就导致了每一个自选所经历的磁场强度可能是不一样的。</p><p>磁场强度不一样，拉莫尔频率不一样，旋转坐标系里面的旋转频率不一样，旋转坐标系里面的相位不一样。</p><p>所以在这个里面我们就看到一部分磁场，一部分自旋，它会往这个方向跑，跑的比这个B0磁场的拉莫尔频率还快，还有一部分可能跟不上，所以你在前面旋转坐标系里面来看，你就比方说我们有三个人的跑步，如果我的速度刚好是正中间的话，那么有一个人跑得比较快的，有一个人跑得比较慢的，我在我看来那个人跑得快的就往那边去跑的，慢的就往后再往回再往那边跑，跑得快的再往前面跑，跑的慢的在后面跑，如果以我作为参照系的话。那么这里也就是一样，如果我们以B0磁场，这个H核和在B0磁场对应的拉莫尔频率作为参照，作为参照系的话，那么一部分磁场不均匀的比较大的一个信号，它就相当于在这个里面往前跑，而一部分磁场强度比较小的相当于往后跑，慢慢就分散了。</p><p>如果我们只考虑两个的话，实际上很多的那么这个过程我们把它叫做散相。那么这个项目的分散了以后，当然慢慢算就没有了，所以成了这个FID。<br>但是当我们再加一个180的脉冲，前面我们讲加一个180的脉冲，就意味着它做180度的翻转。</p><p>180板转有很多可能性，一种就是说我做180度的翻转，实际上把跑得快的翻转的跑的慢的地方去了，把跑得比较慢的搬走的跑得快的地方去，也就是说一般是相当于我们跑步，我们三个人在跑步，然后一个指令下来，全部向后跑，全部向后跑的结果什么我就往那边跑了是吧？原来跑得慢的那个人，他反而变得朝着我的方向跑，跑得比较快的人反而落后于我了，但他也要向着我来跑，原来跑的快的，慢慢的，因为他经历的路径多，他就往那边跑了，然后跑得慢的他就跑得快的往这边。最后在同样的时间里面，他们跑到这个地方来就会重聚，在重聚在一块的结果，我们就会通过我们的线圈就观测了一个很大的信号叫回波信号，回波就是这样来形成的。</p><p>所以这里就有一个旋转坐标系里面来分析脉冲的作用和回波的形成。那么然后180度脉冲以后，到这里来重聚，然后重聚了以后你把回波采集到了，过一段采集完了以后，然后他又要分散了，又要反散相，散相了以后，那么你再来一个180度，又测量了一下，不断地散相、重聚、散相、重聚、散相、重聚。</p><img src="/2024/05/14/%E6%A0%B8%E7%A3%81%E5%85%B1%E6%8C%AF%E6%B5%8B%E4%BA%95/%E6%A0%B8%E7%A3%81%E5%85%B1%E6%8C%AF%E5%8E%9F%E7%90%86%E7%BB%8F%E5%85%B8%E5%85%AD%E5%BC%A0%E5%9B%BE-3.png" class="" title="核磁共振测井"><p>我们统一来看：首先我们把样品放到外加磁场里面，放到外加磁场里面，那么B0所以它慢慢的就遵守纵向弛豫的过程，进行极化，达到M0，有了一个宏观磁化矢量，可观测量。然后我们用个脉冲这个序列加一个脉冲射频场，脉冲射频的有90度，一串180度，那么如果这个时候我没有测量的话，你就发现90的脉冲以后有FID，然后在180的脉冲以后就有一串的回波的信号，回波串。然后我们再来，测完了以后我们再来这个过程，又是磁化，又是测量，所以你最后看到的仪器给你显示的就是这样一个B0磁场，然后磁化，然后有一个脉冲射频场，然后再采集，然后再这样循环下去。</p><p>T2这个信号是逐渐衰减的，第一个180度后，第一个回波串信号幅度是大的，它逐渐衰减。其实在过程中一个就是一个相散和聚相的问题，聚相信号最大化，为什么第二个回波串它的能量要减小了？<br>T2本质上叫自旋-自旋弛豫时间，实际上它反映的是两个自旋之间或者自旋-自旋之间的很多的这种相互作用，这种相互作用它除了聚相的过程，除了相位重聚的过程以外，它本身由于自旋和自旋的相互作用，它会消耗能量，所以它是一个衰减的过程。它最后要恢复到没有了，在轴上它慢慢就没有了。<br>所以，T2是一个样品的重要的物理性质，它是一个它的物理特性，需要我们只是把T2通过这个方式把它测量出来。这个方式它之所以这个衰减，它是由它的物理性质来决定的，是自旋-自旋相互作用消耗能量来决定的，正是它我们想要研究它的一个特性。<br>相当于每一次聚相和散相他自身的能量已经衰减。</p><p>等待时间是不是就相当于必须要恢复最大的M0？</p><script type="math/tex; mode=display">T_w = 3 * T_1 → 95% M_0</script><script type="math/tex; mode=display">T_w = 5 * T_1 → 99.7% M_0</script><p>磁场的非均匀性：B0的非均匀性 + 介质本身的非均匀性。在B0的作用下，岩石的多孔介质本身会产生一个背景梯度磁场，而且你B0越大，B0背景梯度磁场就越大。</p><img src="/2024/05/14/%E6%A0%B8%E7%A3%81%E5%85%B1%E6%8C%AF%E6%B5%8B%E4%BA%95/%E6%A0%B8%E7%A3%81%E5%85%B1%E6%8C%AF%E5%8E%9F%E7%90%86%E7%BB%8F%E5%85%B8%E5%85%AD%E5%BC%A0%E5%9B%BE-4.png" class="" title="核磁共振测井"><p>多孔介质中的问题：<br>第一：液体那么到了孔隙里面的时候，这是孔隙的表面，它就会形成一个在表面上面形成一层膜，行非常重要。水流液体的分子，它本身会快速的扩散。里面的水中心部位的水，它的水分就快速的扩散。那么到了瓶子的表面的时候，这个界面上面就表面，那么它会形成一个这样的简单的膜，这个膜不是简单的膜，这个膜可能很复杂，这个膜的科学表面的科学无处不在。<br>1、表面是什么？表面还有很多胶接物，对吧？那么它有大量的这种非成对的电子，很多的非水性类的电子，这些非成对的电子的存在就导致了它会跟你相互作用，甚至会发生化学反应。<br>2、表面润湿性问题？<br>3、表面粗糙程度不同？表面的粗糙度可能也不一样，海岸线一样的，很粗糙不光滑的。因为在扩散的过程，在中间扩散的时候，它是布朗运动描述，可是一旦到定界面相接触的时候，他就会慢下来，碰撞淹没。所以这里面就有一个过渡带在这个地方，我们叫分子的表面层。</p><p>自由状态的液体，它有一个本身的T2，也有一个本身T1，但是你一旦液体放在孔隙里面，饱和到孔隙里面以后，它所测量出来的T2、T1，就跟原来完全不一样了。<br>在孔隙介质里面以后的T1、T2与饱和在孔隙介质本身的T1、T2很不一样。</p><script type="math/tex; mode=display">\frac{1}{T_1} = \frac{1}{T_{1 bulk}} + \rho_1 \frac{S}{V}</script><script type="math/tex; mode=display">\frac{1}{T_2} = \frac{1}{T_{2 bulk}} + \rho_2 \frac{S}{V} + \frac{ D (\gamma G T_E)^2 }{12}</script><p>T1不仅和自身有关，还跟比表面(S/V)有关，纵向弛豫强度(ρ1)有关<br>T2不仅与自身有关，还跟比表面(S/V)有关，横向弛豫强度(ρ1)有关，还有扩散项有关。</p><p>又有别的扩散弛豫理论，孔隙介质里面的弛豫跟孔隙的直径和扩散系数的比值又有关系。在这个条件它会分分快扩散区域，慢扩散区域，中等扩散区域。</p><p>如果说在常规里面，那几个假设可能还存在的话，成立的话，那么在页岩油气以及非常规里面，那几个假设可能就不成立了，假设条件不成立了，所以还能不能用？</p><p>应用1：孔径测量</p><p>当测量的T1和T2跟孔径对应的时候，T1忽略了自由弛豫，T2忽略了自由弛豫和扩散弛豫，才有了这样一个持续时间和孔径分布的一个对应关系，或者说一个相关性。因为这个量的量纲就是孔径，那么这样才有了这样一个定性的这样一个关系。<br>当然也可以定量，定量就是假设你知道这个的情况下，知道它的纵向持续强度和横向持续强度，你就可以来做定量。</p><p>那么如果成立这个时候，我们才有可能这样，一个是多指数，一个是统计，我们可以做孔径上的标定。<br>那么我可以说在常规游戏的时候，这个没有太多的问题，但是在页岩油气的时候这个一定有问题。我们可能没有这样的信噪比和分辨率，去表证页岩的孔径。</p><p>应用2：T2分布</p><p>在第一个应用假设存在的情况下，T2的大小跟孔径有了对应关系，所以需要分布可以把它标定成孔径的分布。一个简单的物理的原理就是说小孔隙流体不容易流动，大孔隙的流体容易流动。又假设孔隙与孔隙之间是连通的，注意死孔不是这样不存在，假设孔隙孔隙是连通的条件下，那么大孔是可流动的，小孔是没法流动的。那些就是碎屑岩，分选的比较好，并且也胶结作用不是很大的一些条件下面，这种状态他才成立这个东西。</p><p>那么如果存在这个的话，我们说我们在物理上就可以说这一部分是可动，另一部分是不可动。</p><p>那么既然在概念上有这两个，我们就想象可能有一个截止值。它首先截止值并不是它的T2截止值，这个截止值首先从物理上来说，它应该是一个孔径的截止值，当我们把孔径分布上面，一部分是束缚的，一部分是可动的，分开的时候，我们假设有一个孔径的介质，由于核磁的T2分布能够标定为孔径分布，所以我们对应的就有一个T2的截止值，这是有点野蛮粗暴，但是管用。它简单它管用，因为测井里面经常会遇到特别多的影响因素，你要每个都考虑的话，你是考虑不清楚的，那就抓主要的东西，管用。<br>T2截止值是表象，孔径截止值是本质。</p><p>所以我们现在假设孔径都是这种一个颗粒这样堆积起来的，那么它的T2分布就是代表一个孔径的分布。<br>对核磁来说，应该它的反应孔径的覆盖范围是目前所有的技术里面比较比较大的范围，而且是一个比较准的范围，而且不损害样品。</p><p>那么假设成立的情况下，这个时候我们就可以通过实验的方法来获得一个确定值，用来确定它的流体的赋存状态用，来获取我们非常重要的束缚水信息。所以一直就发展了一套标准实验流程和方法。</p><img src="/2024/05/14/%E6%A0%B8%E7%A3%81%E5%85%B1%E6%8C%AF%E6%B5%8B%E4%BA%95/%E6%A0%B8%E7%A3%81%E5%85%B1%E6%8C%AF%E5%8E%9F%E7%90%86%E7%BB%8F%E5%85%B8%E5%85%AD%E5%BC%A0%E5%9B%BE-5.png" class="" title="核磁共振测井"><p>有标准的流程，也有假设。<br>标准的流程：<br>第一步，把样品100%饱和水的时候，做一个核磁共振CPMG测量，然后做一个反演，得到它的T2分布，然后对应的相当于一个孔径的分布。<br>第二步，我们把这个岩样脱水，注意用离心机脱水，当然你也可以用别的方法脱水，然后脱完水以后，把那些自由水或者自由流体给它离心掉了，或者给它脱掉了，我们认为这个样品里面剩下来的都是束缚水。然后重复测量。<br>注意这是一个非常重要的概念，我们认为。谁认为？做实验的人认为。这个说法对不对？对也不对，这个自由裁定权太大，问题出在这儿。<br>第三步，两个放在一块，然后来求一个100%饱和的时候的一个孔隙度，然后只有束缚水时候一个记录束缚水孔隙度。自由水和束缚水相交的地方就是所谓的T2截止值，代表的是孔径截止值。</p><p>所以它有标准的规范流程，可是有一点它没有规范流程，你认为他是舒服水。</p><p>关键是你怎么去控制它，我认为这个里面就是舒服水？<br>那离心机的离心的速度，它可能会设置不一样，高了就把你们本来就束缚的也把它离心出来了，低了他还有可能所谓的在自由水，它也变成了在束缚水里面的。</p><p>斯伦贝谢提出相对截止值，放弃绝对的截止值。</p><p>测井的渗透率计算他是个估算的问题，是吧？我们并不直接的测量，我们是通过一些间接的量去估算的渗透率，那么估算的过程中间，它就会有很多的影响因素在这里，这些影响因素决定了我们究竟得到一个什么样的渗透率。</p><p>孔隙度、束缚水、渗透率是岩石物理特性，但是在流体的时候是另外的概念。流体储存的空间以及流体本身的性质和每一种流体的含量，这些对我们来说当然非常重要。</p><p>在单个孔里面，如果流体它们是混相的话，你是分不出来的，你是分不出来几个峰的，他们就是一个峰混在一块的。但是当我们中间有油，比方说我们假设中间可能也是个油珠，在哪个地方也可能跟他有认识性关系的等等。这个时候因为油和水它们不稳，像是它如果是溶解油油的话，你可能也看不出来。当他们两个不混相的时候，在他们的界面就有一层膜，他们互相不能扩散，不能扩散的情况下，这个时候他们就是两个分开的弛豫机制起作用。这个时候我们测量回波算，你就可以看到这个峰代表的是界面上的弛豫，这个峰是代表水包油的弛豫。所以这个时候就有了这样一个你看很明显的一个一个区分。</p><p>更进一步，假设这是股价，这个是骨架，这是孔隙是吧？孔隙里面有一个油珠，随着油的减少，你看水的峰，油的峰都在发生相应的变化。</p><p>对这两个问题，第一个问题只是我们我们是可以去识别油气了，油水了，可以把它们分开了。<br>第二个怎么分开，它是一个怎么样的变化的过程？<br>你看是非常明确的一个物理的概念，物理的意义在这里面了，你可以看到要把它分析出来，这分析出来将来对我们应用是有用的。</p><p>孔隙表面峰随着孔隙表面的水的增加，你看它的T2在变大，它不光是峰值在变化，T2也在变化。因为它跟界面的相互作用在变化。</p><p>核磁不管是谱学还是成像还是弛豫，它最重要的一点就是说几乎所有的表象都能够对应原理，这是核磁一个分析测试手段受到大家欢迎和青睐的重要的原因之一。当我们说不清楚的时候，是因为我们对样品缺少相关的理论缺少认识。</p><p>在孔隙里面的时候，然后在孔隙里面的时候怎么来区分流体的赋存状态，然后怎么样去求取相应的参数，然后当流体里面有不同的流体的时候，那么它的弛豫测量值上面又有什么表现？这是我们应用的基础。</p><img src="/2024/05/14/%E6%A0%B8%E7%A3%81%E5%85%B1%E6%8C%AF%E6%B5%8B%E4%BA%95/%E6%A0%B8%E7%A3%81%E5%85%B1%E6%8C%AF%E5%8E%9F%E7%90%86%E7%BB%8F%E5%85%B8%E5%85%AD%E5%BC%A0%E5%9B%BE-6.png" class="" title="核磁共振测井"><p>因为一维里面尽管好像有，但是通常情况下分不出来。更多的时候是分不出来的，叠在一块，叠在一块你就要用新技术是吧？用就要认识它的三维里面是什么样子，然后就要有发展二维的是吧？轻轻自由中等粘度的油稠油天然气分别通过二维怎么把它能够更好的区分开来是吧？</p><p>定域谱的这些技术，一个像素里面，那么它的t2分布是什么样子？</p><h2 id="来源《核磁共振测井原理与应用》书籍截图"><a href="#来源《核磁共振测井原理与应用》书籍截图" class="headerlink" title="来源《核磁共振测井原理与应用》书籍截图"></a>来源《核磁共振测井原理与应用》书籍截图</h2><img src="/2024/05/14/%E6%A0%B8%E7%A3%81%E5%85%B1%E6%8C%AF%E6%B5%8B%E4%BA%95/%E6%A0%B8%E8%87%AA%E6%97%8B.png" class="" title="核磁共振测井"><img src="/2024/05/14/%E6%A0%B8%E7%A3%81%E5%85%B1%E6%8C%AF%E6%B5%8B%E4%BA%95/%E5%8E%9F%E5%AD%90%E6%A0%B8%E8%BF%9B%E5%8A%A8.png" class="" title="核磁共振测井"><img src="/2024/05/14/%E6%A0%B8%E7%A3%81%E5%85%B1%E6%8C%AF%E6%B5%8B%E4%BA%95/%E5%AE%8F%E8%A7%82%E7%A3%81%E5%8C%96%E7%9F%A2%E9%87%8F.png" class="" title="核磁共振测井"><img src="/2024/05/14/%E6%A0%B8%E7%A3%81%E5%85%B1%E6%8C%AF%E6%B5%8B%E4%BA%95/T1%E5%BC%9B%E8%B1%AB.png" class="" title="核磁共振测井"><img src="/2024/05/14/%E6%A0%B8%E7%A3%81%E5%85%B1%E6%8C%AF%E6%B5%8B%E4%BA%95/%E8%83%BD%E7%BA%A7%E8%B7%83%E8%BF%81.png" class="" title="核磁共振测井"><img src="/2024/05/14/%E6%A0%B8%E7%A3%81%E5%85%B1%E6%8C%AF%E6%B5%8B%E4%BA%95/%E6%89%B3%E8%BD%AC%E8%A7%92.png" class="" title="核磁共振测井"><img src="/2024/05/14/%E6%A0%B8%E7%A3%81%E5%85%B1%E6%8C%AF%E6%B5%8B%E4%BA%95/%E8%87%AA%E7%94%B1%E6%84%9F%E5%BA%94%E8%A1%B0%E5%87%8F%E4%BF%A1%E5%8F%B7.png" class="" title="核磁共振测井"><img src="/2024/05/14/%E6%A0%B8%E7%A3%81%E5%85%B1%E6%8C%AF%E6%B5%8B%E4%BA%95/%E8%87%AA%E6%97%8B%E5%9B%9E%E6%B3%A2%E4%BF%A1%E5%8F%B7.png" class="" title="核磁共振测井"><img src="/2024/05/14/%E6%A0%B8%E7%A3%81%E5%85%B1%E6%8C%AF%E6%B5%8B%E4%BA%95/CPMG%E8%84%89%E5%86%B2%E5%BA%8F%E5%88%97.png" class="" title="核磁共振测井"><img src="/2024/05/14/%E6%A0%B8%E7%A3%81%E5%85%B1%E6%8C%AF%E6%B5%8B%E4%BA%95/T2%E5%BC%9B%E8%B1%AB.png" class="" title="核磁共振测井"><img src="/2024/05/14/%E6%A0%B8%E7%A3%81%E5%85%B1%E6%8C%AF%E6%B5%8B%E4%BA%95/CPMG%E8%84%89%E5%86%B2%E5%BA%8F%E5%88%97-2.png" class="" title="核磁共振测井"><img src="/2024/05/14/%E6%A0%B8%E7%A3%81%E5%85%B1%E6%8C%AF%E6%B5%8B%E4%BA%95/%E5%AD%94%E9%9A%99%E6%B5%81%E4%BD%93%E5%BC%9B%E8%B1%AB.png" class="" title="核磁共振测井"><img src="/2024/05/14/%E6%A0%B8%E7%A3%81%E5%85%B1%E6%8C%AF%E6%B5%8B%E4%BA%95/%E5%AD%94%E9%9A%99%E6%B5%81%E4%BD%93%E5%BC%9B%E8%B1%AB-2.png" class="" title="核磁共振测井"><h1 id="NMR数据采集"><a href="#NMR数据采集" class="headerlink" title="NMR数据采集"></a>NMR数据采集</h1><p>测井仪器除了探测FID和CPMG自旋回波信号，还需要将这些信号进行数字化、存储和处理。典型的CPMG自旋回波串通常有成百上千的回波，将整个回波曲线数字化难度太大，故而只需测量和存储自旋回波信号的峰值即可。信号的记录方式有两种：<code>单道检测法</code>和<code>正交检测法</code>。</p><p><code>单道检测法</code>：从样品来的射频信号送入单个的相敏检测器中以识别样品信号频率与射频脉冲载频的频率(即为测量值设定的平均拉莫尔频率)之间的差异。由于单个相敏检测器只能得到频率差异的大小，而不能确定相位差，所以在NMR测井中不能利用单道检测法。</p><p><code>正交检测法</code>：输入的采样信号送到两个同样的相敏检测器中，这两个检测器的参考信号相差90°，合成声频信号被放大，然后通过同样的低通滤波器，经多元模数转换器数字化并存储在单独的数据存储区中。正交傅里叶变换以与单道检测法相同的方式产生实数谱和虚数谱，并可区分出相对与射频载频的正频率和负频率。</p><p>为了消除振铃和基线偏移的影响，测井作业中总是成对采集T2的CPMG测量值，该方法称为交叉相位对(PAPs)。第一个回波串的采集利用常规设置，而在第二组中发射脉冲的相位改变了180°，从而使得自旋回波具有负振幅，这两组CPMG信号被称为正相位和负相位，结合形成PAPs，用以消除振铃和基线偏移的影响。</p><h2 id="相位旋转"><a href="#相位旋转" class="headerlink" title="相位旋转"></a>相位旋转</h2><p>记录数据的两个通道通常称为X通道和Y通道。这两个通道的信号表达式如下：</p><script type="math/tex; mode=display">X_{j}=S_{j}\cos \varphi+\varepsilon_{j}^{X}</script><script type="math/tex; mode=display">Y_j=S_j sin\varphi +\varepsilon_j^Y</script><p>式中，<script type="math/tex">X_j</script> 和 <script type="math/tex">Y_j</script> 分别是 X 和 Y 通道的第j个回波的幅度，<script type="math/tex">S_j</script>是回波的实际幅度，<script type="math/tex">\varphi</script>为相位角，<script type="math/tex">\varepsilon_{j}^{X}</script> 和 <script type="math/tex">\varepsilon_j^Y</script> 分别是 X 和 Y 通道的第 j 个回波的噪声。如果将回波串中的所有回波相加(回波个数为n)，可以得到：</p><script type="math/tex; mode=display">\sum_{j=1}^nX_j=\left[\sum_{j=1}^nS_j\right]cos\varphi+\left[\sum_{j=1}^n\varepsilon_j^X\right]</script><script type="math/tex; mode=display">\sum_{j=1}^nY_j=\left[\sum_{j=1}^nS_j\right]sin\varphi+\left[\sum_{j=1}^n\varepsilon_j^Y\right]</script><p>因为噪声是随机的，取正负值的概率相等。如果去平均噪声进行计算，上述方程等式右边的第二项将最终趋近于零。将两式相比，则可以得到相位角公式：</p><script type="math/tex; mode=display">\varphi=\arctan\left[\sum_{j=1}^{n}Y_{j}/\sum_{j=1}^{n}X_{j}\right]</script><p>通过上式得到相位角后，便可利用下面的等式进行坐标轴的旋转，从而得到信号道和噪声道。</p><script type="math/tex; mode=display">C_{signal}(j)=X_jcos\varphi+Y_jsin\varphi=S_j+(\varepsilon_j^Xcos\varphi+\varepsilon_j^Ysin\varphi)</script><script type="math/tex; mode=display">C_{noise}(j)=-X_jsin\varphi+Y_jcos\varphi=(-\varepsilon_j^Xsin\varphi+\varepsilon_j^Ycos\varphi)</script><h1 id="NMR数据处理"><a href="#NMR数据处理" class="headerlink" title="NMR数据处理"></a>NMR数据处理</h1><p>核磁共振测井技术是一种间接测量技术，它所采集到的原始数据是岩石孔隙中所含流体弛豫信号的叠加，即自旋回波信号，必须采用现代数学方法对回波信号进行反演得到T2谱才能进一步应用，并且反演结果直接影响后续储层参数计算和流体识别评价的准确性。</p><p>假设有n个回波，每个回波在时间 <script type="math/tex">t_i</script> 处的幅度测量值为 <script type="math/tex">g_i</script>，并假设有m个预先选择的驰豫时间 <script type="math/tex">T_j</script> 在对数刻度上等间隔分布。回波幅度 <script type="math/tex">g_i</script> 为  <script type="math/tex">t_i</script> 时刻测量的系统磁化强度 <script type="math/tex">M(t_i)</script> ，并经由t=0时的磁化强度 <script type="math/tex">M_0</script> 的归一化。回波测量值 <script type="math/tex">g_i</script> 的方程表达式如下：</p><script type="math/tex; mode=display">g_i=\frac{M(t_i)}{M_0}=\sum_{j=1}^ma_jf_je^{-t_i/T_j}+\varepsilon_i</script><p>其中，i=1,…,n。<script type="math/tex">f_j</script>是T2驰豫时间为 <script type="math/tex">T_j</script> 的孔隙度的部分孔隙度，在NMR测井中，回波幅度往往采用孔隙度单位(p.u.)。<script type="math/tex">a_j</script>为极化因子，它的方程如下：</p><script type="math/tex; mode=display">a_{j}=1-e^{-TW/T_{1j}}</script><p>通常等待时间很长，往往是T1驰豫时间的三倍，在这种情况下，因子<script type="math/tex">a_j</script>j为1。</p><p>因为所有的<script type="math/tex">e^{-t_i/T_j}</script>都已知，求解<script type="math/tex">f_j</script>就是一个线性反演问题。可以用最小二乘法拟合来使下面的求和最小化，即：</p><script type="math/tex; mode=display">\min\left\{\varphi(f)=\sum_{i=1}^{n}\frac{1}{\delta_{i}^{2}}\left[\sum_{j=1}^{m}f_{j}e^{-t_{i}/T_{j}}-g_{i}\right]\right\}</script><p>其中，<script type="math/tex">δ_i</script> 是第i个回波 <script type="math/tex">g_i</script>的测量误差。</p><h2 id="多指数反演算法"><a href="#多指数反演算法" class="headerlink" title="多指数反演算法"></a>多指数反演算法</h2><p>一维核磁共振的一般响应方程为：</p><script type="math/tex; mode=display">\mathrm{b(t)}=\int f(T_i)(c_1-c_2\cdot\exp{(-t/T_i)})dT_i+\varepsilon</script><p>其中，i=1,2。当i=1时表示T1信号，<script type="math/tex">c_1</script>=1，<script type="math/tex">c_2</script>=1表示饱和恢复法，若<script type="math/tex">c_1</script>=1，<script type="math/tex">c_2</script>=2表示反转恢复法；当i=2时表示T2信号，这时<script type="math/tex">c_1</script>=0，<script type="math/tex">c_2</script>=-1。</p><p>上式的离散形式为：</p><script type="math/tex; mode=display">b_k=\sum_{T_{i,min}}^{T_{i,max}}f(T_{i,j})\left[c_1-c_2\cdot exp^{-\frac{t_k}{T_{i,j}}}\right]+\varepsilon_k</script><p>其中，j=1,···n, n为预选的驰豫分量的个数；k=1,···m, m为回波个数，<script type="math/tex">t_k</script>为采集时间（通常为回波间隔的整数倍）；<script type="math/tex">b_k</script>为回波信号幅度；<script type="math/tex">T_{i,j}</script>为<script type="math/tex">T_i</script>预选的第 j个弛豫时间分量；<script type="math/tex">ε_k</script>为测量噪声；<script type="math/tex">f(T_{i,j})</script> 为弛豫时间<script type="math/tex">T_{i,j}</script>的幅度。</p><p>求解上述方程，实际上是解第一类Fredholm积分方程，这是一个非适定问题，即在误差允许的条件下，存在不同的<script type="math/tex">f(T_{i,j})</script>驰豫时间分布函数都能相当好地拟合原始回波衰减曲线。</p><h2 id="SVD算法"><a href="#SVD算法" class="headerlink" title="SVD算法"></a>SVD算法</h2><p>SVD算法基于如下分解定理：对任意的矩阵<script type="math/tex">A_{m×n}</script>，都可以分解为正交矩阵<script type="math/tex">U_{m×m}</script>，非负对角矩阵<script type="math/tex">W_{m×n}</script>以及正交矩阵<script type="math/tex">V_{n×n}</script>的转置的乘积，即</p><script type="math/tex; mode=display">A_{m\times n}=U_{m\times m}\cdot[\mathrm{diag}(w_j)]_{m\times n}\cdot V_{n\times n}^T</script><p>对角元素<script type="math/tex">w_1>w_2>···>w_m≥0</script>，w称为矩阵A的奇异值。</p><p>对于如下的多指数衰减T2模型，有</p><script type="math/tex; mode=display">y=M·f</script><p>其中<script type="math/tex">y=(y_1,y_2,···,y_n)^T</script>为测量的自旋回波衰减信号，<script type="math/tex">M=[m_{ij}]_{n×m}=[exp(-t_i/T_{2j})]_(n×m)；f=(f_1,f_2,···,f_n)^T</script>为驰豫时间<script type="math/tex">T_{2j}</script>对应的各点的幅度值，<script type="math/tex">T_{2j}</script>为预先指定的T2时间分布系列，典型的取法为在<script type="math/tex">(T_{2min},T_{2max})</script>区间内对数均匀的选取m个点，也可采用2的幂指数布点、线性均匀布点等方式。若矩阵的条件数为无穷大，则该矩阵奇异；若矩阵的条件数太大，即其倒数超出了机器的浮点精度，则称该矩阵为病态的矩阵。采用SVD分解法来求解上式，系数矩阵<script type="math/tex">M_{m×n}=U_{m×m}·[diag(w_j)]_{m×n}·V_{n×n}^T</script>，则上式最小二乘意义下的解为：</p><script type="math/tex; mode=display">f=V\cdot[diag(\frac{1}{\mathrm{w_{1}}},\frac{1}{\mathrm{w_{2}}},\cdots,\frac{SNR}{\mathrm{w_{1}}},0,\cdots,0)]\cdot(U^{T}\cdot\mathrm{y})</script><p>这里给出了矩阵条件数小于等于SNR的限制，避免了解的不确定性。其中SNR为从测量数据中估算出的信噪比。SNR定义为第一个回波的幅度值除以误差矢量r的标准差σ。</p><h2 id="T2谱非负限制性的实现"><a href="#T2谱非负限制性的实现" class="headerlink" title="T2谱非负限制性的实现"></a>T2谱非负限制性的实现</h2><p>按照如上SVD算法对矩阵M进行奇异值分解后，根据信噪比计算出截断值为<script type="math/tex">SNR/w_1</script> ，对分解得到的非负矩阵<script type="math/tex">W_{m×n}</script>求逆，因为对角元素按其角标增大而减小，故求逆后，对角元素随其角标增大而增大，寻找到恰好比截断值小的对角元素的角标i，对i其后的对角元素赋值为0，对角标为i的元素则进行重新赋值：</p><script type="math/tex; mode=display">W(i,i)=\frac{1}{w_{i}}*[(w_{i-1}-\frac{SNR}{w_{1}})/(w_{i-1}-\frac{1}{w_{i}})]</script><p>将重新赋值的对角矩阵 <script type="math/tex">W=diag(1/w_1 ,1/w_2 ,···,W(i,i),0,···,0)</script> 代入到f的式子中，若求得f的结果中存在负值，则记下负值的角标，并删除矩阵M中对应的列，删掉T2布点中对应的角标的值。将删列的矩阵M再进行SVD分解…，重复循环直到计算得到f中不再有负值存在。<br>缺点是会破坏T2分布的连续性，造成T2谱的畸形。</p><h2 id="BRD算法"><a href="#BRD算法" class="headerlink" title="BRD算法"></a>BRD算法</h2><p>首先给定如下的目标函数：</p><script type="math/tex; mode=display">\chi^2=\sum_{i=1}^n[y_1-\sum_{j=1}^m(f_j\cdot m_{ij})]^2+\lambda\cdot\sum_{j=1}^mf_j^2=||y-Mf||^2+\lambda||f||^2</script><p>这里<script type="math/tex">M=[m_{ij}]=[exp^{(-t_i/T_2j )}]</script>，λ为平滑因子。</p><p>对幅度f=(f_1,f_1,···,f_m)^T的第k分量求极值并令其等于0，则有：</p><script type="math/tex; mode=display">\frac{\partial\chi^2}{\partial f_k}=-2\sum_{i=1}^n\left[y_i-\sum_{j=1}^mf_j\cdot m_{ij}\right]\cdot m_{ik}+2\lambda\cdot f_k=0</script><p>交换求和顺序，并移项整理，可得：</p><script type="math/tex; mode=display">\sum_{i=1}^m[f_j\cdot\sum_{j=1}^nm_{ik}\cdot m_{ij}]+\lambda\cdot f_k=\sum_{j=1}^mm_{ik}\cdot y_k</script><p>很容易验证，k=1,2, ···,m的m个等式组成的方程组满足：</p><script type="math/tex; mode=display">(M^T\mathrm{M})\cdot\mathrm{f}+\lambda I_{m\times m}\cdot f=M^T\cdot y</script><p>上式中<script type="math/tex">I_{m×m}</script>为m×m单位矩阵。我们对方程y=M·f 做如下线性变换，令</p><script type="math/tex; mode=display">f=\mathrm{M}^T\cdot c</script><p>未知变量<script type="math/tex">c=(c_1,c_1,···,c_n)^T</script>为n×1维的，而不是m×1，采用上述变换将m维T2域空间的解变换到n维时域空间来求解。则有：</p><script type="math/tex; mode=display">M^T\cdot(M^T\text{M}+\lambda I_{n\times n})\cdot\text{c}=M^T\cdot\text{y}</script><p>则原问题的解f可以通过求解方程：</p><script type="math/tex; mode=display">(M^T\text{M}+\lambda I_{n\times n})\cdot\text{c}=\text{y}</script><p>的解c，再通过线性变换<script type="math/tex">f=M^T·c</script>回代而获得，选择合适的λ，以保证矩<script type="math/tex">(M^T M+λI_{n×n} )·c</script>的可逆，则我们就可以很容易的求得方程的最小二乘解：</p><script type="math/tex; mode=display">f=M^T\cdot(\mathrm{M}^T\mathrm{M}+\lambda\mathrm{I}(\mathrm{n}\times\mathrm{n})\cdot)^{-1}\cdot y</script><p>比较理想的平滑因子为：</p><script type="math/tex; mode=display">\lambda=\frac{\sqrt n\cdot\sigma}{||c||}</script><h2 id="T2谱非负限制性的实现-1"><a href="#T2谱非负限制性的实现-1" class="headerlink" title="T2谱非负限制性的实现"></a>T2谱非负限制性的实现</h2><p>按照如上BRD算法对模平滑函数（惩罚函数）进行T2域空间变换到时域空间后，可得初始值<script type="math/tex">c_1=y/(M^T M+λI_{n×n})</script>，继而可得<script type="math/tex">c_k=M^T·c_1</script>，若<script type="math/tex">c_{ki}>0</script>则<script type="math/tex">f_i=c_{ki}</script>（若<script type="math/tex">c_{ki}≤0</script>则<script type="math/tex">f_i=0</script>），并将<script type="math/tex">c_{ki}>0</script>对应的矩阵M的相应列提取出来赋给新的矩阵A，然后用新矩阵A替代旧矩阵M，做以上循环求取新的<script type="math/tex">c_2</script>，<script type="math/tex">c_k</script>值。循环退出的条件有三：一，矩阵A为空即所有<script type="math/tex">c_k</script>均小于等于0；二，小于误差项即<script type="math/tex">c_2-c_1<1e-8</script>；三，超出规定的迭代次数。</p><p>基于以上迭代方法的惩罚函数有三类：模平滑、斜率平滑及曲率平滑。这些平滑方法中惩罚项的作用是压制未知函数f的振荡性。</p>]]></content>
    
    
    <summary type="html">核磁共振测井</summary>
    
    
    
    <category term="核磁共振" scheme="http://hibiscidai.com/categories/%E6%A0%B8%E7%A3%81%E5%85%B1%E6%8C%AF/"/>
    
    
    <category term="核磁共振原理" scheme="http://hibiscidai.com/tags/%E6%A0%B8%E7%A3%81%E5%85%B1%E6%8C%AF%E5%8E%9F%E7%90%86/"/>
    
    <category term="测井方法" scheme="http://hibiscidai.com/tags/%E6%B5%8B%E4%BA%95%E6%96%B9%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>人人共享的机器学习</title>
    <link href="http://hibiscidai.com/2023/12/19/%E4%BA%BA%E4%BA%BA%E5%85%B1%E4%BA%AB%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    <id>http://hibiscidai.com/2023/12/19/%E4%BA%BA%E4%BA%BA%E5%85%B1%E4%BA%AB%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/</id>
    <published>2023-12-19T01:00:00.000Z</published>
    <updated>2023-12-20T02:58:52.000Z</updated>
    
    <content type="html"><![CDATA[<img src="/2023/12/19/%E4%BA%BA%E4%BA%BA%E5%85%B1%E4%BA%AB%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E4%BA%BA%E4%BA%BA%E5%85%B1%E4%BA%AB%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0.png" class="" title="人人共享的机器学习"><p>人人共享的机器学习</p><p>原文链接：<a href="https://vas3k.com/blog/machine_learning/">Machine Learning for Everyone</a></p><span id="more"></span><p>[TOC]</p><h1 id="人人共享的机器学习"><a href="#人人共享的机器学习" class="headerlink" title="人人共享的机器学习"></a>人人共享的机器学习</h1><p>Machine Learning is like sex in high school. Everyone is talking about it, a few know what to do, and only your teacher is doing it. If you ever tried to read articles about machine learning on the Internet, most likely you stumbled upon two types of them: thick academic trilogies filled with theorems (I couldn’t even get through half of one) or fishy fairytales about artificial intelligence, data-science magic, and jobs of the future.<br>机器学习就像高中时的性爱。每个人都在谈论它，少数人知道该做什么，只有你的老师在做。如果你试图在互联网上阅读关于机器学习的文章，很可能你偶然发现了两种类型的文章：充满定理的厚厚的学术三部曲（我甚至读不完一半），或者关于人工智能、数据科学魔法和未来工作的可疑童话。</p><p>I decided to write a post I’ve been wishing existed for a long time. A simple introduction for those who always wanted to understand machine learning. Only real-world problems, practical solutions, simple language, and no high-level theorems. One and for everyone. Whether you are a programmer or a manager.<br>我决定写一篇我一直希望存在已久的帖子。对于那些一直想了解机器学习的人来说，这是一个简单的介绍。只有现实世界的问题，实用的解决方案，简单的语言，没有高级定理。一个，为每个人。无论你是程序员还是经理。</p><img src="/2023/12/19/%E4%BA%BA%E4%BA%BA%E5%85%B1%E4%BA%AB%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E4%BA%BA%E4%BA%BA%E5%85%B1%E4%BA%AB%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-1.jpg" class="" title="人人共享的机器学习-1"><h1 id="Why-do-we-want-machines-to-learn-我们为什么要让机器学习？"><a href="#Why-do-we-want-machines-to-learn-我们为什么要让机器学习？" class="headerlink" title="Why do we want machines to learn? 我们为什么要让机器学习？"></a>Why do we want machines to learn? 我们为什么要让机器学习？</h1><p>This is Billy. Billy wants to buy a car. He tries to calculate how much he needs to save monthly for that. He went over dozens of ads on the internet and learned that new cars are around $20,000, used year-old ones are $19,000, 2-year old are $18,000 and so on.<br>这是比利。比利想买一辆车。他试着计算每月需要存多少钱。他浏览了互联网上的几十个广告，了解到新车价格约为2万美元，二手车价格为1.9万美元，2年车价格为1.8万美元，以此类推。</p><img src="/2023/12/19/%E4%BA%BA%E4%BA%BA%E5%85%B1%E4%BA%AB%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E4%BA%BA%E4%BA%BA%E5%85%B1%E4%BA%AB%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-2.jpg" class="" title="人人共享的机器学习-2"><p>Billy, our brilliant analytic, starts seeing a pattern: so, the car price depends on its age and drops $1,000 every year, but won’t get lower than $10,000.<br>Billy，我们出色的分析师，开始看到一个模式：所以，汽车价格取决于它的年龄，每年下降1000美元，但不会低于10000美元。</p><p>In machine learning terms, Billy invented regression – he predicted a value (price) based on known historical data. People do it all the time, when trying to estimate a reasonable cost for a used iPhone on eBay or figure out how many ribs to buy for a BBQ party. 200 grams per person? 500?<br>在机器学习方面，Billy发明了回归——他根据已知的历史数据预测价值（价格）。人们总是这样做，试图在易趣上估计一部二手iPhone的合理成本，或者计算出烧烤派对要买多少排骨。每人200克？500？</p><p>Yeah, it would be nice to have a simple formula for every problem in the world. Especially, for a BBQ party. Unfortunately, it’s impossible.<br>是的，如果能为世界上的每一个问题都有一个简单的公式，那就太好了。尤其是烧烤派对。不幸的是，这是不可能的。</p><p>Let’s get back to cars. The problem is, they have different manufacturing dates, dozens of options, technical condition, seasonal demand spikes, and god only knows how many more hidden factors. An average Billy can’t keep all that data in his head while calculating the price. Me too.<br>让我们回到汽车上。问题是，它们有不同的生产日期、几十种选择、技术条件、季节性需求激增，天知道还有多少隐藏因素。一个普通的比利在计算价格时无法将所有这些数据都记在脑子里。我也是。</p><p>People are dumb and lazy – we need robots to do the maths for them. So, let’s go the computational way here. Let’s provide the machine some data and ask it to find all hidden patterns related to price.<br>人们又笨又懒——我们需要机器人为他们计算。所以，让我们从计算的角度来看。让我们向机器提供一些数据，并要求它找到所有与价格相关的隐藏模式。</p><p>Aaaand it works. The most exciting thing is that the machine copes with this task much better than a real person does when carefully analyzing all the dependencies in their mind.<br>Aaaan而且有效。最令人兴奋的是，当仔细分析他们脑海中的所有依赖关系时，机器比真人更好地处理这项任务。</p><p>That was the birth of machine learning.<br>这就是机器学习的诞生。</p><h1 id="Three-components-of-machine-learning-机器学习的三个组成部分"><a href="#Three-components-of-machine-learning-机器学习的三个组成部分" class="headerlink" title="Three components of machine learning 机器学习的三个组成部分"></a>Three components of machine learning 机器学习的三个组成部分</h1><p>Without all the AI-bullshit, the only goal of machine learning is to predict results based on incoming data. That’s it. All ML tasks can be represented this way, or it’s not an ML problem from the beginning.<br>如果没有人工智能的废话，机器学习的唯一目标就是根据输入的数据预测结果。就是这样。所有ML任务都可以用这种方式表示，或者从一开始就不是ML问题。</p><p>The greater variety in the samples you have, the easier it is to find relevant patterns and predict the result. Therefore, we need three components to teach the machine:<br>样本的种类越多，就越容易找到相关的模式并预测结果。因此，我们需要三个组件来教机器：</p><p><strong>Data</strong> Want to detect spam? Get samples of spam messages. Want to forecast stocks? Find the price history. Want to find out user preferences? Parse their activities on Facebook (no, Mark, stop collecting it, enough!). The more diverse the data, the better the result. Tens of thousands of rows is the bare minimum for the desperate ones.<br><strong>数据</strong>想要检测垃圾邮件吗？获取垃圾邮件的示例。想预测股票吗？查找价格历史记录。想了解用户偏好吗？分析他们在Facebook上的活动（不，马克，停止收集，够了！）。数据越多样化，结果越好。对于绝望的人来说，数以万计的争吵是最低限度的。</p><p>There are two main ways to get the data — <strong>manual and automatic</strong>. Manually collected data contains far fewer errors but takes more time to collect — that makes it more expensive in general.<br>获取数据主要有两种方式——<strong>手动</strong>和<strong>自动</strong>。手动收集的数据包含的错误要少得多，但需要更多的时间来收集，这通常会使数据的成本更高。</p><p>Automatic approach is cheaper — you’re gathering everything you can find and hope for the best.<br>自动方法更便宜——你正在收集你能找到的一切，并希望一切都好。</p><p>Some smart asses like Google use their own customers to label data for them for free. Remember ReCaptcha which forces you to “Select all street signs”? That’s exactly what they’re doing. Free labour! Nice. In their place, I’d start to show captcha more and more. Oh, wait…<br>一些像谷歌这样的聪明人利用自己的客户免费为他们标记数据。还记得ReCaptcha强制你“选择所有路标”吗？这正是他们正在做的。免费劳动力！美好的在他们的位置上，我会越来越多地向captcha展示。哦，等等。。。</p><img src="/2023/12/19/%E4%BA%BA%E4%BA%BA%E5%85%B1%E4%BA%AB%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E4%BA%BA%E4%BA%BA%E5%85%B1%E4%BA%AB%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-3.jpg" class="" title="人人共享的机器学习-3"><p>It’s extremely tough to collect a good collection of data (usually called a dataset). They are so important that companies may even reveal their algorithms, but rarely datasets.<br>收集一个好的数据集（通常称为数据集）是非常困难的。它们是如此重要，以至于公司甚至可以公布他们的算法，但很少公布数据集。</p><p><strong>Features</strong> Also known as parameters or variables. Those could be car mileage, user’s gender, stock price, word frequency in the text. In other words, these are the factors for a machine to look at.<br><strong>特征</strong>也称为参数或变量。这些可能是汽车里程、用户性别、股价、文本中的词频。换句话说，这些都是机器需要考虑的因素。</p><p>When data stored in tables it’s simple — features are column names. But what are they if you have 100 Gb of cat pics? We cannot consider each pixel as a feature. That’s why selecting the right features usually takes way longer than all the other ML parts. That’s also the main source of errors. Meatbags are always subjective. They choose only features they like or find “more important”. Please, avoid being human.<br>当数据存储在表中时，这很简单——特性就是列名。但是，如果你有100 Gb的猫照片，它们是什么？我们不能将每个像素视为一个特征。这就是为什么选择正确的特性通常比所有其他ML部分花费更长的时间。这也是错误的主要来源。肉包总是主观的。他们只选择自己喜欢或觉得“更重要”的功能。请不要做人。</p><p><strong>Algorithms</strong> Most obvious part. Any problem can be solved differently. The method you choose affects the precision, performance, and size of the final model. There is one important nuance though: if the data is crappy, even the best algorithm won’t help. Sometimes it’s referred as “garbage in – garbage out”. So don’t pay too much attention to the percentage of accuracy, try to acquire more data first.<br><strong>算法</strong>最明显的部分。任何问题都可以用不同的方式解决。选择的方法会影响最终模型的精度、性能和大小。不过，有一个重要的细微差别：如果数据很糟糕，即使是最好的算法也无济于事。有时它被称为“垃圾进-垃圾出”。因此，不要过于关注准确率，尽量先获取更多数据。</p><img src="/2023/12/19/%E4%BA%BA%E4%BA%BA%E5%85%B1%E4%BA%AB%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E4%BA%BA%E4%BA%BA%E5%85%B1%E4%BA%AB%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-4.jpg" class="" title="人人共享的机器学习-4"><h1 id="Learning-vs-Intelligence-学习与智力"><a href="#Learning-vs-Intelligence-学习与智力" class="headerlink" title="Learning vs Intelligence 学习与智力"></a>Learning vs Intelligence 学习与智力</h1><p>Once I saw an article titled “Will neural networks replace machine learning?” on some hipster media website. These media guys always call any shitty linear regression at least artificial intelligence, almost SkyNet. Here is a simple picture to show who is who.<br>有一次，我在一些时髦的媒体网站上看到一篇题为“神经网络会取代机器学习吗？”的文章。这些媒体人总是把任何糟糕的线性回归称为人工智能，几乎是天网。这里有一张简单的图片来展示谁是谁。</p><img src="/2023/12/19/%E4%BA%BA%E4%BA%BA%E5%85%B1%E4%BA%AB%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E4%BA%BA%E4%BA%BA%E5%85%B1%E4%BA%AB%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-5.jpg" class="" title="人人共享的机器学习-5"><p><strong>Artificial intelligence</strong> is the name of a whole knowledge field, similar to biology or chemistry.<br><strong>人工智能</strong>是整个知识领域的名称，类似于生物学或化学。</p><p><strong>Machine Learning</strong> is a part of artificial intelligence. An important part, but not the only one.<br><strong>机器学习</strong>是人工智能的一部分。一个重要的部分，但不是唯一的。</p><p><strong>Neural Networks</strong> are one of machine learning types. A popular one, but there are other good guys in the class.<br><strong>神经网络</strong>是机器学习类型之一。很受欢迎，但班上还有其他好人。</p><p><strong>Deep Learning</strong> is a modern method of building, training, and using neural networks. Basically, it’s a new architecture. Nowadays in practice, no one separates deep learning from the “ordinary networks”. We even use the same libraries for them. To not look like a dumbass, it’s better just name the type of network and avoid buzzwords.<br><strong>深度学习</strong>是一种构建、训练和使用神经网络的现代方法。基本上，这是一个新的体系结构。如今，在实践中，没有人将深度学习与“普通网络”分开。我们甚至为它们使用相同的库。为了不让自己看起来像个傻瓜，最好只是说出网络的类型，避免使用流行语。</p><p>The general rule is to compare things on the same level. That’s why the phrase “will neural nets replace machine learning” sounds like “will the wheels replace cars”. Dear media, it’s compromising your reputation a lot.<br>一般的规则是在同一水平上进行比较。这就是为什么“神经网络会取代机器学习吗”这句话听起来像“车轮会取代汽车吗”。亲爱的媒体，这会大大损害你的声誉。</p><div class="table-container"><table><thead><tr><th style="text-align:center">Machine can</th><th style="text-align:center">Machine cannot</th></tr></thead><tbody><tr><td style="text-align:center">Forecast</td><td style="text-align:center">Create something new</td></tr><tr><td style="text-align:center">Memorize</td><td style="text-align:center">Get smart really fast</td></tr><tr><td style="text-align:center">Reproduce</td><td style="text-align:center">Go beyond their task</td></tr><tr><td style="text-align:center">Choose best item</td><td style="text-align:center">Kill all humans</td></tr></tbody></table></div><div class="table-container"><table><thead><tr><th style="text-align:center">机器可以</th><th style="text-align:center">机器不能</th></tr></thead><tbody><tr><td style="text-align:center">预测</td><td style="text-align:center">创造新的东西</td></tr><tr><td style="text-align:center">记忆</td><td style="text-align:center">快速变得聪明</td></tr><tr><td style="text-align:center">复制</td><td style="text-align:center">超越他们的任务</td></tr><tr><td style="text-align:center">选择最好的物品</td><td style="text-align:center">杀死所有人类</td></tr></tbody></table></div><h1 id="The-map-of-the-machine-learning-world-机器学习世界地图"><a href="#The-map-of-the-machine-learning-world-机器学习世界地图" class="headerlink" title="The map of the machine learning world 机器学习世界地图"></a>The map of the machine learning world 机器学习世界地图</h1><p>If you are too lazy for long reads, take a look at the picture below to get some understanding.<br>如果你太懒了，不适合长时间阅读，看看下面的图片，了解一下。</p><img src="/2023/12/19/%E4%BA%BA%E4%BA%BA%E5%85%B1%E4%BA%AB%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E4%BA%BA%E4%BA%BA%E5%85%B1%E4%BA%AB%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-6.jpg" class="" title="人人共享的机器学习-6"><p>Always important to remember — there is never a sole way to solve a problem in the machine learning world. There are always several algorithms that fit, and you have to choose which one fits better. Everything can be solved with a neural network, of course, but who will pay for all these GeForces?<br>永远重要的是要记住——在机器学习的世界里，解决问题从来没有唯一的方法。总有几种算法适合，你必须选择哪一种更适合。当然，一切都可以用神经网络解决，但谁来为所有这些GeForces买单？</p><p>Let’s start with a basic overview. Nowadays there are four main directions in machine learning.<br>让我们从一个基本概述开始。如今，机器学习有四个主要方向。</p><img src="/2023/12/19/%E4%BA%BA%E4%BA%BA%E5%85%B1%E4%BA%AB%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E4%BA%BA%E4%BA%BA%E5%85%B1%E4%BA%AB%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-7.jpg" class="" title="人人共享的机器学习-7"><h1 id="Part-1-Classical-Machine-Learning-第1部分。经典机器学习"><a href="#Part-1-Classical-Machine-Learning-第1部分。经典机器学习" class="headerlink" title="Part 1. Classical Machine Learning 第1部分。经典机器学习"></a>Part 1. Classical Machine Learning 第1部分。经典机器学习</h1><p>The first methods came from pure statistics in the ‘50s. They solved formal math tasks — searching for patterns in numbers, evaluating the proximity of data points, and calculating vectors’ directions.<br>第一种方法来自50年代的纯统计学。他们解决了正式的数学任务——搜索数字中的模式，评估数据点的接近度，以及计算矢量的方向。</p><p>Nowadays, half of the Internet is working on these algorithms. When you see a list of articles to “read next” or your bank blocks your card at random gas station in the middle of nowhere, most likely it’s the work of one of those little guys.<br>如今，一半的互联网都在研究这些算法。当你看到一张“下一步要读”的文章清单，或者你的银行在一个不知名的加油站挡住了你的卡，很可能是其中一个小家伙的工作。</p><p>Big tech companies are huge fans of neural networks. Obviously. For them, 2% accuracy is an additional 2 billion in revenue. But when you are small, it doesn’t make sense. I heard stories of the teams spending a year on a new recommendation algorithm for their e-commerce website, before discovering that 99% of traffic came from search engines. Their algorithms were useless. Most users didn’t even open the main page.<br>大型科技公司是神经网络的超级粉丝。明显地对他们来说，2%的准确率意味着额外的20亿收入。但当你很小的时候，这就没有意义了。我听说这些团队花了一年时间为他们的电子商务网站开发一种新的推荐算法，然后发现99%的流量来自搜索引擎。他们的算法毫无用处。大多数用户甚至没有打开主页。</p><p>Despite the popularity, classical approaches are so natural that you could easily explain them to a toddler. They are like basic arithmetic — we use it every day, without even thinking.<br>尽管很受欢迎，但经典的方法是如此自然，你可以很容易地向蹒跚学步的孩子解释它们。它们就像基本的算术——我们每天都在使用它，甚至不用思考。</p><img src="/2023/12/19/%E4%BA%BA%E4%BA%BA%E5%85%B1%E4%BA%AB%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E4%BA%BA%E4%BA%BA%E5%85%B1%E4%BA%AB%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-8.jpg" class="" title="人人共享的机器学习-8"><h2 id="1-1-Supervised-Learning-1-1监督学习"><a href="#1-1-Supervised-Learning-1-1监督学习" class="headerlink" title="1.1 Supervised Learning 1.1监督学习"></a>1.1 Supervised Learning 1.1监督学习</h2><p>Classical machine learning is often divided into two categories – <strong>Supervised</strong> and <strong>Unsupervised Learning</strong>.<br>经典的机器学习通常分为两类——<strong>有监督学习</strong>和<strong>无监督学习</strong>。</p><p>In the first case, the machine has a “supervisor” or a “teacher” who gives the machine all the answers, like whether it’s a cat in the picture or a dog. The teacher has already divided (labeled) the data into cats and dogs, and the machine is using these examples to learn. One by one. Dog by cat.<br>在第一种情况下，机器有一个“主管”或“老师”，他给机器所有的答案，比如照片中的猫还是狗。老师已经将数据分为猫和狗，机器正在使用这些例子进行学习。一个接一个。一只狗一只猫。</p><p>Unsupervised learning means the machine is left on its own with a pile of animal photos and a task to find out who’s who. Data is not labeled, there’s no teacher, the machine is trying to find any patterns on its own. We’ll talk about these methods below.<br>无监督学习意味着机器只剩下一堆动物照片和一项找出谁是谁的任务。数据没有标签，没有老师，机器正试图自己找到任何模式。我们将在下面讨论这些方法。</p><p>Clearly, the machine will learn faster with a teacher, so it’s more commonly used in real-life tasks. There are two types of such tasks: <strong>classification – an object’s category prediction, and regression – prediction of a specific point on a numeric axis</strong>.<br>很明显，这台机器在老师的指导下会学得更快，所以它更常用于现实生活中的任务。这类任务有两种类型：<strong>分类——对象的类别预测，回归——数字轴上特定点的预测</strong>。</p><h3 id="Classification-分类"><a href="#Classification-分类" class="headerlink" title="Classification 分类"></a>Classification 分类</h3><p>“Splits objects based at one of the attributes known beforehand. Separate socks by based on color, documents based on language, music by genre”<br>根据事先已知的一个属性拆分对象。根据颜色、根据语言和音乐类型划分袜子</p><p>Today used for:</p><ul><li>Spam filtering</li><li>Language detection</li><li>A search of similar documents</li><li>Sentiment analysis</li><li>Recognition of handwritten characters and numbers</li><li>Fraud detection</li></ul><p>今天用于：</p><ul><li>垃圾邮件过滤</li><li>语言检测</li><li>搜索类似文档</li><li>情绪分析</li><li>识别手写字符和数字</li><li>欺诈检测</li></ul><img src="/2023/12/19/%E4%BA%BA%E4%BA%BA%E5%85%B1%E4%BA%AB%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E4%BA%BA%E4%BA%BA%E5%85%B1%E4%BA%AB%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-9.jpg" class="" title="人人共享的机器学习-9"><p>Popular algorithms: Naive Bayes, Decision Tree, Logistic Regression, K-Nearest Neighbours, Support Vector Machine<br>流行算法：朴素贝叶斯、决策树、逻辑回归、K近邻、支持向量机</p><p><a href="https://en.wikipedia.org/wiki/Naive_Bayes_classifier">朴素贝叶斯</a><br><a href="https://en.wikipedia.org/wiki/Decision_tree_learning">决策树</a><br><a href="https://en.wikipedia.org/wiki/Logistic_regression">逻辑回归</a><br><a href="https://en.wikipedia.org/wiki/K-nearest_neighbors_algorithm">K近邻</a><br><a href="https://en.wikipedia.org/wiki/Support_vector_machine">支持向量机</a></p><p>Machine learning is about classifying things, mostly. The machine here is like a baby learning to sort toys: here’s a robot, here’s a car, here’s a robo-car… Oh, wait. Error! Error!<br>机器学习主要是对事物进行分类。这里的机器就像一个婴儿在学习分类玩具：这是一个机器人，这是一辆汽车，这是机器人汽车。。。哦，等等。错误错误</p><p>In classification, you always need a teacher. The data should be labeled with features so the machine could assign the classes based on them. Everything could be classified — users based on interests (as algorithmic feeds do), articles based on language and topic (that’s important for search engines), music based on genre (Spotify playlists), and even your emails.<br>在分类方面，你总是需要一位老师。数据应该标有特征，这样机器就可以根据这些特征分配类。一切都可以分类——用户基于兴趣（就像算法提要一样），文章基于语言和主题（这对搜索引擎很重要），音乐基于流派（Spotify播放列表），甚至你的电子邮件。</p><p>In spam filtering the Naive Bayes algorithm was widely used. The machine counts the number of “viagra” mentions in spam and normal mail, then it multiplies both probabilities using the Bayes equation, sums the results and yay, we have Machine Learning.<br>Naive Bayes算法在垃圾邮件过滤中得到了广泛的应用。该机器计算垃圾邮件和普通邮件中提到“伟哥”的次数，然后使用贝叶斯方程乘以这两种概率，对结果求和，是的，我们有机器学习。</p><img src="/2023/12/19/%E4%BA%BA%E4%BA%BA%E5%85%B1%E4%BA%AB%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E4%BA%BA%E4%BA%BA%E5%85%B1%E4%BA%AB%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-10.jpg" class="" title="人人共享的机器学习-10"><p>Later, spammers learned how to deal with Bayesian filters by adding lots of “good” words at the end of the email. Ironically, the method was called Bayesian poisoning. Naive Bayes went down in history as the most elegant and first practically useful one, but now other algorithms are used for spam filtering.<br>后来，垃圾邮件发送者通过在电子邮件末尾添加大量“好”字，学会了如何处理贝叶斯过滤器。具有讽刺意味的是，这种方法被称为贝叶斯中毒。Naive Bayes作为最优雅、最早实用的算法而载入史册，但现在其他算法也被用于垃圾邮件过滤。</p><p><a href="https://en.wikipedia.org/wiki/Bayesian_poisoning">Bayesian poisoning</a></p><p>Here’s another practical example of classification. Let’s say you need some money on credit. How will the bank know if you’ll pay it back or not? There’s no way to know for sure. But the bank has lots of profiles of people who took money before. They have data about age, education, occupation and salary and – most importantly – the fact of paying the money back. Or not.<br>这是另一个实用的分类示例。比方说你需要一些贷款。银行怎么知道你是否会还钱？没有办法确定。但该银行有很多以前拿钱的人的档案。他们有关于年龄、教育、职业和工资的数据，最重要的是，还有还钱的事实。或者不。</p><p>Using this data, we can teach the machine to find the patterns and get the answer. There’s no issue with getting an answer. The issue is that the bank can’t blindly trust the machine answer. What if there’s a system failure, hacker attack or a quick fix from a drunk senior.<br>使用这些数据，我们可以教机器找到模式并得到答案。得到答案没有问题。问题是，银行不能盲目相信机器的答案。如果出现系统故障、黑客攻击或醉酒的学长快速修复，该怎么办。</p><p>To deal with it, we have Decision Trees. All the data automatically divided to yes/no questions. They could sound a bit weird from a human perspective, e.g., whether the creditor earns more than $128.12? Though, the machine comes up with such questions to split the data best at each step.<br>为了解决这个问题，我们有决策树。所有数据自动划分为是/否问题。从人类的角度来看，这听起来可能有点奇怪，例如，债权人的收入是否超过128.12美元？不过，这台机器会提出这样的问题，以便在每一步都能最好地分割数据。</p><p><a href="https://www.youtube.com/watch?v=eKD5gxPPeY0">Decision Trees</a></p><p>That’s how a tree is made. The higher the branch — the broader the question. Any analyst can take it and explain afterward. He may not understand it, but explain easily! (typical analyst)<br>树就是这样造的。分支越高，问题就越广泛。任何分析师都可以接受并在事后解释。他可能听不懂，但很容易解释！（典型分析员）</p><p>Decision trees are widely used in high responsibility spheres: diagnostics, medicine, and finances.<br>决策树广泛应用于高责任领域：诊断、医学和金融。</p><blockquote><p>The two most popular algorithms for forming the trees are CART and C4.5.<br>用于形成树的两种最流行的算法是CART和C4.5</p></blockquote><p><a href="https://en.wikipedia.org/wiki/Predictive_analytics#Classification_and_regression_trees_.28CART.29">CART</a><br><a href="https://en.wikipedia.org/wiki/C4.5_algorithm">C4.5</a></p><p>Pure decision trees are rarely used today. However, they often set the basis for large systems, and their ensembles even work better than neural networks. We’ll talk about that later.<br>今天很少使用纯决策树。然而，它们通常为大型系统奠定基础，它们的集成甚至比神经网络工作得更好。我们稍后再谈。</p><blockquote><p>When you google something, that’s precisely the bunch of dumb trees which are looking for a range of answers for you. Search engines love them because they’re fast.<br>当你在谷歌上搜索某个东西时，那正是一群愚蠢的树在为你寻找一系列答案。搜索引擎喜欢它们，因为它们很快。</p></blockquote><img src="/2023/12/19/%E4%BA%BA%E4%BA%BA%E5%85%B1%E4%BA%AB%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E4%BA%BA%E4%BA%BA%E5%85%B1%E4%BA%AB%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-11.jpg" class="" title="人人共享的机器学习-11"><p><em>Support Vector Machines (SVM)</em> is rightfully the most popular method of classical classification. It was used to classify everything in existence: plants by appearance in photos, documents by categories, etc.<br><em>支持向量机（SVM）</em>是最流行的经典分类方法。它被用来对现存的一切进行分类：植物按照片中的外观分类，文件按类别分类等等。</p><p>The idea behind SVM is simple – it’s trying to draw two lines between your data points with the largest margin between them. Look at the picture:<br>SVM背后的想法很简单——它试图在数据点之间画两条线，并在它们之间留有最大的余量。请看图片：</p><img src="/2023/12/19/%E4%BA%BA%E4%BA%BA%E5%85%B1%E4%BA%AB%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E4%BA%BA%E4%BA%BA%E5%85%B1%E4%BA%AB%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-12.jpg" class="" title="人人共享的机器学习-12"><p>There’s one very useful side of the classification — anomaly detection. When a feature does not fit any of the classes, we highlight it. Now that’s used in medicine — on MRIs, computers highlight all the suspicious areas or deviations of the test. Stock markets use it to detect abnormal behaviour of traders to find the insiders. When teaching the computer the right things, we automatically teach it what things are wrong.<br>分类有一个非常有用的方面——异常检测。当一个功能不适合任何类别时，我们会突出显示它。现在它被用于医学——在核磁共振成像上，计算机会突出显示测试的所有可疑区域或偏差。股票市场利用它来检测交易员的异常行为，以找到内部人士。当教计算机正确的东西时，我们会自动教它什么是错误的。</p><p>Today, neural networks are more frequently used for classification. Well, that’s what they were created for.<br>如今，神经网络更频繁地用于分类。好吧，这就是他们被创造的目的。</p><p>The rule of thumb is the more complex the data, the more complex the algorithm. For text, numbers, and tables, I’d choose the classical approach. The models are smaller there, they learn faster and work more clearly. For pictures, video and all other complicated big data things, I’d definitely look at neural networks.<br>经验法则是数据越复杂，算法就越复杂。对于文本、数字和表格，我会选择经典的方法。那里的模型更小，学习更快，工作更清晰。对于图片、视频和所有其他复杂的大数据，我肯定会研究神经网络。</p><p>Just five years ago you could find a face classifier built on SVM. Today it’s easier to choose from hundreds of pre-trained networks. Nothing has changed for spam filters, though. They are still written with SVM. And there’s no good reason to switch from it anywhere.<br>就在五年前，你还可以找到一个基于SVM的人脸分类器。如今，从数百个经过预训练的网络中进行选择变得更加容易。不过，垃圾邮件过滤器没有任何变化。它们仍然是用SVM编写的。而且没有充分的理由从任何地方切换。</p><p>Even my website has SVM-based spam detection in comments<br>甚至我的网站在评论中也有基于SVM的垃圾邮件检测</p><h3 id="Regression-回归"><a href="#Regression-回归" class="headerlink" title="Regression 回归"></a>Regression 回归</h3><p>“Draw a line through these dots. Yep, that’s the machine learning”<br>“在这些点之间划一条线。是的，这就是机器学习”</p><p>Today this is used for:</p><ul><li>Stock price forecasts 股票价格预测</li><li>Demand and sales volume analysis 需求和销售量分析</li><li>Medical diagnosis 医学诊断</li><li>Any number-time correlations 任意数字时间相关性</li></ul><p>Popular algorithms are Linear and Polynomial regressions.<br>常用的算法是线性回归和多项式回归。</p><p><a href="https://en.wikipedia.org/wiki/Linear_regression">Linear</a></p><p><a href="https://en.wikipedia.org/wiki/Polynomial_regression">Polynomial</a></p><p>Regression is basically classification where we forecast a number instead of category. Examples are car price by its mileage, traffic by time of the day, demand volume by growth of the company etc. Regression is perfect when something depends on time.<br>回归基本上是分类，我们预测一个数字而不是类别。例如，按里程计算的汽车价格、按时间计算的交通量、按公司增长计算的需求量等。当某些事情取决于时间时，回归是完美的。</p><p>Everyone who works with finance and analysis loves regression. It’s even built-in to Excel. And it’s super smooth inside — the machine simply tries to draw a line that indicates average correlation. Though, unlike a person with a pen and a whiteboard, machine does so with mathematical accuracy, calculating the average interval to every dot.<br>每个从事金融和分析工作的人都喜欢回归。它甚至内置在Excel中。它的内部非常平滑——机器只是试图画一条线来表示平均相关性。不过，和拿着笔和白板的人不同，这台机器能准确地计算出每个点的平均间隔。</p><img src="/2023/12/19/%E4%BA%BA%E4%BA%BA%E5%85%B1%E4%BA%AB%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E4%BA%BA%E4%BA%BA%E5%85%B1%E4%BA%AB%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-13.jpg" class="" title="人人共享的机器学习-13"><p>When the line is straight — it’s a linear regression, when it’s curved – polynomial. These are two major types of regression. The other ones are more exotic. Logistic regression is a black sheep in the flock. Don’t let it trick you, as it’s a classification method, not regression.<br>当直线是直线时——它是线性回归，当它是曲线时——多项式。这是两种主要的回归类型。其他的更具异国情调。逻辑回归是羊群中的害群之马。不要让它欺骗你，因为这是一种分类方法，而不是回归。</p><p>It’s okay to mess with regression and classification, though. Many classifiers turn into regression after some tuning. We can not only define the class of the object but memorize how close it is. Here comes a regression.<br>不过，搞砸回归和分类是可以的。许多分类器经过一些调整后会变成回归。我们不仅可以定义对象的类，还可以记住它的接近程度。</p><p>If you want to get deeper into this, check these series: Machine Learning for Humans. I really love and recommend it!<br>如果你想更深入地了解这一点，请查看以下系列：面向人类的机器学习。我真的很喜欢并推荐它！</p><p><a href="https://medium.com/machine-learning-for-humans/supervised-learning-740383a2feab">Machine Learning for Humans</a></p><h2 id="1-2-Unsupervised-learning-1-2无监督学习"><a href="#1-2-Unsupervised-learning-1-2无监督学习" class="headerlink" title="1.2 Unsupervised learning 1.2无监督学习"></a>1.2 Unsupervised learning 1.2无监督学习</h2><p>Unsupervised was invented a bit later, in the ‘90s. It is used less often, but sometimes we simply have no choice.<br>无监督是在90年代发明的。它的使用频率较低，但有时我们别无选择。</p><p>Labeled data is luxury. But what if I want to create, let’s say, a bus classifier? Should I manually take photos of million fucking buses on the streets and label each of them? No way, that will take a lifetime, and I still have so many games not played on my Steam account.<br>标记数据是一种奢侈。但是，如果我想创建一个总线分类器呢？我应该手动拍摄一百万辆他妈的公交车在街上的照片，并给每辆贴上标签吗？不可能，那将需要一辈子的时间，而且我的Steam帐户上还有很多游戏没有玩。</p><p>There’s a little hope for capitalism in this case. Thanks to social stratification, we have millions of cheap workers and services like Mechanical Turk who are ready to complete your task for $0.05. And that’s how things usually get done here.<br>在这种情况下，资本主义还有一点希望。由于社会分层，我们有数百万像机械土耳其人这样的廉价工人和服务，他们准备以0.05美元的价格完成您的任务。这里通常就是这样做的。</p><p><a href="https://www.mturk.com/">Mechanical Turk</a></p><p>Or you can try to use unsupervised learning. But I can’t remember any good practical application for it, though. It’s usually useful for exploratory data analysis but not as the main algorithm. Specially trained meatbag with Oxford degree feeds the machine with a ton of garbage and watches it. Are there any clusters? No. Any visible relations? No. Well, continue then. You wanted to work in data science, right?<br>或者你可以尝试使用无监督学习。但我不记得它有什么好的实际应用。它通常用于探索性数据分析，但不是主要的算法。受过专门训练的牛津学位的肉包往机器里倒一吨垃圾，然后看着它。有集群吗？没有。有明显的关系吗？不，那就继续。你想从事数据科学工作，对吧？</p><p><a href="https://en.wikipedia.org/wiki/Exploratory_data_analysis">exploratory data analysis</a></p><h3 id="Clustering-聚类"><a href="#Clustering-聚类" class="headerlink" title="Clustering 聚类"></a>Clustering 聚类</h3><p>“Divides objects based on unknown features. Machine chooses the best way”“根据未知功能划分对象。机器选择最佳方式”</p><img src="/2023/12/19/%E4%BA%BA%E4%BA%BA%E5%85%B1%E4%BA%AB%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E4%BA%BA%E4%BA%BA%E5%85%B1%E4%BA%AB%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-14.jpg" class="" title="人人共享的机器学习-14"><p>Nowadays used:</p><ul><li>For market segmentation (types of customers, loyalty) 针对市场细分（客户类型、忠诚度）</li><li>To merge close points on a map 合并地图上的闭合点的步骤</li><li>For image compression 用于图像压缩</li><li>To analyze and label new data 分析和标记新数据</li><li>To detect abnormal behavior 检测异常行为</li></ul><p>Popular algorithms: K-means_clustering, Mean-Shift, DBSCAN</p><p><a href="https://en.wikipedia.org/wiki/K-means_clustering">K-means_clustering</a><br><a href="https://en.wikipedia.org/wiki/Mean_shift">Mean-Shift</a><br><a href="https://en.wikipedia.org/wiki/DBSCAN">DBSCAN</a></p><p>Clustering is a classification with no predefined classes. It’s like dividing socks by color when you don’t remember all the colors you have. Clustering algorithm trying to find similar (by some features) objects and merge them in a cluster. Those who have lots of similar features are joined in one class. With some algorithms, you even can specify the exact number of clusters you want.<br>聚类是一种没有预定义类的分类。这就像当你不记得所有的颜色时，按颜色划分袜子。聚类算法试图找到相似的（通过某些特征）对象并将它们合并到一个聚类中。那些有许多相似特征的人被加入到一个类中。使用某些算法，您甚至可以指定所需的簇的确切数量。</p><p>An excellent example of clustering — markers on web maps. When you’re looking for all vegan restaurants around, the clustering engine groups them to blobs with a number. Otherwise, your browser would freeze, trying to draw all three million vegan restaurants in that hipster downtown.<br>聚类的一个很好的例子——网络地图上的标记。当你在寻找周围所有的纯素食餐厅时，集群引擎会用一个数字将它们分组。否则，你的浏览器就会冻结，试图吸引市中心时髦人群中的300万家纯素食餐厅。</p><p>Apple Photos and Google Photos use more complex clustering. They’re looking for faces in photos to create albums of your friends. The app doesn’t know how many friends you have and how they look, but it’s trying to find the common facial features. Typical clustering.<br>苹果照片和谷歌照片使用更复杂的聚类。他们正在照片中查找人脸，以创建你朋友的相册。该应用程序不知道你有多少朋友，他们看起来怎么样，但它正在努力寻找常见的面部特征。典型的集群。</p><p>Another popular issue is image compression. When saving the image to PNG you can set the palette, let’s say, to 32 colors. It means clustering will find all the “reddish” pixels, calculate the “average red” and set it for all the red pixels. Fewer colors — lower file size — profit!<br>另一个流行的问题是图像压缩。将图像保存为PNG时，可以将调色板设置为32种颜色。这意味着聚类将找到所有“红色”像素，计算“平均红色”，并将其设置为所有红色像素。更少的颜色—更低的文件大小—利润！</p><p>However, you may have problems with colors like Cyan-like colors. Is it green or blue? Here comes the K-Means algorithm.<br>但是，您可能对青色等颜色有问题-比如颜色。它是绿色的还是蓝色的？K-Means算法来了。</p><p><a href="https://www.youtube.com/watch?v=_aWzGGNrcic&amp;ab_channel=VictorLavrenko">K-Means</a></p><p>It randomly sets 32 color dots in the palette. Now, those are centroids. The remaining points are marked as assigned to the nearest centroid. Thus, we get kind of galaxies around these 32 colors. Then we’re moving the centroid to the center of its galaxy and repeat that until centroids stop moving.<br>它在调色板中随机设置32个色点。现在，这些是质心。剩余的点被标记为已指定给最近的质心。因此，我们得到了围绕这32种颜色的星系。然后我们将质心移动到其星系的中心，并重复这一过程，直到质心停止移动。</p><p>All done. Clusters defined, stable, and there are exactly 32 of them. Here is a more real-world explanation:<br>全部完成。集群是定义的，是稳定的，并且正好有32个集群。以下是一个更真实的解释：</p><img src="/2023/12/19/%E4%BA%BA%E4%BA%BA%E5%85%B1%E4%BA%AB%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E4%BA%BA%E4%BA%BA%E5%85%B1%E4%BA%AB%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-15.jpg" class="" title="人人共享的机器学习-15"><p>Searching for the centroids is convenient. Though, in real life clusters not always circles. Let’s imagine you’re a geologist. And you need to find some similar minerals on the map. In that case, the clusters can be weirdly shaped and even nested. Also, you don’t even know how many of them to expect. 10? 100?<br>搜索质心很方便。然而，在现实生活中，集群并不总是圆形的。让我们想象一下你是一名地质学家。你需要在地图上找到一些类似的矿物。在这种情况下，簇的形状可能很奇怪，甚至可以嵌套。此外，你甚至不知道他们中有多少值得期待。10？100？</p><p>K-means does not fit here, but DBSCAN can be helpful. Let’s say, our dots are people at the town square. Find any three people standing close to each other and ask them to hold hands. Then, tell them to start grabbing hands of those neighbors they can reach. And so on, and so on until no one else can take anyone’s hand. That’s our first cluster. Repeat the process until everyone is clustered. Done.<br>K-means不适合这里，但DBSCAN可能会有所帮助。比方说，我们的圆点是城镇广场上的人。找任意三个人站得很近，让他们手牵着手。然后，告诉他们开始与他们能接触到的邻居握手。等等，等等，直到没有人能握住任何人的手。这是我们的第一个集群。重复此过程，直到所有人都聚集在一起。完成。</p><p><a href="https://towardsdatascience.com/how-dbscan-works-and-why-should-i-use-it-443b4a191c80?gi=3a98260adc51">DBSCAN</a></p><blockquote><p>A nice bonus: a person who has no one to hold hands with — is an anomaly.<br>一个很好的好处是：一个没有人可以牵手的人——是一种反常现象。</p></blockquote><p>It all looks cool in motion:<br>这一切看起来都很酷：</p><img src="/2023/12/19/%E4%BA%BA%E4%BA%BA%E5%85%B1%E4%BA%AB%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E4%BA%BA%E4%BA%BA%E5%85%B1%E4%BA%AB%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-16.gif" class="" title="人人共享的机器学习-16"><blockquote><p>Interested in clustering? Check out this piece The 5 Clustering Algorithms Data Scientists Need to Know<br>对集群感兴趣吗？看看这篇文章数据科学家需要知道的5种聚类算法</p></blockquote><p><a href="https://towardsdatascience.com/the-5-clustering-algorithms-data-scientists-need-to-know-a36d136ef68">The 5 Clustering Algorithms Data Scientists Need to Know</a></p><p>Just like classification, clustering could be used to detect anomalies. User behaves abnormally after signing up? Let the machine ban him temporarily and create a ticket for the support to check it. Maybe it’s a bot. We don’t even need to know what “normal behavior” is, we just upload all user actions to our model and let the machine decide if it’s a “typical” user or not.<br>就像分类一样，聚类也可以用来检测异常。用户注册后行为异常？让机器暂时禁止他，并创建一个票证供支持人员检查。也许这是一个机器人。我们甚至不需要知道什么是“正常行为”，我们只需将所有用户操作上传到我们的模型中，让机器决定它是否是“典型”用户。</p><p>This approach doesn’t work that well compared to the classification one, but it never hurts to try.<br>与分类方法相比，这种方法效果不太好，但尝试一下也不会有什么坏处。</p><h3 id="Dimensionality-Reduction-Generalization-降维（泛化）"><a href="#Dimensionality-Reduction-Generalization-降维（泛化）" class="headerlink" title="Dimensionality Reduction (Generalization) 降维（泛化）"></a>Dimensionality Reduction (Generalization) 降维（泛化）</h3><p>“Assembles specific features into more high-level ones”<br>“将特定功能汇编成更高级的功能”</p><img src="/2023/12/19/%E4%BA%BA%E4%BA%BA%E5%85%B1%E4%BA%AB%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E4%BA%BA%E4%BA%BA%E5%85%B1%E4%BA%AB%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-17.jpg" class="" title="人人共享的机器学习-17"><p>Nowadays is used for:</p><ul><li>Recommender systems (★) 推荐系统 </li><li>Beautiful visualizations 美丽的可视化</li><li>Topic modeling and similar document search 主题建模和类似文档搜索</li><li>Fake image analysis 假图像分析</li><li>Risk management 风险管理</li></ul><p>Popular algorithms: Principal Component Analysis (PCA), Singular Value Decomposition (SVD), Latent Dirichlet allocation (LDA), Latent Semantic Analysis (LSA, pLSA, GLSA), t-SNE (for visualization)<br>流行算法：主成分分析（PCA）、奇异值分解（SVD）、潜在狄利克雷分配（LDA）、潜在语义分析（LSA、pLSA、GLSA）、t-SNE（用于可视化）</p><p><a href="https://en.wikipedia.org/wiki/Principal_component_analysis">Principal Component Analysis-PAC</a><br><a href="https://en.wikipedia.org/wiki/Singular_value_decomposition">Singular Value Decomposition-SVD</a><br><a href="https://en.wikipedia.org/wiki/Latent_Dirichlet_allocation">Latent Dirichlet allocation-LDA</a><br><a href="https://en.wikipedia.org/wiki/Probabilistic_latent_semantic_analysis">Latent Semantic Analysis-LSA/pLSA/GLSA</a><br><a href="https://en.wikipedia.org/wiki/T-distributed_stochastic_neighbor_embedding">t-SNE</a></p><p>Previously these methods were used by hardcore data scientists, who had to find “something interesting” in huge piles of numbers. When Excel charts didn’t help, they forced machines to do the pattern-finding. That’s how they got Dimension Reduction or Feature Learning methods.<br>以前，这些方法是由核心数据科学家使用的，他们必须在大量数据中找到“有趣的东西”。当Excel图表没有帮助时，他们强迫机器进行模式查找。这就是他们获得降维或特征学习方法的原因。</p><img src="/2023/12/19/%E4%BA%BA%E4%BA%BA%E5%85%B1%E4%BA%AB%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E4%BA%BA%E4%BA%BA%E5%85%B1%E4%BA%AB%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-18.gif" class="" title="人人共享的机器学习-18"><p>Projecting 2D-data to a line (PCA)将2D数据投影到直线（PCA）</p><p>It is always more convenient for people to use abstractions, not a bunch of fragmented features. For example, we can merge all dogs with triangle ears, long noses, and big tails to a nice abstraction — “shepherd”. Yes, we’re losing some information about the specific shepherds, but the new abstraction is much more useful for naming and explaining purposes. As a bonus, such “abstracted” models learn faster, overfit less and use a lower number of features.<br>人们总是更方便地使用抽象，而不是一堆碎片化的特性。例如，我们可以将所有三角形耳朵、长鼻和大尾巴的狗合并为一个很好的抽象概念——“牧羊人”。是的，我们正在丢失一些关于特定牧羊人的信息，但新的抽象对于命名和解释目的更有用。额外的好处是，这种“抽象”模型学习速度更快，过拟合更少，使用的特征数量更少。</p><p>These algorithms became an amazing tool for <strong>Topic Modeling</strong>. We can abstract from specific words to their meanings. This is what Latent semantic analysis (LSA) does. It is based on how frequently you see the word on the exact topic. Like, there are more tech terms in tech articles, for sure. The names of politicians are mostly found in political news, etc. 这些算法成为<strong>主题建模</strong>的一个惊人工具。我们可以从特定的单词中抽象出它们的含义。这就是潜在语义分析（LSA）的作用。这取决于你在确切的主题上看到这个词的频率。比如，科技文章中肯定有更多的科技术语。政治家的名字大多出现在政治新闻等中。</p><p><a href="https://en.wikipedia.org/wiki/Latent_semantic_analysis">Latent semantic analysis</a></p><p>Yes, we can just make clusters from all the words at the articles, but we will lose all the important connections (for example the same meaning of battery and accumulator in different documents). LSA will handle it properly, that’s why its called “latent semantic”. 是的，我们可以根据文章中的所有单词进行聚类，但我们将失去所有重要的连接（例如，不同文档中电池和蓄电池的含义相同）。LSA会正确处理它，这就是为什么它被称为“潜在语义”。</p><p>So we need to connect the words and documents into one feature to keep these latent connections — it turns out that Singular decomposition (SVD) nails this task, revealing useful topic clusters from seen-together words. 因此，我们需要将单词和文档连接到一个功能中，以保持这些潜在的连接——事实证明，奇异分解（SVD）固定了这项任务，从一起看到的单词中揭示了有用的主题集群。</p><p><a href="https://en.wikipedia.org/wiki/Singular_value_decomposition"> Singular decomposition</a></p><img src="/2023/12/19/%E4%BA%BA%E4%BA%BA%E5%85%B1%E4%BA%AB%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E4%BA%BA%E4%BA%BA%E5%85%B1%E4%BA%AB%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-19.jpg" class="" title="人人共享的机器学习-19"><p><strong>Recommender Systems and Collaborative Filtering</strong> is another super-popular use of the dimensionality reduction method. Seems like if you use it to abstract user ratings, you get a great system to recommend movies, music, games and whatever you want.<br><strong>推荐系统和协作过滤</strong>是降维方法的另一个非常流行的用途。似乎如果你用它来抽象用户评分，你会得到一个很好的系统来推荐电影、音乐、游戏和任何你想要的东西。</p><blockquote><p>Here I can recommend my favorite book “Programming Collective Intelligence”. It was my bedside book while studying at university!<br>在这里我可以推荐我最喜欢的书“编程集体智能”。这是我在大学学习时的床边书！</p></blockquote><p><a href="https://www.oreilly.com/library/view/programming-collective-intelligence/9780596529321/">Programming Collective Intelligence</a></p><p>It’s barely possible to fully understand this machine abstraction, but it’s possible to see some correlations on a closer look. Some of them correlate with user’s age — kids play Minecraft and watch cartoons more; others correlate with movie genre or user hobbies.<br>几乎不可能完全理解这种机器抽象，但可以仔细观察一些相关性。其中一些与用户的年龄有关——孩子们玩《我的世界》，看动画片的次数更多；其他则与电影类型或用户爱好相关。</p><p>Machines get these high-level concepts even without understanding them, based only on knowledge of user ratings. Nicely done, Mr.Computer. Now we can write a thesis on why bearded lumberjacks love My Little Pony.<br>机器甚至在不了解这些高级概念的情况下，仅基于用户评级的知识，就可以获得这些概念。干得好，电脑先生。现在我们可以写一篇关于为什么留胡子的伐木工喜欢我的小马的论文了。</p><h3 id="Association-rule-learning-关联规则学习"><a href="#Association-rule-learning-关联规则学习" class="headerlink" title="Association rule learning 关联规则学习"></a>Association rule learning 关联规则学习</h3><p>“Look for patterns in the orders’ stream”<br>“在订单流中查找模式”</p><img src="/2023/12/19/%E4%BA%BA%E4%BA%BA%E5%85%B1%E4%BA%AB%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E4%BA%BA%E4%BA%BA%E5%85%B1%E4%BA%AB%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-20.jpg" class="" title="人人共享的机器学习-20"><p>Nowadays is used:</p><ul><li>To forecast sales and discounts 预测销售额和折扣</li><li>To analyze goods bought together 分析一起购买的商品</li><li>To place the products on the shelves 把产品放在货架上</li><li>To analyze web surfing patterns 分析网络冲浪模式</li></ul><p>Popular algorithms: Apriori, Euclat, FP-growth<br>流行算法：Apriori、Euclat、FP growth</p><p><a href="https://en.wikipedia.org/wiki/Association_rule_learning#Algorithms">Apriori、Euclat、FP growth</a></p><p>This includes all the methods to analyze shopping carts, automate marketing strategy, and other event-related tasks. When you have a sequence of something and want to find patterns in it — try these thingys.<br>这包括分析购物车、自动化营销策略和其他与事件相关的任务的所有方法。当你有一系列的东西并想在其中找到模式时，试试这些东西。</p><p>Say, a customer takes a six-pack of beers and goes to the checkout. Should we place peanuts on the way? How often do people buy them together? Yes, it probably works for beer and peanuts, but what other sequences can we predict? Can a small change in the arrangement of goods lead to a significant increase in profits?<br>比如说，一位顾客拿了六包啤酒去结账。我们应该在路上放花生吗？人们多久一起买一次？是的，它可能适用于啤酒和花生，但我们还能预测其他哪些序列？货物排列上的一个小变化能导致利润的显著增加吗？</p><p>Same goes for e-commerce. The task is even more interesting there — what is the customer going to buy next time?<br>电子商务也是如此。这里的任务更有趣——顾客下次要买什么？</p><p>No idea why rule-learning seems to be the least elaborated upon category of machine learning. Classical methods are based on a head-on look through all the bought goods using trees or sets. Algorithms can only search for patterns, but cannot generalize or reproduce those on new examples.<br>不知道为什么规则学习似乎是机器学习中阐述最少的一类。传统的方法是基于使用树或集合对所有购买的商品进行正面查看。算法只能搜索模式，但不能在新的例子中推广或复制这些模式。</p><p>In the real world, every big retailer builds their own proprietary solution, so nooo revolutions here for you. The highest level of tech here — recommender systems. Though, I may be not aware of a breakthrough in the area. Let me know in the comments if you have something to share.<br>在现实世界中，每个大型零售商都会构建自己的专有解决方案，所以这里没有革命。这里的最高技术水平——推荐系统。不过，我可能不知道在这方面有什么突破。如果你有什么要分享的，请在评论中告诉我。</p><img src="/2023/12/19/%E4%BA%BA%E4%BA%BA%E5%85%B1%E4%BA%AB%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E4%BA%BA%E4%BA%BA%E5%85%B1%E4%BA%AB%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-21.jpg" class="" title="人人共享的机器学习-21"><h1 id="Part-2-Reinforcement-Learning-第2部分。强化学习"><a href="#Part-2-Reinforcement-Learning-第2部分。强化学习" class="headerlink" title="Part 2. Reinforcement Learning 第2部分。强化学习"></a>Part 2. Reinforcement Learning 第2部分。强化学习</h1><p>“Throw a robot into a maze and let it find an exit”<br>“把一个机器人扔进迷宫，让它找到出口”</p><img src="/2023/12/19/%E4%BA%BA%E4%BA%BA%E5%85%B1%E4%BA%AB%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E4%BA%BA%E4%BA%BA%E5%85%B1%E4%BA%AB%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-22.jpg" class="" title="人人共享的机器学习-22"><p>Nowadays used for:</p><ul><li>Self-driving cars 自动驾驶汽车</li><li>Robot vacuums 机器人吸尘器</li><li>Games 游戏</li><li>Automating trading 自动化交易</li><li>Enterprise resource management 企业资源管理 </li></ul><p>Popular algorithms: Q-Learning, SARSA, DQN, A3C, Genetic algorithm<br>热门算法：Q-Learning、SARSA、DQN、A3C、遗传算法</p><p><a href="https://en.wikipedia.org/wiki/Q-learning">Q-Learning</a><br><a href="https://en.wikipedia.org/wiki/State%E2%80%93action%E2%80%93reward%E2%80%93state%E2%80%93action">SARSA</a><br><a href="https://medium.com/emergent-future/simple-reinforcement-learning-with-tensorflow-part-8-asynchronous-actor-critic-agents-a3c-c88f72a5e9f2">A3C</a><br><a href="https://en.wikipedia.org/wiki/Genetic_algorithm">遗传算法</a></p><p>Finally, we get to something looks like real artificial intelligence. In lots of articles reinforcement learning is placed somewhere in between of supervised and unsupervised learning. They have nothing in common! Is this because of the name?<br>最后，我们看到了一些看起来像真正的人工智能的东西。在许多文章中，强化学习被置于有监督和无监督学习之间。他们没有共同点！这是因为这个名字吗？</p><p>Reinforcement learning is used in cases when your problem is not related to data at all, but you have an environment to live in. Like a video game world or a city for self-driving car.<br>强化学习用于当你的问题与数据无关，但你有一个可以生活的环境时。比如电子游戏世界或自动驾驶汽车的城市。</p><p><a href="https://www.youtube.com/watch?v=qv6UVOQ0F44&amp;ab_channel=SethBling">Neural network plays Mario</a></p><p>Knowledge of all the road rules in the world will not teach the autopilot how to drive on the roads. Regardless of how much data we collect, we still can’t foresee all the possible situations. This is why its goal is to <strong>minimize error, not to predict all the moves</strong>.<br>了解世界上所有的道路规则并不能教会自动驾驶仪如何在道路上行驶。不管我们收集了多少数据，我们仍然无法预见所有可能的情况。这就是为什么它的目标是最大限度地<strong>减少误差，而不是预测所有的移动</strong>。</p><p>Surviving in an environment is a core idea of reinforcement learning. Throw poor little robot into real life, punish it for errors and reward it for right deeds. Same way we teach our kids, right?<br>在环境中生存是强化学习的核心理念。把可怜的小机器人丢进现实生活中，惩罚它的错误，奖励它的正确行为。和我们教孩子的方式一样，对吧？</p><p>More effective way here — to build a virtual city and let self-driving car to learn all its tricks there first. That’s exactly how we train auto-pilots right now. Create a virtual city based on a real map, populate with pedestrians and let the car learn to kill as few people as possible. When the robot is reasonably confident in this artificial GTA, it’s freed to test in the real streets. Fun!<br>更有效的方法是建立一个虚拟城市，让自动驾驶汽车先在那里学习它的所有技巧。这正是我们现在训练自动驾驶的方式。在真实地图的基础上创建一个虚拟城市，挤满行人，让汽车学会尽可能少地杀人。当机器人对这种人造GTA相当有信心时，它就可以自由地在真实的街道上进行测试。享乐</p><p>There may be two different approaches — <strong>Model-Based and Model-Free</strong>.<br>可能有两种不同的方法——<strong>基于模型和无模型</strong>。</p><p>Model-Based means that car needs to memorize a map or its parts. That’s a pretty outdated approach since it’s impossible for the poor self-driving car to memorize the whole planet.<br>基于模型意味着汽车需要记住地图或其部件。这是一种相当过时的方法，因为糟糕的自动驾驶汽车不可能记住整个星球。</p><p>In Model-Free learning, the car doesn’t memorize every movement but tries to generalize situations and act rationally while obtaining a maximum reward.<br>在无模型学习中，汽车不会记住每一个动作，而是试图概括情况并理性行事，同时获得最大的奖励。</p><img src="/2023/12/19/%E4%BA%BA%E4%BA%BA%E5%85%B1%E4%BA%AB%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E4%BA%BA%E4%BA%BA%E5%85%B1%E4%BA%AB%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-23.jpg" class="" title="人人共享的机器学习-23"><p>how machines behave in case of fire？<br>classical programming：i counted all the scenarios, and now you have to take off your underwear and make a rope of it<br>meching learning：according to my statistics, people die in 6% of fires.So I recommend you to die now.<br>reinforcement learning：just run for your freaking life AAAA!!!<br>发生火灾时机器如何表现？<br>经典编程：我统计了所有的场景，现在你必须脱掉你的内衣，用它做一根绳子<br>机械学习：根据我的统计，6%的人死于火灾。所以我建议你现在就去死。<br>强化学习：为你该死的生活奔跑吧AAAA！！！</p><p>Remember the news about AI beating a top player at the game of Go? Despite shortly before this it being proved that the number of combinations in this game is greater than the number of atoms in the universe.<br>还记得人工智能在围棋比赛中击败顶尖棋手的新闻吗？尽管在此之前不久，已经证明了这个游戏中组合的数量大于宇宙中原子的数量。</p><p><a href="https://www.wired.com/2016/01/in-a-huge-breakthrough-googles-ai-beats-a-top-player-at-the-game-of-go/">AI beating a top player at the game of Go</a><br><a href="https://www.vice.com/en/article/vv7ejx/after-2500-years-a-chinese-gaming-mystery-is-solved">proved</a></p><p>This means the machine could not remember all the combinations and thereby win Go (as it did chess). At each turn, it simply chose the best move for each situation, and it did well enough to outplay a human meatbag.<br>这意味着机器无法记住所有组合，从而赢得围棋（就像下棋一样）。在每一个转弯处，它都会简单地为每种情况选择最好的动作，而且它做得足够好，胜过了人类的肉袋子。</p><p>This approach is a core concept behind Q-learning and its derivatives (SARSA &amp; DQN). ‘Q’ in the name stands for “Quality” as a robot learns to perform the most “qualitative” action in each situation and all the situations are memorized as a simple markovian process.<br>这种方法是Q学习及其衍生物（SARSA和DQN）背后的核心概念。”名称中的Q代表“质量”，因为机器人学会在每种情况下执行最“定性”的动作，所有情况都被记忆为一个简单的马尔可夫过程。 </p><p><a href="https://www.youtube.com/watch?v=aCEvtRtNO-M&amp;ab_channel=SirajRaval">Q-learning</a><br><a href="https://en.wikipedia.org/wiki/Markov_chain">markovian process</a></p><img src="/2023/12/19/%E4%BA%BA%E4%BA%BA%E5%85%B1%E4%BA%AB%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E4%BA%BA%E4%BA%BA%E5%85%B1%E4%BA%AB%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-24.jpg" class="" title="人人共享的机器学习-24"><p>Such a machine can test billions of situations in a virtual environment, remembering which solutions led to greater reward. But how can it distinguish previously seen situations from a completely new one? If a self-driving car is at a road crossing and the traffic light turns green — does it mean it can go now? What if there’s an ambulance rushing through a street nearby?<br>这样的机器可以在虚拟环境中测试数十亿种情况，记住哪些解决方案会带来更大的回报。但是，它如何区分以前看到的情况和全新的情况呢？如果一辆自动驾驶汽车在十字路口，红绿灯变绿，这是否意味着它现在可以行驶？如果有一辆救护车在附近的街道上飞驰怎么办？</p><p>The answer today is “no one knows”. There’s no easy answer. Researchers are constantly searching for it but meanwhile only finding workarounds. Some would hardcode all the situations manually that let them solve exceptional cases, like the trolley problem. Others would go deep and let neural networks do the job of figuring it out. This led us to the evolution of Q-learning called Deep Q-Network (DQN). But they are not a silver bullet either.<br>今天的答案是“没人知道”。没有简单的答案。研究人员一直在寻找它，但同时只找到变通办法。有些人会手动对所有情况进行硬编码，以解决特殊情况，如手推车问题。其他人会深入研究，让神经网络来解决这个问题。这导致了Q学习的发展，称为深度Q网络（DQN）。但它们也不是灵丹妙药。</p><p><a href="https://en.wikipedia.org/wiki/Trolley_problem">trolley problem</a></p><p>Reinforcement Learning for an average person would look like a real artificial intelligence. Because it makes you think wow, this machine is making decisions in real life situations! This topic is hyped right now, it’s advancing with incredible pace and intersecting with a neural network to clean your floor more accurately. Amazing world of technologies!<br>强化学习对于一个普通人来说就像一个真正的人工智能。因为它让你觉得哇，这台机器是在现实生活中做出决定的！这个话题现在被炒得沸沸扬扬，它以令人难以置信的速度前进，并与神经网络交叉，更准确地清洁你的地板。技术的奇妙世界！</p><p>Off-topic. When I was a student, genetic algorithms (link has cool visualization) were really popular. This is about throwing a bunch of robots into a single environment and making them try reaching the goal until they die. Then we pick the best ones, cross them, mutate some genes and rerun the simulation. After a few milliard years, we will get an intelligent creature. Probably. Evolution at its finest.<br>脱离主题。当我还是一个学生的时候，遗传算法（链接有很酷的可视化）真的很流行。这是关于把一群机器人扔到一个单一的环境中，让它们尝试达到目标，直到死亡。然后我们挑选最好的，将它们交叉，使一些基因发生突变，然后重新运行模拟。几百万年后，我们将得到一个聪明的生物。可能进化到了极致。</p><p><a href="https://rednuht.org/genetic_walkers/">genetic algorithms</a><br><a href="https://mathworld.wolfram.com/Milliard.html">milliard</a></p><p>Genetic algorithms are considered as part of reinforcement learning and they have the most important feature proved by decade-long practice: no one gives a shit about them.<br>遗传算法被认为是强化学习的一部分，经过十年的实践证明，它们有一个最重要的特点：没有人在乎它们。</p><p>Humanity still couldn’t come up with a task where those would be more effective than other methods. But they are great for student experiments and let people get their university supervisors excited about “artificial intelligence” without too much labour. And youtube would love it as well.<br>人类仍然无法想出一个比其他方法更有效的任务。但它们非常适合学生实验，让人们不用太多劳动就能让大学主管对“人工智能”感到兴奋。youtube也会喜欢的。 </p><h1 id="Part-3-Ensemble-Methods-第3部分。集成方法"><a href="#Part-3-Ensemble-Methods-第3部分。集成方法" class="headerlink" title="Part 3. Ensemble Methods 第3部分。集成方法"></a>Part 3. Ensemble Methods 第3部分。集成方法</h1><p>“Bunch of stupid trees learning to correct errors of each other”<br> “一群愚蠢的树学会互相纠正错误”</p><img src="/2023/12/19/%E4%BA%BA%E4%BA%BA%E5%85%B1%E4%BA%AB%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E4%BA%BA%E4%BA%BA%E5%85%B1%E4%BA%AB%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-25.jpg" class="" title="人人共享的机器学习-25"><p>Nowadays is used for:</p><ul><li>Everything that fits classical algorithm approaches (but works better) 所有符合经典算法方法的东西（但效果更好）</li><li>Search systems (★) 搜索系统</li><li>Computer vision 计算机视觉</li><li>Object detection 物体检测</li></ul><p>Popular algorithms: Random Forest, Gradient Boosting<br>流行算法：随机森林，梯度增强</p><p><a href="https://en.wikipedia.org/wiki/Random_forest">Random Forest</a><br><a href="https://en.wikipedia.org/wiki/Gradient_boosting">Gradient Boosting</a></p><p>It’s time for modern, grown-up methods. Ensembles and neural networks are two main fighters paving our path to a singularity. Today they are producing the most accurate results and are widely used in production.<br>是时候采用现代、成熟的方法了。集合和神经网络是为我们通往奇点铺平道路的两个主要斗士。如今，它们正在产生最准确的结果，并在生产中广泛使用。</p><p>However, the neural networks got all the hype today, while the words like “boosting” or “bagging” are scarce hipsters on TechCrunch.<br>然而，神经网络今天得到了所有的炒作，而像“助推”或“装袋”这样的词在TechCrunch上很少出现。</p><p>Despite all the effectiveness the idea behind these is overly simple. If you take a bunch of inefficient algorithms and force them to correct each other’s mistakes, the overall quality of a system will be higher than even the best individual algorithms.<br>尽管如此，这些背后的想法还是过于简单。如果你采用一堆低效的算法，强迫它们互相纠正错误，那么系统的整体质量甚至会高于最好的单个算法。</p><p>You’ll get even better results if you take the most unstable algorithms that are predicting completely different results on small noise in input data. Like Regression and Decision Trees. These algorithms are so sensitive to even a single outlier in input data to have models go mad.<br>如果你采用最不稳定的算法，在输入数据中的小噪声上预测完全不同的结果，你会得到更好的结果。比如回归树和决策树。这些算法对输入数据中的单个异常值都非常敏感，以至于模型都会发疯。</p><p>In fact, this is what we need.<br>事实上，这正是我们所需要的。</p><p>We can use any algorithm we know to create an ensemble. Just throw a bunch of classifiers, spice it up with regression and don’t forget to measure accuracy. From my experience: don’t even try a Bayes or kNN here. Although “dumb”, they are really stable. That’s boring and predictable. Like your ex.<br>我们可以使用我们所知道的任何算法来创建集合。只需抛出一堆分类器，用回归来增加趣味性，别忘了测量准确性。根据我的经验：甚至不要在这里尝试贝叶斯或kNN。虽然“笨”，但他们确实很稳定。这很无聊，而且是可以预测的。就像你的前任。</p><p>Instead, there are three battle-tested methods to create ensembles.<br>相反，有三种经过战斗考验的方法来创建乐团。</p><p><strong>Stacking</strong> Output of several parallel models is passed as input to the last one which makes a final decision. Like that girl who asks her girlfriends whether to meet with you in order to make the final decision herself.<br>几个并行模型的<strong>叠加</strong>输出作为输入传递给最后一个模型，后者做出最终决定。就像那个女孩问她的女朋友是否和你见面，以便自己做出最终决定。</p><img src="/2023/12/19/%E4%BA%BA%E4%BA%BA%E5%85%B1%E4%BA%AB%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E4%BA%BA%E4%BA%BA%E5%85%B1%E4%BA%AB%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-26.jpg" class="" title="人人共享的机器学习-26"><p>Emphasis here on the word “different”. Mixing the same algorithms on the same data would make no sense. The choice of algorithms is completely up to you. However, for final decision-making model, regression is usually a good choice.<br>这里强调“不同”这个词。在相同的数据上混合使用相同的算法是没有意义的。算法的选择完全取决于你。然而，对于最终的决策模型，回归通常是一个不错的选择。</p><p>Based on my experience stacking is less popular in practice, because two other methods are giving better accuracy.<br>根据我的经验，堆叠在实践中不太受欢迎，因为另外两种方法提供了更好的准确性。</p><p><strong>Bagging</strong> aka Bootstrap AGGregatING. Use the same algorithm but train it on different subsets of original data. In the end — just average answers.<br><strong>装袋</strong>又称Bootstrap聚集。使用相同的算法，但在原始数据的不同子集上进行训练。最后——只是一般的答案。</p><p>Data in random subsets may repeat. For example, from a set like “1-2-3” we can get subsets like “2-2-3”, “1-2-2”, “3-1-2” and so on. We use these new datasets to teach the same algorithm several times and then predict the final answer via simple majority voting.<br>随机子集中的数据可能重复。例如，从“1-2-3”这样的集合中，我们可以得到“2-2-3”、“1-2-2”、“3-1-2”等子集。我们使用这些新的数据集多次教授相同的算法，然后通过简单多数投票预测最终答案。</p><img src="/2023/12/19/%E4%BA%BA%E4%BA%BA%E5%85%B1%E4%BA%AB%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E4%BA%BA%E4%BA%BA%E5%85%B1%E4%BA%AB%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-27.jpg" class="" title="人人共享的机器学习-27"><p>The most famous example of bagging is the Random Forest algorithm, which is simply bagging on the decision trees (which were illustrated above). When you open your phone’s camera app and see it drawing boxes around people’s faces — it’s probably the results of Random Forest work. Neural networks would be too slow to run real-time yet bagging is ideal given it can calculate trees on all the shaders of a video card or on these new fancy ML processors.<br>装袋最著名的例子是随机森林算法，它只是在决策树上装袋（如上所述）。当你打开手机的相机应用程序，看到它在人们的脸上画方框时，这可能是随机森林工作的结果。神经网络运行速度太慢，无法实时运行，但考虑到它可以在视频卡的所有着色器或这些新的高级ML处理器上计算树，因此装袋是理想的。</p><img src="/2023/12/19/%E4%BA%BA%E4%BA%BA%E5%85%B1%E4%BA%AB%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E4%BA%BA%E4%BA%BA%E5%85%B1%E4%BA%AB%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-28.jpg" class="" title="人人共享的机器学习-28"><p><a href="https://www.youtube.com/watch?v=J4Wdy0Wc_xQ&amp;ab_channel=StatQuestwithJoshStarmer">Random Forest</a></p><p>In some tasks, the ability of the Random Forest to run in parallel is more important than a small loss in accuracy to the boosting, for example. Especially in real-time processing. There is always a trade-off.<br>例如，在某些任务中，随机森林并行运行的能力比助推精度的小损失更重要。尤其是在实时处理中。总有一种权衡。</p><p><strong>Boosting</strong> Algorithms are trained one by one sequentially. Each subsequent one paying most of its attention to data points that were mispredicted by the previous one. Repeat until you are happy.<br><strong>Boosting</strong>算法是按顺序逐个训练的。随后的每一个都将大部分注意力放在前一个预测错误的数据点上。重复，直到你感到高兴。</p><p>Same as in bagging, we use subsets of our data but this time they are not randomly generated. Now, in each subsample we take a part of the data the previous algorithm failed to process. Thus, we make a new algorithm learn to fix the errors of the previous one.<br>与装袋一样，我们使用数据的子集，但这次它们不是随机生成的。现在，在每个子样本中，我们获取先前算法未能处理的部分数据。因此，我们使一个新的算法学习修复前一个算法的错误。</p><img src="/2023/12/19/%E4%BA%BA%E4%BA%BA%E5%85%B1%E4%BA%AB%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E4%BA%BA%E4%BA%BA%E5%85%B1%E4%BA%AB%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-29.jpg" class="" title="人人共享的机器学习-29"><p>The main advantage here — a very high, even illegal in some countries precision of classification that all cool kids can envy. The cons were already called out — it doesn’t parallelize. But it’s still faster than neural networks. It’s like a race between a dump truck and a racecar. The truck can do more, but if you want to go fast — take a car.<br>这里的主要优势是——分类精度非常高，在一些国家甚至是非法的，所有酷孩子都会羡慕。缺点已经被调用了——它没有并行化。但它仍然比神经网络更快。这就像一场自卸车和赛车之间的比赛。卡车可以做得更多，但如果你想走得快，那就开车吧。</p><p>If you want a real example of boosting — open Facebook or Google and start typing in a search query. Can you hear an army of trees roaring and smashing together to sort results by relevancy? That’s because they are using boosting.<br>如果你想要一个真正的提升示例——打开Facebook或谷歌，开始输入搜索查询。你能听到一大群树咆哮着砸在一起，根据相关性对结果进行排序吗？这是因为他们在使用助推。</p><blockquote><p>Nowadays there are three popular tools for boosting, you can read a comparative report in CatBoost vs. LightGBM vs. XGBoost<br>现在有三种流行的助推工具，你可以阅读CatBoost与LightGBM与XGBoost的比较报告</p></blockquote><p><a href="https://towardsdatascience.com/catboost-vs-light-gbm-vs-xgboost-5f93620723db">CatBoost vs. LightGBM vs. XGBoost</a></p><h1 id="Part-4-Neural-Networks-and-Deep-Leaning-第4部分。神经网络与深度学习"><a href="#Part-4-Neural-Networks-and-Deep-Leaning-第4部分。神经网络与深度学习" class="headerlink" title="Part 4. Neural Networks and Deep Leaning 第4部分。神经网络与深度学习"></a>Part 4. Neural Networks and Deep Leaning 第4部分。神经网络与深度学习</h1><p>“We have a thousand-layer network, dozens of video cards, but still no idea where to use it. Let’s generate cat pics!”<br> “我们有一个千层网络，几十个视频卡，但仍然不知道在哪里使用。让我们生成猫的照片！”</p><img src="/2023/12/19/%E4%BA%BA%E4%BA%BA%E5%85%B1%E4%BA%AB%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E4%BA%BA%E4%BA%BA%E5%85%B1%E4%BA%AB%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-30.jpg" class="" title="人人共享的机器学习-30"><p>Used today for:</p><ul><li>Replacement of all algorithms above 替换上述所有算法</li><li>Object identification on photos and videos 照片和视频上的对象识别</li><li>Speech recognition and synthesis 语音识别与合成 </li><li>Image processing, style transfer 图像处理、风格转换</li><li>Machine translation 机器翻译</li></ul><p>Popular architectures: Perceptron, Convolutional Network (CNN), Recurrent Networks (RNN), Autoencoders<br>流行架构：感知器、卷积网络（CNN）、递归网络（RNN）、自动编码器</p><p><a href="https://en.wikipedia.org/wiki/Perceptron">Perceptron</a><br><a href="https://en.wikipedia.org/wiki/Convolutional_neural_network">Convolutional Network-CNN</a><br><a href="https://en.wikipedia.org/wiki/Recurrent_neural_network">Recurrent Networks-RNN</a><br><a href="https://en.wikipedia.org/wiki/Autoencoder">Autoencoders</a></p><p>If no one has ever tried to explain neural networks to you using “human brain” analogies, you’re happy. Tell me your secret. But first, let me explain it the way I like.<br>如果从来没有人试图用“人脑”的类比来向你解释神经网络，你会很高兴。告诉我你的秘密。但首先，让我用我喜欢的方式解释一下。</p><p>Any neural network is basically a collection of <strong>neurons</strong> and <strong>connections</strong> between them. <strong>Neuron</strong> is a function with a bunch of inputs and one output. Its task is to take all numbers from its input, perform a function on them and send the result to the output.<br>任何神经网络基本上都是<strong>神经元</strong>及<strong>其之间连接</strong>的集合。<strong>神经元</strong>是一个具有一组输入和一个输出的函数。它的任务是从输入中获取所有数字，对它们执行函数，并将结果发送到输出。</p><p>Here is an example of a simple but useful in real life neuron: sum up all numbers from the inputs and if that sum is bigger than N — give 1 as a result. Otherwise — zero.<br>这里有一个简单但在现实生活中有用的神经元的例子：将输入的所有数字相加，如果总和大于N，则给出1。否则——零。</p><p>Connections are like channels between neurons. They connect outputs of one neuron with the inputs of another so they can send digits to each other. Each connection has only one parameter — weight. It’s like a connection strength for a signal. When the number 10 passes through a connection with a weight 0.5 it turns into 5.<br>连接就像神经元之间的通道。它们将一个神经元的输出与另一个神经元输入连接起来，以便相互发送数字。每个连接只有一个参数——权重。这就像信号的连接强度。当数字10通过一个具有0.5重量的连接时，它变成了5。</p><p>These weights tell the neuron to respond more to one input and less to another. Weights are adjusted when training — that’s how the network learns. Basically, that’s all there is to it.<br>这些权重告诉神经元对一个输入的反应更多，对另一个输入反应更少。训练时会调整权重——这就是网络学习的方式。基本上，这就是它的全部。</p><img src="/2023/12/19/%E4%BA%BA%E4%BA%BA%E5%85%B1%E4%BA%AB%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E4%BA%BA%E4%BA%BA%E5%85%B1%E4%BA%AB%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-31.jpg" class="" title="人人共享的机器学习-31"><p>To prevent the network from falling into anarchy, the neurons are linked by layers, not randomly. Within a layer neurons are not connected, but they are connected to neurons of the next and previous layers. Data in the network goes strictly in one direction — from the inputs of the first layer to the outputs of the last.<br>为了防止网络陷入无政府状态，神经元是分层连接的，而不是随机连接的。在一层内，神经元不相连，但它们与下一层和前一层的神经元相连。网络中的数据严格地朝着一个方向发展——从第一层的输入到最后一层的输出。</p><p>If you throw in a sufficient number of layers and put the weights correctly, you will get the following: by applying to the input, say, the image of handwritten digit 4, black pixels activate the associated neurons, they activate the next layers, and so on and on, until it finally lights up the exit in charge of the four. The result is achieved.<br>如果你放入足够多的层并正确放置权重，你会得到以下结果：通过应用于输入，比如手写数字4的图像，黑色像素激活相关的神经元，它们激活下一层，以此类推，直到它最终照亮负责这四层的出口。取得了效果。</p><img src="/2023/12/19/%E4%BA%BA%E4%BA%BA%E5%85%B1%E4%BA%AB%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E4%BA%BA%E4%BA%BA%E5%85%B1%E4%BA%AB%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-32.jpg" class="" title="人人共享的机器学习-32"><p>When doing real-life programming nobody is writing neurons and connections. Instead, everything is represented as matrices and calculated based on matrix multiplication for better performance. My favourite video on this and its sequel below describe the whole process in an easily digestible way using the example of recognizing hand-written digits. Watch them if you want to figure this out.<br>在进行真实编程时，没有人在编写神经元和连接。相反，所有内容都表示为矩阵，并基于矩阵乘法进行计算，以获得更好的性能。我最喜欢的这段视频及其后续视频以识别手写数字为例，以易于理解的方式描述了整个过程。如果你想弄清楚这一点，请注意他们。</p><p><a href="https://www.youtube.com/watch?v=aircAruvnKk&amp;ab_channel=3Blue1Brown">但是什么是神经网络？ |第一章深入学习</a></p><blockquote><p>A network that has multiple layers that have connections between every neuron is called a perceptron (MLP) and considered the simplest architecture for a novice. I didn’t see it used for solving tasks in production.<br>一个具有多层且每个神经元之间都有连接的网络被称为感知器（MLP），被认为是新手最简单的架构。我没有看到它被用于解决生产中的任务。</p></blockquote><p><a href="https://en.wikipedia.org/wiki/Multilayer_perceptron">perceptron</a></p><p>After we constructed a network, our task is to assign proper ways so neurons will react correctly to incoming signals. Now is the time to remember that we have data that is samples of ‘inputs’ and proper ‘outputs’. We will be showing our network a drawing of the same digit 4 and tell it ‘adapt your weights so whenever you see this input your output would emit 4’.<br>在我们构建了一个网络后，我们的任务是分配正确的方式，使神经元对传入的信号做出正确的反应。现在是时候记住，我们拥有的数据是“输入”和正确“输出”的样本了。我们将向我们的网络展示同一数字4的图形，并告诉它“调整你的权重，这样每当你看到这个输入时，你的输出就会发出4”。</p><p>To start with, all weights are assigned randomly. After we show it a digit it emits a random answer because the weights are not correct yet, and we compare how much this result differs from the right one. Then we start traversing network backward from outputs to inputs and tell every neuron ‘hey, you did activate here but you did a terrible job and everything went south from here downwards, let’s keep less attention to this connection and more of that one, mkay?’.<br>首先，所有权重都是随机分配的。在我们给它显示一个数字后，它会发出一个随机答案，因为权重还不正确，我们比较这个结果与正确的结果有多大差异。然后，我们开始从输出到输入反向遍历网络，并告诉每个神经元“嘿，你确实在这里激活了，但你做得很糟糕，一切都从这里向下发展，让我们少关注这个连接，多关注那个连接，mkay？”。</p><p>After hundreds of thousands of such cycles of ‘infer-check-punish’, there is a hope that the weights are corrected and act as intended. The science name for this approach is <strong>Backpropagation</strong>, or a ‘method of backpropagating an error’. Funny thing it took twenty years to come up with this method. Before this we still taught neural networks somehow.<br>经过数十万次这样的“推断-检查-惩罚”循环，有希望纠正权重并按预期行事。这种方法的科学名称是<strong>反向传播</strong>，或“反向传播错误的方法”。有趣的是，花了二十年的时间才想出这个方法。在此之前，我们仍然以某种方式教授神经网络。</p><p><a href="https://en.wikipedia.org/wiki/Backpropagation">Backpropagation</a></p><p>My second favorite vid is describing this process in depth, but it’s still very accessible.<br>我第二喜欢的视频是深入描述这个过程，但它仍然很容易理解。</p><p><a href="https://www.youtube.com/watch?v=IHZwWFHWa-w&amp;ab_channel=3Blue1Brown">梯度下降，神经网络如何学习|深度学习，第2章</a></p><p><a href="http://neuralnetworksanddeeplearning.com/">Neural Networks and Deep Learning</a></p><p>A well trained neural network can fake the work of any of the algorithms described in this chapter (and frequently works more precisely). This universality is what made them widely popular. Finally we have an architecture of human brain they said we just need to assemble lots of layers and teach them on any possible data they hoped. Then the first AI winter started, then it thawed, and then another wave of disappointment hit.<br>经过良好训练的神经网络可以伪造本章中描述的任何算法的工作（而且通常工作得更精确）。这种普遍性使它们广受欢迎。最后，我们有了人类大脑的架构，他们说我们只需要组装很多层，并根据他们希望的任何可能的数据教授他们。然后第一个人工智能的冬天开始了，然后它解冻了，然后又一波失望袭来。</p><p><a href="https://en.wikipedia.org/wiki/AI_winter">AI winter</a></p><p>It turned out networks with a large number of layers required computation power unimaginable at that time. Nowadays any gamer PC with geforces outperforms the datacenters of that time. So people didn’t have any hope then to acquire computation power like that and neural networks were a huge bummer.<br>事实证明，具有大量层的网络需要当时难以想象的计算能力。如今，任何一台拥有geforces的游戏PC都胜过当时的数据中心。因此，当时人们对获得这样的计算能力没有任何希望，而神经网络是一个巨大的障碍。</p><p>And then ten years ago deep learning rose.<br>十年前，深度学习兴起了。</p><blockquote><p>There’s a nice Timeline of machine learning describing the rollercoaster of hopes &amp; waves of pessimism.<br>有一个很好的机器学习时间表，描述了希望和悲观情绪的过山车。</p></blockquote><p><a href="https://en.wikipedia.org/wiki/Timeline_of_machine_learning">Timeline of machine learning</a></p><p>In 2012 convolutional neural networks acquired an overwhelming victory in ImageNet competition that made the world suddenly remember about methods of deep learning described in the ancient 90s. Now we have video cards!<br>2012年，卷积神经网络在ImageNet竞争中取得了压倒性的胜利，这让世界突然想起了90年代描述的深度学习方法。现在我们有了视频卡！</p><p><a href="https://habr.com/en/articles/183380/">overwhelming victory in ImageNet competition</a></p><p>Differences of deep learning from classical neural networks were in new methods of training that could handle bigger networks. Nowadays only theoretics would try to divide which learning to consider deep and not so deep. And we, as practitioners are using popular ‘deep’ libraries like Keras, TensorFlow &amp; PyTorch even when we build a mini-network with five layers. Just because it’s better suited than all the tools that came before. And we just call them neural networks.<br>深度学习与经典神经网络的不同之处在于可以处理更大网络的新训练方法。如今，只有理论家才会试图划分哪门学问应该考虑得很深和不那么深。作为从业者，我们正在使用流行的“深度”库，如Keras、TensorFlow和PyTorch，即使我们构建了一个有五层的迷你网络。只是因为它比以前的所有工具都更适合。我们称之为神经网络。</p><p><a href="https://keras.io/">Keras</a><br><a href="https://github.com/tensorflow/tensorflow">TensorFlow</a><br><a href="https://pytorch.org/">PyTorch</a></p><p>I’ll tell about two main kinds nowadays.<br>我现在要讲两种主要的。</p><h2 id="Convolutional-Neural-Networks-CNN-卷积神经网络（CNN）"><a href="#Convolutional-Neural-Networks-CNN-卷积神经网络（CNN）" class="headerlink" title="Convolutional Neural Networks (CNN) 卷积神经网络（CNN）"></a>Convolutional Neural Networks (CNN) 卷积神经网络（CNN）</h2><p>Convolutional neural networks are all the rage right now. They are used to search for objects on photos and in videos, face recognition, style transfer, generating and enhancing images, creating effects like slow-mo and improving image quality. Nowadays CNNs are used in all the cases that involve pictures and video s. Even in your iPhone several of these networks are going through your nudes to detect objects in those. If there is something to detect, heh.<br>卷积神经网络现在风靡一时。它们用于搜索照片和视频中的对象、人脸识别、风格转换、生成和增强图像、创建慢动作等效果并提高图像质量。如今，所有涉及图片和视频的案例都使用了细胞神经网络。即使在你的iPhone中，其中几个网络也会通过你的裸体来检测其中的物体。如果有什么要探测的，呵呵。</p><img src="/2023/12/19/%E4%BA%BA%E4%BA%BA%E5%85%B1%E4%BA%AB%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E4%BA%BA%E4%BA%BA%E5%85%B1%E4%BA%AB%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-33.jpg" class="" title="人人共享的机器学习-33"><blockquote><p>Image above is a result produced by Detectron that was recently open-sourced by Facebook<br>上图是Detectron最近由Facebook开源的结果</p></blockquote><p><a href="https://github.com/facebookresearch/Detectron">Detectron</a></p><p>A problem with images was always the difficulty of extracting features out of them. You can split text by sentences, lookup words’ attributes in specialized vocabularies, etc. But images had to be labeled manually to teach the machine where cat ears or tails were in this specific image. This approach got the name ‘handcrafting features’ and used to be used almost by everyone.<br>图像的一个问题总是难以从中提取特征。你可以按句子分割文本，在专业词汇表中查找单词的属性等。但图像必须手动标记，才能告诉机器猫耳朵或尾巴在这个特定图像中的位置。这种方法被称为“手工制作功能”，过去几乎每个人都在使用。</p><img src="/2023/12/19/%E4%BA%BA%E4%BA%BA%E5%85%B1%E4%BA%AB%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E4%BA%BA%E4%BA%BA%E5%85%B1%E4%BA%AB%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-34.jpg" class="" title="人人共享的机器学习-34"><p>There are lots of issues with the handcrafting.<br>手工制作有很多问题。</p><p>First of all, if a cat had its ears down or turned away from the camera: you are in trouble, the neural network won’t see a thing.<br>首先，如果一只猫低着耳朵或转身离开相机：你有麻烦了，神经网络什么都看不见。</p><p>Secondly, try naming on the spot 10 different features that distinguish cats from other animals. I for one couldn’t do it, but when I see a black blob rushing past me at night — even if I only see it in the corner of my eye — I would definitely tell a cat from a rat. Because people don’t look only at ear form or leg count and account lots of different features they don’t even think about. And thus cannot explain it to the machine.<br>其次，试着当场命名10种不同的特征，将猫与其他动物区分开来。就我而言，我做不到，但当我在晚上看到一个黑色的斑点从我身边掠过时——即使我只是从眼角看到它——我肯定会分辨猫和老鼠。因为人们不仅仅看耳朵的形状或腿的数量，还考虑了很多他们甚至没有想过的不同特征。因此无法向机器解释。</p><p>So it means the machine needs to learn such features on its own, building on top of basic lines. We’ll do the following: first, we divide the whole image into 8x8 pixel blocks and assign to each a type of dominant line – either horizontal [-], vertical [|] or one of the diagonals [/]. It can also be that several would be highly visible — this happens and we are not always absolutely confident.<br>因此，这意味着机器需要在基本线的基础上自行学习这些功能。我们将执行以下操作：首先，我们将整个图像划分为8x8像素的块，并为每个块分配一种类型的主导线——水平[-]、垂直[|]或其中一条对角线[/]。也可能有几个会非常明显——这种情况发生了，我们并不总是绝对有信心。</p><p>Output would be several tables of sticks that are in fact the simplest features representing objects edges on the image. They are images on their own but built out of sticks. So we can once again take a block of 8x8 and see how they match together. And again and again…<br>输出将是几张棍子表，这些棍子实际上是表示图像上对象边缘的最简单特征。它们是自己的图像，但却是用棍子做成的。所以我们可以再次取一个8x8的块，看看它们是如何匹配在一起的。一次又一次…</p><p>This operation is called convolution, which gave the name for the method. Convolution can be represented as a layer of a neural network, because each neuron can act as any function.<br>这个操作被称为卷积，它为该方法命名。卷积可以表示为神经网络的一层，因为每个神经元都可以作为任何函数。</p><img src="/2023/12/19/%E4%BA%BA%E4%BA%BA%E5%85%B1%E4%BA%AB%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E4%BA%BA%E4%BA%BA%E5%85%B1%E4%BA%AB%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-35.jpg" class="" title="人人共享的机器学习-35"><p>When we feed our neural network with lots of photos of cats it automatically assigns bigger weights to those combinations of sticks it saw the most frequently. It doesn’t care whether it was a straight line of a cat’s back or a geometrically complicated object like a cat’s face, something will be highly activating.<br>当我们给神经网络提供大量猫的照片时，它会自动为它最频繁看到的棍子组合分配更大的权重。它不在乎它是猫背部的一条直线，还是像猫脸这样几何复杂的物体，有些东西会非常活跃。</p><p>As the output, we would put a simple perceptron which will look at the most activated combinations and based on that differentiate cats from dogs.<br>作为输出，我们将放置一个简单的感知器，它将观察最活跃的组合，并以此为基础区分猫和狗。</p><img src="/2023/12/19/%E4%BA%BA%E4%BA%BA%E5%85%B1%E4%BA%AB%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E4%BA%BA%E4%BA%BA%E5%85%B1%E4%BA%AB%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-36.jpg" class="" title="人人共享的机器学习-36"><p>The beauty of this idea is that we have a neural net that searches for the most distinctive features of the objects on its own. We don’t need to pick them manually. We can feed it any amount of images of any object just by googling billions of images with it and our net will create feature maps from sticks and learn to differentiate any object on its own.<br>这个想法的美妙之处在于，我们有一个神经网络，可以自己搜索物体最独特的特征。我们不需要手动挑选它们。我们只需在谷歌上搜索数十亿张图像，就可以向它提供任何物体的任何数量的图像，我们的网络将从棒中创建特征图，并学会独立区分任何物体。</p><p>For this I even have a handy unfunny joke:<br>对此，我甚至有一个不好笑的笑话：</p><blockquote><p>Give your neural net a fish and it will be able to detect fish for the rest of its life. Give your neural net a fishing rod and it will be able to detect fishing rods for the rest of its life…<br>给你的神经网络一条鱼，它将能够在余生中检测到鱼。给你的神经网络一根鱼竿，它将能够在余生中检测鱼竿…</p></blockquote><h2 id="Recurrent-Neural-Networks-RNN-递归神经网络"><a href="#Recurrent-Neural-Networks-RNN-递归神经网络" class="headerlink" title="Recurrent Neural Networks (RNN) 递归神经网络"></a>Recurrent Neural Networks (RNN) 递归神经网络</h2><p>The second most popular architecture today. Recurrent networks gave us useful things like neural machine translation (here is my post about it), speech recognition and voice synthesis in smart assistants. RNNs are the best for sequential data like voice, text or music.<br>当今第二流行的建筑。递归网络为我们提供了一些有用的东西，比如神经机器翻译（这是我的帖子）、语音识别和智能助手中的语音合成。RNN最适用于语音、文本或音乐等顺序数据。</p><p><a href="https://vas3k.com/blog/machine_translation/">Machine Translation-From the Cold War to Deep Learning</a></p><p>Remember Microsoft Sam, the old-school speech synthesizer from Windows XP? That funny guy builds words letter by letter, trying to glue them up together. Now, look at Amazon Alexa or Assistant from Google. They don’t only say the words clearly, they even place the right accents!<br>还记得微软的Sam吗？那是Windows XP的老式语音合成器？那个有趣的家伙一个字母一个字母地造单词，试图把它们粘在一起。现在，看看亚马逊Alexa或谷歌助手。他们不仅把单词说得很清楚，他们甚至用正确的口音！</p><p><a href="https://www.youtube.com/watch?v=NG-LATBZNBs&amp;ab_channel=SomethingUnreal">Neural Net is trying to speak</a></p><p>All because modern voice assistants are trained to speak not letter by letter, but on whole phrases at once. We can take a bunch of voiced texts and train a neural network to generate an audio-sequence closest to the original speech.<br>这一切都是因为现代语音助理被训练成不是一个字母一个字母地说话，而是同时说出整个短语。我们可以取一堆有声文本，训练神经网络生成最接近原始语音的音频序列。</p><p>In other words, we use text as input and its audio as the desired output. We ask a neural network to generate some audio for the given text, then compare it with the original, correct errors and try to get as close as possible to ideal.<br>换句话说，我们使用文本作为输入，使用它的音频作为所需的输出。我们要求神经网络为给定的文本生成一些音频，然后将其与原始文本进行比较，纠正错误，并尽可能接近理想。</p><p>Sounds like a classical learning process. Even a perceptron is suitable for this. But how should we define its outputs? Firing one particular output for each possible phrase is not an option — obviously.<br>听起来像是一个经典的学习过程。即使是感知器也适用于此。但我们应该如何定义其产出？显然，为每个可能的短语触发一个特定的输出不是一种选择。</p><p>Here we’ll be helped by the fact that text, speech or music are sequences. They consist of consecutive units like syllables. They all sound unique but depend on previous ones. Lose this connection and you get dubstep.<br>在这里，文本、语音或音乐都是序列这一事实将对我们有所帮助。它们像音节一样由连续的单元组成。它们听起来都很独特，但依赖于以前的版本。失去此连接，您将获得dubstep。</p><p>We can train the perceptron to generate these unique sounds, but how will it remember previous answers? So the idea is to add memory to each neuron and use it as an additional input on the next run. A neuron could make a note for itself - hey, we had a vowel here, the next sound should sound higher (it’s a very simplified example).<br>我们可以训练感知器来产生这些独特的声音，但它将如何记住以前的答案？因此，我们的想法是为每个神经元添加内存，并在下一次运行时将其用作额外的输入。神经元可以为自己做一个音符——嘿，我们这里有一个元音，下一个声音应该听起来更高（这是一个非常简单的例子）。</p><p>That’s how recurrent networks appeared. 循环网络就是这样出现的。</p><img src="/2023/12/19/%E4%BA%BA%E4%BA%BA%E5%85%B1%E4%BA%AB%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E4%BA%BA%E4%BA%BA%E5%85%B1%E4%BA%AB%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-37.jpg" class="" title="人人共享的机器学习-37"><p>This approach had one huge problem - when all neurons remembered their past results, the number of connections in the network became so huge that it was technically impossible to adjust all the weights.<br>这种方法有一个巨大的问题——当所有神经元都记得他们过去的结果时，网络中的连接数量变得如此巨大，以至于从技术上讲不可能调整所有的权重。</p><p>When a neural network can’t forget, it can’t learn new things (people have the same flaw).<br>当神经网络无法忘记时，它就无法学习新事物（人们也有同样的缺陷）。</p><p>The first decision was simple: limit the neuron memory. Let’s say, to memorize no more than 5 recent results. But it broke the whole idea.<br>第一个决定很简单：限制神经元的记忆。比方说，记住不超过5个最近的结果。但它打破了整个想法。</p><p>A much better approach came later: to use special cells, similar to computer memory. Each cell can record a number, read it or reset it. They were called long and short-term memory (LSTM) cells.<br>后来出现了一种更好的方法：使用类似于计算机内存的特殊单元。每个细胞都可以记录、读取或重置一个数字。它们被称为长短期记忆（LSTM）细胞。</p><p>Now, when a neuron needs to set a reminder, it puts a flag in that cell. Like “it was a consonant in a word, next time use different pronunciation rules”. When the flag is no longer needed, the cells are reset, leaving only the “long-term” connections of the classical perceptron. In other words, the network is trained not only to learn weights but also to set these reminders.<br>现在，当神经元需要设置提醒时，它会在该细胞中设置一个标志。就像“它是一个单词中的一个辅音，下次使用不同的发音规则”。当不再需要标志时，单元被重置，只留下经典感知器的“长期”连接。换句话说，网络不仅被训练来学习权重，还被训练来设置这些提醒。</p><p>Simple, but it works!<br>很简单，但它有效！</p><p>You can take speech samples from anywhere. BuzzFeed, for example, took Obama’s speeches and trained a neural network to imitate his voice. As you see, audio synthesis is already a simple task. Video still has issues, but it’s a question of time.<br>你可以从任何地方采集语音样本。例如，BuzzFeed采用了奥巴马的演讲，并训练了一个神经网络来模仿他的声音。正如您所看到的，音频合成已经是一项简单的任务。视频仍然有问题，但这是时间问题。</p><p><a href="https://www.youtube.com/watch?v=cQ54GDm1eL0&amp;embeds_referring_euri=https%3A%2F%2Fvas3k.com%2F&amp;source_ve_path=Mjg2NjY&amp;feature=emb_logo">CNN + RNN = Fake Obama</a></p><img src="/2023/12/19/%E4%BA%BA%E4%BA%BA%E5%85%B1%E4%BA%AB%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E4%BA%BA%E4%BA%BA%E5%85%B1%E4%BA%AB%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-38.webp" class="" title="人人共享的机器学习-38"><p>There are many more network architectures in the wild. I recommend a good article called Neural Network Zoo, where almost all types of neural networks are collected and briefly explained.<br>现在有更多的网络体系结构。我推荐一篇名为《神经网络动物园》的好文章，其中收集并简要解释了几乎所有类型的神经网络。</p><p><a href="http://www.asimovinstitute.org/neural-network-zoo/">Neural Network Zoo</a></p><img src="/2023/12/19/%E4%BA%BA%E4%BA%BA%E5%85%B1%E4%BA%AB%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E4%BA%BA%E4%BA%BA%E5%85%B1%E4%BA%AB%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-39.png" class="" title="人人共享的机器学习-39"><h1 id="The-End-when-the-war-with-the-machines-结局：什么时候和机器开战？"><a href="#The-End-when-the-war-with-the-machines-结局：什么时候和机器开战？" class="headerlink" title="The End: when the war with the machines? 结局：什么时候和机器开战？"></a>The End: when the war with the machines? 结局：什么时候和机器开战？</h1><p>The main problem here is that the question “when will the machines become smarter than us and enslave everyone?” is initially wrong. There are too many hidden conditions in it.<br>这里的主要问题是，“机器什么时候会变得比我们更聪明并奴役所有人？”这个问题最初是错误的。其中有太多的隐藏条件。</p><p>We say “become smarter than us” like we mean that <strong>there is a certain unified scale of intelligence</strong>. The top of which is a human, dogs are a bit lower, and stupid pigeons are hanging around at the very bottom.<br>我们说“变得比我们更聪明”，就像我们的意思是<strong>智力有一定的统一尺度一样</strong>。它的顶部是一个人，狗有点低，愚蠢的鸽子在最底部徘徊。</p><p>That’s wrong.<br>这是错误的。</p><p>If this were the case, every human must beat animals in everything but it’s not true. The average squirrel can remember a thousand hidden places with nuts — I can’t even remember where are my keys.<br>如果是这样的话，每个人都必须在任何事情上打败动物，但事实并非如此。一般松鼠都能记住一千个藏着坚果的地方——我甚至记不起我的钥匙在哪里了。</p><p>So intelligence is a set of different skills, not a single measurable value? Or is remembering nuts stashed locations not included in intelligence?<br>所以智力是一套不同的技能，而不是一个单一的可测量的价值？还是情报中没有包括记住坚果的藏匿地点？</p><p>An even more interesting question for me - <strong>why do we believe that the human brain possibilities are limited</strong>? There are many popular graphs on the Internet, where the technological progress is drawn as an exponent and the human possibilities are constant. But is it?<br>对我来说，还有一个更有趣的问题——<strong>为什么我们认为人脑的可能性是有限的</strong>？互联网上有许多流行的图表，其中技术进步被画成指数，人类的可能性是恒定的。但是是吗？</p><p>Ok, multiply 1680 by 950 right now in your mind. I know you won’t even try, lazy bastards. But give you a calculator — you’ll do it in two seconds. Does this mean that the calculator just expanded the capabilities of your brain?<br>好的，现在在你的脑海中用1680乘以950。我知道你甚至不会尝试，懒惰的混蛋。但给你一个计算器，你两秒钟就能算出。这是否意味着计算器只是扩展了你大脑的功能？</p><p>If yes, can I continue to expand them with other machines? Like, use notes in my phone to not to remember a shitload of data? Oh, seems like I’m doing it right now. I’m expanding the capabilities of my brain with the machines.<br>如果是，我可以继续用其他机器扩展它们吗？比如，用我手机里的笔记来不记住大量数据？哦，看来我现在正在做。我正在用机器扩展我大脑的能力。</p><p>Think about it. Thanks for reading.<br>想想看。谢谢你的阅读。</p><img src="/2023/12/19/%E4%BA%BA%E4%BA%BA%E5%85%B1%E4%BA%AB%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E4%BA%BA%E4%BA%BA%E5%85%B1%E4%BA%AB%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-40.png" class="" title="人人共享的机器学习-40">]]></content>
    
    
    <summary type="html">人人共享的机器学习</summary>
    
    
    
    <category term="机器学习" scheme="http://hibiscidai.com/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="学习笔记" scheme="http://hibiscidai.com/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term="机器学习" scheme="http://hibiscidai.com/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>DeepL翻译技巧</title>
    <link href="http://hibiscidai.com/2023/11/15/DeepL%E7%BF%BB%E8%AF%91%E6%8A%80%E5%B7%A7/"/>
    <id>http://hibiscidai.com/2023/11/15/DeepL%E7%BF%BB%E8%AF%91%E6%8A%80%E5%B7%A7/</id>
    <published>2023-11-15T07:00:00.000Z</published>
    <updated>2023-11-15T11:57:40.000Z</updated>
    
    <content type="html"><![CDATA[<img src="/2023/11/15/DeepL%E7%BF%BB%E8%AF%91%E6%8A%80%E5%B7%A7/DeepL%E7%BF%BB%E8%AF%91%E6%8A%80%E5%B7%A7.png" class="" title="DeepL翻译技巧"><p>DeepL翻译技巧</p><span id="more"></span><p>[TOC]</p><h1 id="DeepL翻译技巧"><a href="#DeepL翻译技巧" class="headerlink" title="DeepL翻译技巧"></a>DeepL翻译技巧</h1><h1 id="按指定页数动态拆分Word文档"><a href="#按指定页数动态拆分Word文档" class="headerlink" title="按指定页数动态拆分Word文档"></a>按指定页数动态拆分Word文档</h1><p>word打开<br>文件→选项→信任中心→宏设置打开<br>alt+f11<br>插入→模块<br>模块1编辑<br>F5运行<br>出现4065，调试，继续运行</p><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Option</span> <span class="keyword">Explicit</span></span><br><span class="line"><span class="keyword">Sub</span> DynamicSplitPagesAsDocuments()</span><br><span class="line"><span class="keyword">Dim</span> oSrcDoc <span class="keyword">As</span> Document, oNewDoc <span class="keyword">As</span> Document</span><br><span class="line"><span class="keyword">Dim</span> strSrcName <span class="keyword">As</span> <span class="type">String</span>, strNewName <span class="keyword">As</span> <span class="type">String</span></span><br><span class="line"><span class="keyword">Dim</span> oRange <span class="keyword">As</span> Range</span><br><span class="line"><span class="keyword">Dim</span> nIndex <span class="keyword">As</span> <span class="type">Integer</span>, nSubIndex <span class="keyword">As</span> <span class="type">Integer</span>, nTotalPages <span class="keyword">As</span> <span class="type">Integer</span>, nBound <span class="keyword">As</span> <span class="type">Integer</span></span><br><span class="line"><span class="keyword">Dim</span> fso <span class="keyword">As</span> <span class="type">Object</span></span><br><span class="line"><span class="keyword">Const</span> nSteps = <span class="number">10</span></span><br><span class="line"><span class="keyword">Set</span> fso = CreateObject(<span class="string">&quot;Scripting.FileSystemObject&quot;</span>)</span><br><span class="line"><span class="keyword">Set</span> oSrcDoc = ActiveDocument</span><br><span class="line"><span class="keyword">Set</span> oRange = oSrcDoc.Content</span><br><span class="line">nTotalPages = ActiveDocument.Content.Information(wdNumberOfPagesInDocument)</span><br><span class="line">oRange.Collapse wdCollapseStart</span><br><span class="line">oRange.<span class="keyword">Select</span></span><br><span class="line"><span class="keyword">For</span> nIndex = <span class="number">1</span> <span class="keyword">To</span> nTotalPages <span class="keyword">Step</span> nSteps</span><br><span class="line"><span class="keyword">Set</span> oNewDoc = Documents.Add</span><br><span class="line"><span class="keyword">If</span> nIndex + nSteps &gt; nTotalPages <span class="keyword">Then</span></span><br><span class="line">nBound = nTotalPages</span><br><span class="line"><span class="keyword">Else</span></span><br><span class="line">nBound = nIndex + nSteps - <span class="number">1</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line"><span class="keyword">For</span> nSubIndex = nIndex <span class="keyword">To</span> nBound</span><br><span class="line">oSrcDoc.Activate</span><br><span class="line">oSrcDoc.Bookmarks(<span class="string">&quot;\page&quot;</span>).Range.Copy</span><br><span class="line">oSrcDoc.Windows(<span class="number">1</span>).Activate</span><br><span class="line">Application.Browser.Target = wdBrowsePage</span><br><span class="line">Application.Browser.<span class="keyword">Next</span></span><br><span class="line">oNewDoc.Activate</span><br><span class="line">oNewDoc.Windows(<span class="number">1</span>).Selection.Paste</span><br><span class="line"><span class="keyword">Next</span> nSubIndex</span><br><span class="line">strSrcName = oSrcDoc.FullName</span><br><span class="line">strNewName = fso.BuildPath(fso.GetParentFolderName(strSrcName), _</span><br><span class="line">fso.GetBaseName(strSrcName) &amp; <span class="string">&quot;_&quot;</span> &amp; (nIndex \ nSteps) &amp; <span class="string">&quot;.&quot;</span> &amp; fso.GetExtensionName(strSrcName))</span><br><span class="line">oNewDoc.SaveAs strNewName</span><br><span class="line">oNewDoc.Close <span class="literal">False</span></span><br><span class="line"><span class="keyword">Next</span> nIndex</span><br><span class="line"><span class="keyword">Set</span> oNewDoc = <span class="literal">Nothing</span></span><br><span class="line"><span class="keyword">Set</span> oRange = <span class="literal">Nothing</span></span><br><span class="line"><span class="keyword">Set</span> oSrcDoc = <span class="literal">Nothing</span></span><br><span class="line"><span class="keyword">Set</span> fso = <span class="literal">Nothing</span></span><br><span class="line">MsgBox <span class="string">&quot;结束!&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Option</span> <span class="keyword">Explicit</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Sub</span> DynamicSplitPagesAsDocuments()</span><br><span class="line"></span><br><span class="line"><span class="keyword">Dim</span> oSrcDoc <span class="keyword">As</span> Document, oNewDoc <span class="keyword">As</span> Document</span><br><span class="line"><span class="keyword">Dim</span> strSrcName <span class="keyword">As</span> <span class="type">String</span>, strNewName <span class="keyword">As</span> <span class="type">String</span></span><br><span class="line"><span class="keyword">Dim</span> oRange <span class="keyword">As</span> Range</span><br><span class="line"><span class="keyword">Dim</span> nIndex <span class="keyword">As</span> <span class="type">Integer</span>, nSubIndex <span class="keyword">As</span> <span class="type">Integer</span>, nTotalPages <span class="keyword">As</span> <span class="type">Integer</span>, nBound <span class="keyword">As</span> <span class="type">Integer</span></span><br><span class="line"><span class="keyword">Dim</span> fso <span class="keyword">As</span> <span class="type">Object</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Const</span> nSteps = <span class="number">9</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Set</span> fso = CreateObject(<span class="string">&quot;Scripting.FileSystemObject&quot;</span>)</span><br><span class="line"><span class="keyword">Set</span> oSrcDoc = ActiveDocument</span><br><span class="line"><span class="keyword">Set</span> oRange = oSrcDoc.Content</span><br><span class="line"></span><br><span class="line">nTotalPages = ActiveDocument.Content.Information(wdNumberOfPagesInDocument)</span><br><span class="line">oRange.Collapse wdCollapseStart</span><br><span class="line">oRange.<span class="keyword">Select</span></span><br><span class="line"><span class="keyword">For</span> nIndex = <span class="number">1</span> <span class="keyword">To</span> nTotalPages <span class="keyword">Step</span> nSteps</span><br><span class="line"><span class="keyword">Set</span> oNewDoc = Documents.Add</span><br><span class="line"><span class="keyword">If</span> nIndex + nSteps &gt; nTotalPages <span class="keyword">Then</span></span><br><span class="line">nBound = nTotalPages</span><br><span class="line"><span class="keyword">Else</span></span><br><span class="line">nBound = nIndex + nSteps - <span class="number">1</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line"><span class="keyword">For</span> nSubIndex = nIndex <span class="keyword">To</span> nBound</span><br><span class="line">oSrcDoc.Activate</span><br><span class="line">oSrcDoc.Bookmarks(<span class="string">&quot;\page&quot;</span>).Range.Copy</span><br><span class="line">oSrcDoc.Windows(<span class="number">1</span>).Activate</span><br><span class="line">Application.Browser.Target = wdBrowsePage</span><br><span class="line">Application.Browser.<span class="keyword">Next</span></span><br><span class="line"></span><br><span class="line">oNewDoc.Activate</span><br><span class="line">oNewDoc.Windows(<span class="number">1</span>).Selection.Paste</span><br><span class="line"><span class="keyword">Next</span> nSubIndex</span><br><span class="line">strSrcName = oSrcDoc.FullName</span><br><span class="line">strNewName = fso.BuildPath(fso.GetParentFolderName(strSrcName), _</span><br><span class="line">fso.GetBaseName(strSrcName) &amp; <span class="string">&quot;_&quot;</span> &amp; (nIndex \ nSteps) &amp; <span class="string">&quot;.&quot;</span> &amp; fso.GetExtensionName(strSrcName))</span><br><span class="line">oNewDoc.SaveAs strNewName</span><br><span class="line">oNewDoc.Close <span class="literal">False</span></span><br><span class="line"><span class="keyword">Next</span> nIndex</span><br><span class="line"><span class="keyword">Set</span> oNewDoc = <span class="literal">Nothing</span></span><br><span class="line"><span class="keyword">Set</span> oRange = <span class="literal">Nothing</span></span><br><span class="line"><span class="keyword">Set</span> oSrcDoc = <span class="literal">Nothing</span></span><br><span class="line"><span class="keyword">Set</span> fso = <span class="literal">Nothing</span></span><br><span class="line">MsgBox <span class="string">&quot;结束!&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="翻译出来文件不可编辑"><a href="#翻译出来文件不可编辑" class="headerlink" title="翻译出来文件不可编辑"></a>翻译出来文件不可编辑</h1><p>将文档另存为.xml文档，然后右键用记事本打开，CTRL+F查找：<code>&lt;w:documentProtection</code>，找到之后删除这一段完整标签 &lt; &gt; ，保存，之后修改文档后缀名为.doc，打开之后发现文档已经可以编辑了。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">w:documentProtection</span> <span class="attr">w:edit</span>=<span class="string">&quot;forms&quot;</span> <span class="attr">w:enforcement</span>=<span class="string">&quot;1&quot;</span> <span class="attr">w:cryptProviderType</span>=<span class="string">&quot;rsaAES&quot;</span> <span class="attr">w:cryptAlgorithmClass</span>=<span class="string">&quot;hash&quot;</span> <span class="attr">w:cryptAlgorithmType</span>=<span class="string">&quot;typeAny&quot;</span> <span class="attr">w:cryptAlgorithmSid</span>=<span class="string">&quot;14&quot;</span> <span class="attr">w:cryptSpinCount</span>=<span class="string">&quot;100000&quot;</span> <span class="attr">w:hash</span>=<span class="string">&quot;S79jzJM0xL7GnRcEC0X1FCE/DBXGpxs3zcZJaJTCcoNe++VSe6jxAJ0kOHl4af451iLGf2hKTU5p6bMCYzjnBw==&quot;</span> <span class="attr">w:salt</span>=<span class="string">&quot;2iM+6JOs+2kf63xprp4ohQ==&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><h1 id="DeepL破解失效"><a href="#DeepL破解失效" class="headerlink" title="DeepL破解失效"></a>DeepL破解失效</h1><p>查找：<code>C:\Users\windows11\AppData\Local\DeepL</code><br>文件夹下删除多余的app然后删除update<br>使用该文件夹下的exe进行打开</p><h1 id="DeepL提示翻译文件上限"><a href="#DeepL提示翻译文件上限" class="headerlink" title="DeepL提示翻译文件上限"></a>DeepL提示翻译文件上限</h1><p>重新安装破解 免费用户四篇</p>]]></content>
    
    
    <summary type="html">DeepL翻译技巧</summary>
    
    
    
    <category term="软件" scheme="http://hibiscidai.com/categories/%E8%BD%AF%E4%BB%B6/"/>
    
    
    <category term="软件" scheme="http://hibiscidai.com/tags/%E8%BD%AF%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>CIFLog3二次开发Java接口说明</title>
    <link href="http://hibiscidai.com/2023/10/30/CIFLog3%E4%BA%8C%E6%AC%A1%E5%BC%80%E5%8F%91Java%E6%8E%A5%E5%8F%A3%E8%AF%B4%E6%98%8E/"/>
    <id>http://hibiscidai.com/2023/10/30/CIFLog3%E4%BA%8C%E6%AC%A1%E5%BC%80%E5%8F%91Java%E6%8E%A5%E5%8F%A3%E8%AF%B4%E6%98%8E/</id>
    <published>2023-10-30T03:00:00.000Z</published>
    <updated>2023-10-30T07:37:57.000Z</updated>
    
    <content type="html"><![CDATA[<img src="/2023/10/30/CIFLog3%E4%BA%8C%E6%AC%A1%E5%BC%80%E5%8F%91Java%E6%8E%A5%E5%8F%A3%E8%AF%B4%E6%98%8E/CIFLog3%E4%BA%8C%E6%AC%A1%E5%BC%80%E5%8F%91Java%E6%8E%A5%E5%8F%A3%E8%AF%B4%E6%98%8E.png" class="" title="CIFLog3二次开发Java接口说明"><p>CIFLog3二次开发Java接口说明</p><span id="more"></span><p>[TOC]</p><h1 id="CIFLog3二次开发Java接口说明"><a href="#CIFLog3二次开发Java接口说明" class="headerlink" title="CIFLog3二次开发Java接口说明"></a>CIFLog3二次开发Java接口说明</h1><p>程序挂接路径：<code>...\CIFLog\platformResource_CN\appModule</code><br>cif包路径：<code>...CIFLog\ciflog\modules\</code></p><h1 id="Java基础数据访问接口"><a href="#Java基础数据访问接口" class="headerlink" title="Java基础数据访问接口"></a>Java基础数据访问接口</h1><h2 id="DataServiceBasicIO接口"><a href="#DataServiceBasicIO接口" class="headerlink" title="DataServiceBasicIO接口"></a>DataServiceBasicIO接口</h2><div class="table-container"><table><thead><tr><th style="text-align:left">接口函数</th><th style="text-align:center">用途</th></tr></thead><tbody><tr><td style="text-align:left">changeCurveDepthRange</td><td style="text-align:center">修改曲线深度区间</td></tr><tr><td style="text-align:left">closeCifp</td><td style="text-align:center">关闭井次文件</td></tr><tr><td style="text-align:left">copyCuve</td><td style="text-align:center">同井次间拷贝曲线</td></tr><tr><td style="text-align:left">copyTable</td><td style="text-align:center">不同井次间拷贝表格</td></tr><tr><td style="text-align:left">ereateCip</td><td style="text-align:center">创建井次文件</td></tr><tr><td style="text-align:left">ereateCure(categoryID, curveName, arrayNum, arraySize, startDepth, sampleCount, depthLevel, dataType, curveUnit)</td><td style="text-align:center">创建曲线</td></tr><tr><td style="text-align:left">createCure(categoryID, curveNane, arayNum, arnySixe, startDeph, sampleCoumu, dephLevel, dataType, curveUnit, isClean-ingData)</td><td style="text-align:center">创建曲线( 是否初始化曲线数据)</td></tr><tr><td style="text-align:left">ereateDocunent(int categoryID, String docName, int isOverwriten)</td><td style="text-align:center">创建空的二进制文档</td></tr><tr><td style="text-align:left">createDocument(int caltegoryID, String docName, String srcFilPath, int isOverwritten)</td><td style="text-align:center">创建二进制文档</td></tr><tr><td style="text-align:left">cretaTable</td><td style="text-align:center">创建表格</td></tr><tr><td style="text-align:left">createWell</td><td style="text-align:center">创建井文件</td></tr><tr><td style="text-align:left">deleteCurve</td><td style="text-align:center">删除曲线</td></tr><tr><td style="text-align:left">dispatchNotifcation</td><td style="text-align:center">分发数据更新消息</td></tr><tr><td style="text-align:left">flush</td><td style="text-align:center">刷新单条曲线缓存数据</td></tr><tr><td style="text-align:left">flushAll</td><td style="text-align:center">刷新所有曲线缓存数据</td></tr><tr><td style="text-align:left">getCategoryDepthUnit</td><td style="text-align:center">获得井次深度单位</td></tr><tr><td style="text-align:left">getCurentWorkDir</td><td style="text-align:center">获取当前工作目录</td></tr><tr><td style="text-align:left">getCurve1DCount</td><td style="text-align:center">获得井次文件中一维曲线条数</td></tr><tr><td style="text-align:left">getCurve1DName</td><td style="text-align:center">获得指定下标的一维曲线名称</td></tr><tr><td style="text-align:left">getCuve2DCount</td><td style="text-align:center">获得井次文件中二维曲线条数</td></tr><tr><td style="text-align:left">getCurve2DName</td><td style="text-align:center">获得指定下标的二维曲线名称</td></tr><tr><td style="text-align:left">getCurve3DCount</td><td style="text-align:center">获得井次文件中三维曲线条数</td></tr><tr><td style="text-align:left">getCurve3DName</td><td style="text-align:center">获得指定下标的三维曲线名称</td></tr><tr><td style="text-align:left">getCurveArrayNum</td><td style="text-align:center">获取曲线阵列数</td></tr><tr><td style="text-align:left">getCurveArraySize</td><td style="text-align:center">获取曲线阵列大小</td></tr><tr><td style="text-align:left">getCurveDepthLevel</td><td style="text-align:center">获取曲线采样间隔</td></tr><tr><td style="text-align:left">getCurveDepthUnit</td><td style="text-align:center">获取曲线深度单位</td></tr><tr><td style="text-align:left">getCurveDimension</td><td style="text-align:center">获取曲线维数</td></tr><tr><td style="text-align:left">gelCurveEndDepth</td><td style="text-align:center">获取曲线结束深度</td></tr><tr><td style="text-align:left">gelCurveStartDepth</td><td style="text-align:center">获取曲线开始深度</td></tr><tr><td style="text-align:left">getCurveUnit</td><td style="text-align:center">获取曲线单位</td></tr><tr><td style="text-align:left">getMainProjectPath</td><td style="text-align:center">获取系统当前主项目目录</td></tr><tr><td style="text-align:left">getSysIstallationPath</td><td style="text-align:center">获取系统安装目录</td></tr><tr><td style="text-align:left">getSysResourcePath</td><td style="text-align:center">获得系统资源目录</td></tr><tr><td style="text-align:left">getTableColumnCount</td><td style="text-align:center">获取表格列数</td></tr><tr><td style="text-align:left">getTableRowCount</td><td style="text-align:center">获取表格行数</td></tr><tr><td style="text-align:left">getWellPropertiesltemValue</td><td style="text-align:center">获取井次中的井属性</td></tr><tr><td style="text-align:left">isCategoryExisted</td><td style="text-align:center">判断井次是否存在</td></tr><tr><td style="text-align:left">isCurveExisted</td><td style="text-align:center">断曲线是否存在</td></tr><tr><td style="text-align:left">openCifp</td><td style="text-align:center">打开井次文件,获得井次ID号</td></tr><tr><td style="text-align:left">readCurve1D(categoryID, curveName, startDepth, dataCount, buffer)</td><td style="text-align:center">读一维曲线数据</td></tr><tr><td style="text-align:left">readCurve1D(categoryID, curveName, startDepth, depthLevel, dataCount, buffer)</td><td style="text-align:center">按指定的深度采样间隔读一维曲线数据</td></tr><tr><td style="text-align:left">readCurve1D(categoryID, curveName, startDepth, upwardCount, downWardCount，buffer)</td><td style="text-align:center">按前后点方式读一维曲线数据</td></tr><tr><td style="text-align:left">readCurve2D(categoryID, curveName, startDepth, dataCount, arraySize, buffer)</td><td style="text-align:center">读二维曲线数据</td></tr><tr><td style="text-align:left">readCurve2D(categoryID, curveName, startDepth, upwardCount, downWardCount, araySize, buffer)</td><td style="text-align:center">按前后点方式读二维曲线数据</td></tr><tr><td style="text-align:left">readCurve3D(categoryID, curveName, arrayIndex, startDepth, dataCount, araySize, buffer)</td><td style="text-align:center">读三维曲线数据</td></tr><tr><td style="text-align:left">readCurve3D(categoryID, curveName, arrayIndex, startDepth, upwardCount, downWardCount, arraySize, buffer)</td><td style="text-align:center">按前后点方式读三维曲线数据</td></tr><tr><td style="text-align:left">readDocument</td><td style="text-align:center">读文档保存至本地磁盘上的指定文件中</td></tr><tr><td style="text-align:left">readTable(int categoryID, String tableName, int rowIndex, float[] buffer)</td><td style="text-align:center">读表格记录</td></tr><tr><td style="text-align:left">readTable( int categoryID, String tableName, int rowIndex, String[] buffer)</td><td style="text-align:center">读表格记录</td></tr><tr><td style="text-align:left">removeTableAllRecords</td><td style="text-align:center">删除表格所有记录</td></tr><tr><td style="text-align:left">setCurveDepthLevel</td><td style="text-align:center">设置曲线深度采样间隔</td></tr><tr><td style="text-align:left">setCurveInterpolation</td><td style="text-align:center">设置曲线插值方式</td></tr><tr><td style="text-align:left">setWellropertiesItemValue</td><td style="text-align:center">设置井次中的井属性</td></tr><tr><td style="text-align:left">spliceFilePath</td><td style="text-align:center">拼接文件路径</td></tr><tr><td style="text-align:left">writeCurve1D</td><td style="text-align:center">写一维曲线数据</td></tr><tr><td style="text-align:left">writeCurve2D</td><td style="text-align:center">写二维曲线数据</td></tr><tr><td style="text-align:left">writeCurve3D</td><td style="text-align:center">写三维曲线数据</td></tr><tr><td style="text-align:left">writeDocument</td><td style="text-align:center">写二进制文档</td></tr><tr><td style="text-align:left">writeTable(int categoryID, String tableName, int rowIndex, float[] buffer)</td><td style="text-align:center">写表格记录</td></tr><tr><td style="text-align:left">writeTable(int categoryID, String tableName, int rowIndex, String[] buffer)</td><td style="text-align:center">写表格记录</td></tr></tbody></table></div><h2 id="DataServiceAssistIO接口"><a href="#DataServiceAssistIO接口" class="headerlink" title="DataServiceAssistIO接口"></a>DataServiceAssistIO接口</h2><div class="table-container"><table><thead><tr><th style="text-align:center">接口函数</th><th style="text-align:center">用途</th></tr></thead><tbody><tr><td style="text-align:center">getCategoryCount</td><td style="text-align:center">获取井次个数</td></tr><tr><td style="text-align:center">getCalegoryName</td><td style="text-align:center">获取井次名称</td></tr><tr><td style="text-align:center">getLogCurveCount</td><td style="text-align:center">获取曲线个数</td></tr><tr><td style="text-align:center">getLogCurveName</td><td style="text-align:center">获取曲线名称</td></tr><tr><td style="text-align:center">getLogDocCount</td><td style="text-align:center">获取文档个数</td></tr><tr><td style="text-align:center">getLogDocName</td><td style="text-align:center">获取文档名称</td></tr><tr><td style="text-align:center">getLogTableCount</td><td style="text-align:center">获取表格个数</td></tr><tr><td style="text-align:center">getLogTableName</td><td style="text-align:center">获取表格名称</td></tr><tr><td style="text-align:center">getWellCount</td><td style="text-align:center">获取井个数</td></tr><tr><td style="text-align:center">getWellName</td><td style="text-align:center">获取井名称</td></tr><tr><td style="text-align:center">getWorkSpaceCount</td><td style="text-align:center">获取工区个数</td></tr><tr><td style="text-align:center">getWorkSpaceName</td><td style="text-align:center">获取工区名称</td></tr><tr><td style="text-align:center">openDataSource</td><td style="text-align:center">打开数据源,获取数据源ID号</td></tr></tbody></table></div><h2 id="DataServiceIntegratedIO接口"><a href="#DataServiceIntegratedIO接口" class="headerlink" title="DataServiceIntegratedIO接口"></a>DataServiceIntegratedIO接口</h2><div class="table-container"><table><thead><tr><th style="text-align:center">接口函数</th><th style="text-align:center">用途</th></tr></thead><tbody><tr><td style="text-align:center">dataChangedNotification</td><td style="text-align:center">分发更新数据消息</td></tr><tr><td style="text-align:center">flushData</td><td style="text-align:center">刷新缓存中的数据</td></tr><tr><td style="text-align:center">getDEP</td><td style="text-align:center">获取当前曲线数据的输人深度</td></tr><tr><td style="text-align:center">getDEPO</td><td style="text-align:center">获取当前曲线数据的输出深度</td></tr><tr><td style="text-align:center">getEDEP</td><td style="text-align:center">获取当前处理层段的结束深度</td></tr><tr><td style="text-align:center">getENDEP</td><td style="text-align:center">获取处理井段的结束深度</td></tr><tr><td style="text-align:center">getErrorMessage</td><td style="text-align:center">获取错误信息</td></tr><tr><td style="text-align:center">getInDataCount</td><td style="text-align:center">获取一次读人的数据个数</td></tr><tr><td style="text-align:center">getInputCategoryDepthUnit</td><td style="text-align:center">获得处理井文件的深度单位</td></tr><tr><td style="text-align:center">getInputCurveValue(int index, double startDepth, int dataCount, float[] values)</td><td style="text-align:center">获取指定曲线的处理层段所有值, cifsun接口使用</td></tr><tr><td style="text-align:center">getInputCurveValues(double currentDep, float[] values)</td><td style="text-align:center">读入当前深度，点的每条输入曲线值</td></tr><tr><td style="text-align:center">getOutDataCount</td><td style="text-align:center">获取一次写人的数据个数</td></tr><tr><td style="text-align:center">getParameterValues</td><td style="text-align:center">获取当前处理层段的参数</td></tr><tr><td style="text-align:center">getRLEV</td><td style="text-align:center">获取处理井段的采样间隔</td></tr><tr><td style="text-align:center">getRLEVO</td><td style="text-align:center">获得输出曲线处理井段的采样间隔</td></tr><tr><td style="text-align:center">getRedirectionInputCurveName</td><td style="text-align:center">获得重定向输人曲线名称</td></tr><tr><td style="text-align:center">getRedirectionOutputCurveName</td><td style="text-align:center">获得重定向输出曲线名称</td></tr><tr><td style="text-align:center">getSDEP</td><td style="text-align:center">获取当前处理层段的起始深度</td></tr><tr><td style="text-align:center">getSTDEP</td><td style="text-align:center">获取处理井段的起始深度</td></tr><tr><td style="text-align:center">readInpFile</td><td style="text-align:center">解析参数卡片</td></tr><tr><td style="text-align:center">setCifpPath</td><td style="text-align:center">设置处理cifp文件路径</td></tr><tr><td style="text-align:center">setInArrayCurve</td><td style="text-align:center">设置输人的阵列曲线</td></tr><tr><td style="text-align:center">setInpFilePath</td><td style="text-align:center">设置参数卡片的路径</td></tr><tr><td style="text-align:center">setInputCurveNames</td><td style="text-align:center">设置初始的输人曲线名</td></tr><tr><td style="text-align:center">setInterpolation</td><td style="text-align:center">设置曲线的插值方式</td></tr><tr><td style="text-align:center">setNextDepthRangeDepths</td><td style="text-align:center">设置下一个处理层段相关值,到达处理层段末尾时不处理</td></tr><tr><td style="text-align:center">setOutArrayCurve</td><td style="text-align:center">设置输出的阵列曲线</td></tr><tr><td style="text-align:center">setOuputCifpPath</td><td style="text-align:center">设置输出cifp文件</td></tr><tr><td style="text-align:center">setOutputCurveNames</td><td style="text-align:center">设置初始的输出曲线名</td></tr><tr><td style="text-align:center">setOutputCurveUnit</td><td style="text-align:center">设置输出曲线单位</td></tr><tr><td style="text-align:center">setOutputCurveValues</td><td style="text-align:center">写人当前深度点的每条输出曲线值</td></tr><tr><td style="text-align:center">setOutputDepthLevel</td><td style="text-align:center">设置输出曲线处理层段的采样间隔</td></tr><tr><td style="text-align:center">setParameterNames</td><td style="text-align:center">设置初始的处理参数名</td></tr><tr><td style="text-align:center">setZero</td><td style="text-align:center">创建新曲线时是否将曲线值初始化为零</td></tr></tbody></table></div><h1 id="符合函数使用示例"><a href="#符合函数使用示例" class="headerlink" title="符合函数使用示例"></a>符合函数使用示例</h1><h2 id="计算POR"><a href="#计算POR" class="headerlink" title="计算POR"></a>计算POR</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cif.dataservice.io.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">POR</span> <span class="keyword">extends</span> <span class="title class_">JavaBaseTemplate</span> &#123;</span><br><span class="line">    <span class="comment">//&#123; &#123; variableDefination</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">float</span> AC;<span class="comment">//输人曲线</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">float</span> <span class="variable">DTma</span> <span class="operator">=</span> <span class="number">0</span>;<span class="comment">//处理参数</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">float</span> <span class="variable">DTf</span> <span class="operator">=</span> <span class="number">0</span>;<span class="comment">//处理参数</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">float</span> <span class="variable">B</span> <span class="operator">=</span> <span class="number">0</span>;<span class="comment">//处理参数</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">float</span> <span class="variable">Flag</span> <span class="operator">=</span> <span class="number">0</span>;<span class="comment">//处理参数</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">float</span> POR;<span class="comment">//输出曲线</span></span><br><span class="line">    <span class="comment">//&#125; &#125; variableDefination .</span></span><br><span class="line">    <span class="type">float</span>[] inValues;<span class="comment">//一次读 人的输人曲线数据</span></span><br><span class="line">    <span class="type">float</span>[] outValues;<span class="comment">//- -次写出的输出曲线数据</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">inhead</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="comment">//&#123; &#123; initDefination</span></span><br><span class="line">        NAMEI = <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot; AC&quot;</span>&#125;;<span class="comment">//输人曲线名称列表</span></span><br><span class="line">        NAMEC = <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot; DTma&quot;</span>, <span class="string">&quot;DTf&quot;</span>, <span class="string">&quot; B&quot;</span>, <span class="string">&quot; Flag&quot;</span>&#125;;<span class="comment">//处理参数名称列表</span></span><br><span class="line">        NAMEO = <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot; POR&quot;</span>&#125;;<span class="comment">//输出曲线名称列表</span></span><br><span class="line">        params = <span class="keyword">new</span> <span class="title class_">float</span>[<span class="number">4</span>];<span class="comment">//- -次读人的所有处理参数值</span></span><br><span class="line"><span class="comment">//&#125; &#125; initDefination</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">process</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        inhead();<span class="comment">//程序初始化</span></span><br><span class="line">        <span class="comment">//读入输人曲线或输出曲线的重定向,确定处理井段</span></span><br><span class="line">        <span class="type">boolean</span> <span class="variable">returmCode</span> <span class="operator">=</span> parame(args[<span class="number">0</span>], arygs[<span class="number">1</span>]);</span><br><span class="line">        <span class="keyword">if</span> (!retunCode) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> (DEP &lt;= ENDEP) &#123;<span class="comment">//循环主体</span></span><br><span class="line">            <span class="keyword">if</span> (DEP &gt;= EDEP) &#123;</span><br><span class="line">                vparame();</span><br><span class="line">            &#125;<span class="comment">//转换下一层段参数</span></span><br><span class="line">            indata();<span class="comment">//读DEP深度点上的输人曲线数据</span></span><br><span class="line">            <span class="comment">//以下为用户算法</span></span><br><span class="line">            <span class="comment">//&#123; &#123; userCodes</span></span><br><span class="line">            <span class="keyword">switch</span> ((<span class="type">int</span>) Flag) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                    POR = (AC - DTma) / (DTf - DTma);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                    POR = <span class="number">1</span> - (<span class="type">float</span>) Math.pow(DTma / AC, <span class="number">1</span> / B);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    POR = (AC - DTma) / (DTf - DTma);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (POR &lt; <span class="number">0</span>) POR = <span class="number">0</span>;</span><br><span class="line"><span class="comment">//&#125; &#125; userCodes</span></span><br><span class="line"><span class="comment">//以上为用户算法</span></span><br><span class="line">            outdata();<span class="comment">//写DEPO深度点上的输出曲线数据</span></span><br><span class="line">        &#125;</span><br><span class="line">        outhead();<span class="comment">//发送数据更新消息并关闭数据文件</span></span><br><span class="line">        <span class="keyword">return</span> returnCode;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//打开数据文件及参数文件,读人要重定向的输人曲线或输出曲线及参数卡</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> <span class="title function_">parame</span><span class="params">(String wellPath, String inpFilePath)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (!baseParame(wellPath, inpFilePath)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        inValues = <span class="keyword">new</span> <span class="title class_">float</span>[indataCount];</span><br><span class="line">        outValues = <span class="keyword">new</span> <span class="title class_">float</span>[outdataCount]; .</span><br><span class="line"><span class="comment">//Get the parameters of the first disposal layer</span></span><br><span class="line"><span class="comment">//&#123; &#123;functionParame</span></span><br><span class="line">        io.getParameterValues(params);</span><br><span class="line">        DTma = params[<span class="number">0</span>];</span><br><span class="line">        DTf = params[<span class="number">1</span>];</span><br><span class="line">        B = params[<span class="number">2</span>];</span><br><span class="line">        Flag = params[<span class="number">3</span>];</span><br><span class="line"><span class="comment">//&#125; &#125; functionParame</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"><span class="comment">//读人下一井段处理参数</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> <span class="title function_">vparame</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (!baseVParame()) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">//Get the parameters of the next disposal layer</span></span><br><span class="line"><span class="comment">//&#123; &#123;functionVParame</span></span><br><span class="line">        io.getParameterV <span class="title function_">alues</span> <span class="params">(params)</span>;</span><br><span class="line">        DTma = params[<span class="number">0</span>];</span><br><span class="line">        DTf = params[<span class="number">1</span>];</span><br><span class="line">        B = params[<span class="number">2</span>];</span><br><span class="line">        Flag = params[<span class="number">3</span>];</span><br><span class="line"><span class="comment">//&#125; &#125; functionVParame</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"><span class="comment">//读人由DEP指定的曲线数据</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">indata</span><span class="params">()</span> &#123;</span><br><span class="line">        DEP = RLEV * depIndex + SDEP;</span><br><span class="line">        io.getInputCurveValues(DEP, inValues);</span><br><span class="line"><span class="comment">//&#123; &#123;functionInData</span></span><br><span class="line">        AC = inValues[<span class="number">0</span>];</span><br><span class="line"><span class="comment">//&#125;&#123; &#125;functionInData</span></span><br><span class="line">        depIndex++;</span><br><span class="line"><span class="comment">//读人由DEP指定的曲线数据</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">outdata</span><span class="params">()</span> &#123;</span><br><span class="line">        DEPO = RLEV * depoIndex + SDEP;</span><br><span class="line"><span class="comment">//&#123; &#123;functionOutData</span></span><br><span class="line">        outValues[<span class="number">0</span>] = POR;</span><br><span class="line"><span class="comment">//&#125;&#123; &#125;functionOutData</span></span><br><span class="line">        io.setOutputCurveValues(DEPO, outValues);</span><br><span class="line">        depoIndex++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">POR</span> <span class="variable">processer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">POR</span>();</span><br><span class="line">        <span class="keyword">if</span> (!processer.process(args)) &#123;</span><br><span class="line">            System.out.print(<span class="string">&quot;处理失败!&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.print(<span class="string">&quot;处理完毕!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="多维曲线读写"><a href="#多维曲线读写" class="headerlink" title="多维曲线读写"></a>多维曲线读写</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cif.dataservice.io.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">POR</span> <span class="keyword">extends</span> <span class="title class_">JavaBaseTemplate</span> &#123;</span><br><span class="line">    <span class="comment">//&#123; &#123;variableDefination</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">float</span> X3;<span class="comment">//输人曲线</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">float</span>[] X1 = <span class="keyword">new</span> <span class="title class_">float</span>[<span class="number">1</span> * <span class="number">500</span>];<span class="comment">//输人曲线</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">float</span>[] X2 = <span class="keyword">new</span> <span class="title class_">float</span>[<span class="number">3</span> * <span class="number">500</span>];<span class="comment">//输人曲线</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">float</span> Y3;<span class="comment">//输出曲线</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">float</span>[] Y1 = <span class="keyword">new</span> <span class="title class_">float</span>[<span class="number">1</span> * <span class="number">500</span>];<span class="comment">//输出曲线</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">float</span>[] Y2 = <span class="keyword">new</span> <span class="title class_">float</span>[<span class="number">3</span> * <span class="number">500</span>];<span class="comment">//输出曲线</span></span><br><span class="line">    <span class="comment">//&#125; &#125; variableDefination</span></span><br><span class="line">    <span class="type">float</span>[] inValues;<span class="comment">//- -次读人的输人曲线数据</span></span><br><span class="line">    <span class="type">float</span>[] outValues;<span class="comment">//- -次写出的输出曲线数据</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">inhead</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="comment">//&#123; &#123; initDefination</span></span><br><span class="line">        NAMEI = <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;X1&quot;</span>, <span class="string">&quot;X2&quot;</span>, <span class="string">&quot;X3&quot;</span>&#125;;<span class="comment">//输入曲线名称列表</span></span><br><span class="line">        NAMEC = <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;&#125;;<span class="comment">//处理参数名称列表</span></span><br><span class="line">        NAMEO = <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;Y1&quot;</span>, <span class="string">&quot; Y2&quot;</span>, <span class="string">&quot;Y3&quot;</span>&#125;;<span class="comment">//输出曲线名称列表</span></span><br><span class="line">        params = <span class="keyword">new</span> <span class="title class_">float</span>[<span class="number">0</span>];<span class="comment">//-次读人的所有处理参数值</span></span><br><span class="line"><span class="comment">//&#125; &#125; initDefination</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">process</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        inhead();<span class="comment">//程序初始化</span></span><br><span class="line">        <span class="type">boolean</span> <span class="variable">returmCode</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line"><span class="comment">//&#123;&#123; processCodes</span></span><br><span class="line">        <span class="comment">/*调用PARAME函数之前,设置输人、输出阵列曲线的阵列参数*/</span></span><br><span class="line"><span class="comment">//(X1,1 ,500)表示输人曲线X1为一-阵列大小为500的二维阵列曲线</span></span><br><span class="line"><span class="comment">//(X2 ,3 ,500)表示输人曲线X2为一阵列大小为3 * 500的三维阵列曲线</span></span><br><span class="line">        io.setInArayCurve(<span class="string">&quot;X1,1 ,500;X2 ,3 ,500&quot;</span>);</span><br><span class="line"><span class="comment">//(Y1,1 ,500)表示输出曲线Y1为一-阵列大小为500的二维阵列曲线</span></span><br><span class="line"><span class="comment">//(Y2 ,3 ,500)表示输出曲线Y2为一-阵列大小为3 * 500的三维阵列曲线</span></span><br><span class="line">        io.setOutArrayCurve(<span class="string">&quot; Y1,1 ,500;Y2,3 ,500&quot;</span>);</span><br><span class="line"><span class="comment">//(Y1,n)表示输出曲线Y1的单位为in.</span></span><br><span class="line">        io.setOutputCurveUnit(<span class="string">&quot; Y1 ,in; Y2, ppm;Y3, %&quot;</span>);</span><br><span class="line"><span class="comment">//&#125; &#125; processCodes</span></span><br><span class="line"><span class="comment">//读人输人曲线或输出曲线的重定向,确定处理井段</span></span><br><span class="line">        returnCode = parame(args[<span class="number">0</span>], args[<span class="number">1</span>]);</span><br><span class="line">        <span class="keyword">if</span> (!returmCode) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> (DEP &lt;= ENDEP) &#123;<span class="comment">//循环主体</span></span><br><span class="line">            <span class="keyword">if</span> (DEP &gt;= EDEP) &#123;</span><br><span class="line">                vparame();</span><br><span class="line">            &#125;<span class="comment">//转换下一层段参数</span></span><br><span class="line">            indata();<span class="comment">//读DEP深度点上的输人曲线数据</span></span><br><span class="line"><span class="comment">//&#123; &#123; userCodes</span></span><br><span class="line"><span class="comment">//以下为用户算法</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">500</span>; i++) &#123;</span><br><span class="line">                Y1[i] = X1[i];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">3</span> * <span class="number">500</span>; i++) &#123;</span><br><span class="line">                Y2[i] = X2[i];</span><br><span class="line">            &#125;</span><br><span class="line">            Y3 = X3;</span><br><span class="line"><span class="comment">//以上为用户算法</span></span><br><span class="line"><span class="comment">//&#125; &#125; userCodes</span></span><br><span class="line">            outdata();<span class="comment">//写DEPO深度点上的输出曲线数据</span></span><br><span class="line">        &#125;</span><br><span class="line">        outhead();<span class="comment">//发送数据更新消息并关闭数据文件</span></span><br><span class="line">        <span class="keyword">return</span> returmCode;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//打开数据文件及参数文件,读人要重定向的输人曲线或输出曲线及参数卡</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> <span class="title function_">parame</span><span class="params">(String wellPath, String inpFilePath)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (!baseParame(wellPath, inpFilePath)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        inValues = <span class="keyword">new</span> <span class="title class_">float</span>[indataCount];</span><br><span class="line">        outValues = <span class="keyword">new</span> <span class="title class_">float</span>[outdataCount];</span><br><span class="line"><span class="comment">//&#123; &#123;functionParame</span></span><br><span class="line">        io.getParameterValues(params);</span><br><span class="line"><span class="comment">//&#125; &#125; functionParame</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"><span class="comment">//读人下一井段处理参数</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> <span class="title function_">vparame</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (!baseVParame()) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">//Get the parameters of the next disposal layer</span></span><br><span class="line"><span class="comment">//&#123; &#123;functionVParame</span></span><br><span class="line">        io.getParameterValues(params);</span><br><span class="line"><span class="comment">//&#125; &#125; functionVParame</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"><span class="comment">//读人由DEP指定的曲线数据</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">indata</span><span class="params">()</span> &#123;</span><br><span class="line">        DEP = RLEV * depIndex + SDEP;</span><br><span class="line">        io.getInputCurveValues(DEP, inValues);</span><br><span class="line"><span class="comment">//&#123; &#123;functionInData</span></span><br><span class="line">        System.arraycopy(inValues, <span class="number">0</span>, X1, <span class="number">0</span>, <span class="number">500</span>);</span><br><span class="line">        System.arraycopy(inValues，<span class="number">500</span>, X2, <span class="number">0</span>, <span class="number">1500</span>);</span><br><span class="line">        X3 = inValues[<span class="number">2000</span>];</span><br><span class="line"><span class="comment">//&#125; &#125; functionInData</span></span><br><span class="line">        depIndex++;</span><br><span class="line"><span class="comment">//输出由DEPO深度点指定的曲线数据</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">outdata</span><span class="params">()</span> &#123;</span><br><span class="line">        DEPO = RLEV * depoIndex + SDEP;</span><br><span class="line"><span class="comment">//&#123; &#123;functionOutData</span></span><br><span class="line">        System.arraycopy(Y1, <span class="number">0</span>, outValues, <span class="number">0</span>, <span class="number">500</span>);</span><br><span class="line">        System.arraycopy(Y2, <span class="number">0</span>, outValues, <span class="number">500</span>, <span class="number">1500</span>);</span><br><span class="line">        outValues[<span class="number">1000</span>] = Y3;</span><br><span class="line"><span class="comment">//&#125; &#125; functionOutData</span></span><br><span class="line">        io.setOutputCurveV <span class="title function_">alues</span> <span class="params">(DEPO, outValues)</span>;</span><br><span class="line">        depoIndex++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">POR</span> <span class="variable">processer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">POR</span>();</span><br><span class="line">        <span class="keyword">if</span> (!processer.process(args)) &#123;</span><br><span class="line">            System.out.print(<span class="string">&quot;处理失败!&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.print(<span class="string">&quot;处理完毕!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="输入曲线、输出曲线来自不同的井次文件"><a href="#输入曲线、输出曲线来自不同的井次文件" class="headerlink" title="输入曲线、输出曲线来自不同的井次文件"></a>输入曲线、输出曲线来自不同的井次文件</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cif.dataservice.io.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">POR</span> <span class="keyword">extends</span> <span class="title class_">JavaBaseTemplate</span> &#123;</span><br><span class="line">    <span class="comment">//&#123;&#123;variableDefination</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">float</span> CAL;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">float</span> <span class="variable">BITS</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">float</span> CALC;</span><br><span class="line">    <span class="comment">//&#125; &#125; variableDefination</span></span><br><span class="line">    <span class="type">float</span>[] inValues;<span class="comment">//一次读人的输人曲线数据</span></span><br><span class="line">    <span class="type">float</span>[] outValues;<span class="comment">//一次写出的输出曲线数据</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">inhead</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//&#123; &#123; initDefination</span></span><br><span class="line">        NAMEI = <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;CAL&quot;</span>&#125;;<span class="comment">//输入曲线名称列表</span></span><br><span class="line">        NAMEC = <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot; BITS&quot;</span>&#125;;<span class="comment">//处理参数名称列表</span></span><br><span class="line">        NAMEO = <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;CALC&quot;</span>&#125;;<span class="comment">//输出曲线名称列表</span></span><br><span class="line">        params = <span class="keyword">new</span> <span class="title class_">float</span>[<span class="number">1</span>];<span class="comment">//- -次读入的所有处理参数值</span></span><br><span class="line">        <span class="comment">//&#125; &#125; initDefination</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">process</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        inhead();<span class="comment">//程序初始化</span></span><br><span class="line">        <span class="type">boolean</span> <span class="variable">retunCode</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="comment">//设置输出曲线来源</span></span><br><span class="line">        io.setOutputCifpPath(args[<span class="number">2</span>]);</span><br><span class="line">        <span class="comment">//读入输人曲线或输出曲线的重定向，确定处理井段</span></span><br><span class="line">        retumCode = parame(args[<span class="number">0</span>], args[<span class="number">1</span>]);</span><br><span class="line">        <span class="keyword">if</span> (!returmCode) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> (DEP &lt;= ENDEP) &#123;<span class="comment">//循环主体</span></span><br><span class="line">            <span class="keyword">if</span> (DEP &gt;= EDEP) &#123;</span><br><span class="line">                vparame();</span><br><span class="line">            &#125;<span class="comment">//转换下一层段参数</span></span><br><span class="line">            indata();<span class="comment">//读DEP深度点上的输人曲线数据</span></span><br><span class="line">            <span class="comment">//&#123; &#123; userCodes</span></span><br><span class="line">            <span class="comment">//以下为用户算法</span></span><br><span class="line">            CALC = CAL - BITS;</span><br><span class="line">            <span class="comment">//以上为用户算法</span></span><br><span class="line">            <span class="comment">//&#125; &#125; userCodes</span></span><br><span class="line">            outdata();<span class="comment">//写DEPO深度点上的输出曲线数据</span></span><br><span class="line">        &#125;</span><br><span class="line">        outhead();<span class="comment">//发送数据更新消息并关闭数据文件</span></span><br><span class="line">        returm returnCode;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//打开数据文件及参数文件，读人要重定向的输入曲线或输出曲线及参数卡</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> <span class="title function_">parame</span><span class="params">(String wellPath, String inpFilePath)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (!baseParame(wellPath, inpFilePath)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        inValues = <span class="keyword">new</span> <span class="title class_">float</span>[indataCount];</span><br><span class="line">        outValues = <span class="keyword">new</span> <span class="title class_">float</span>[outdataCount];</span><br><span class="line">        <span class="comment">//&#123; &#123; functionParame</span></span><br><span class="line">        io.getParameterValues(params);</span><br><span class="line">        BITS = params[<span class="number">0</span>];</span><br><span class="line">        <span class="comment">//&#125; &#125; functionParame</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//读人下一井段处理参数</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> <span class="title function_">vparame</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (!baseVParame()) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//Get the parameters of the next disposal layer</span></span><br><span class="line">        <span class="comment">//&#123; &#123; functionVParame</span></span><br><span class="line">        io.getParameterValues(params);</span><br><span class="line">        BITS = params[<span class="number">0</span>];</span><br><span class="line">        <span class="comment">//&#125; &#125; functionVParame</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//读入由DEP指定的曲线数据</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">indata</span><span class="params">()</span> &#123;</span><br><span class="line">        DEP = RLEV * depIndex + SDEP;</span><br><span class="line">        io.getInputCurveValues(DEP, inValues);</span><br><span class="line">        <span class="comment">// &#123;&#123; functionInData</span></span><br><span class="line">        CAL = inValues[<span class="number">0</span>];</span><br><span class="line">        <span class="comment">//&#125; &#125; functionInData</span></span><br><span class="line">        depIndex + +;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//输出由DEPO深度点指定的曲线数据</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">outdata</span><span class="params">()</span> &#123;</span><br><span class="line">        DEPO = RLEV * depoIndex + SDEP;</span><br><span class="line">        <span class="comment">// &#123;&#123; functionOutData</span></span><br><span class="line">        outValues[<span class="number">0</span>] = CALC;</span><br><span class="line">        <span class="comment">//&#125; &#125; functionOutData</span></span><br><span class="line">        io.setOutputCurveValues(DEPO, outValues);</span><br><span class="line">        depoIndex++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">POR</span> <span class="variable">processer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">POR</span>();</span><br><span class="line">        <span class="keyword">if</span> (!processer.process(args)) &#123;</span><br><span class="line">            System.out.print(<span class="string">&quot;处理失败!&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.print(<span class="string">&quot;处理完毕!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="设置输入、输出曲线采样间隔"><a href="#设置输入、输出曲线采样间隔" class="headerlink" title="设置输入、输出曲线采样间隔"></a>设置输入、输出曲线采样间隔</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cif.dataservice.io.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">POR</span> <span class="keyword">extends</span> <span class="title class_">JavaBaseTemplate</span> &#123;</span><br><span class="line">    <span class="comment">//&#123; &#123; variableDefination</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">float</span> CAL;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">float</span> <span class="variable">BITS</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">float</span> CALC;</span><br><span class="line">    <span class="comment">//&#125; &#125; variableDefination</span></span><br><span class="line">    <span class="type">float</span>[] inValues;<span class="comment">//-次读入的输人曲线数据</span></span><br><span class="line">    <span class="type">float</span>[] outValues;<span class="comment">//- -次写出的输出曲线数据</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">inhead</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="comment">// &#123;&#123; initDefination</span></span><br><span class="line">        NAMEI = <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;CAL&quot;</span>&#125;;</span><br><span class="line">        NAMEC = <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot; BITS&quot;</span>&#125;;</span><br><span class="line">        NAMEO = <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;CALC&quot;</span>&#125;;</span><br><span class="line">        params = <span class="keyword">new</span> <span class="title class_">float</span>[<span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//&#125; &#125; initDefination</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">process</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        inhead();<span class="comment">//程序初始化</span></span><br><span class="line">        <span class="type">boolean</span> <span class="variable">retumCode</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line"><span class="comment">//设置输入曲线、输出曲线采样间隔</span></span><br><span class="line"><span class="comment">//每次调用INDATA--次,当前深度向下移动0.125</span></span><br><span class="line">        io.setInputDepthLevel(<span class="number">0.</span> <span class="number">125</span>);</span><br><span class="line"><span class="comment">//新建的输出曲线采样间隔统一为0.25</span></span><br><span class="line">        io.setOutputDepthLevel(<span class="number">0.</span> <span class="number">25</span>);</span><br><span class="line"><span class="comment">//读入输入曲线或输出曲线的重定向,确定处理井段</span></span><br><span class="line">        retumCode = parame(args[O], rgs[<span class="number">1</span>]);</span><br><span class="line">        <span class="keyword">if</span> (!returnCode) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> (DEP &lt;= ENDEP) &#123;<span class="comment">//循环主体</span></span><br><span class="line">            <span class="keyword">if</span> (DEP &gt;= EDEP) &#123;</span><br><span class="line">                vparame();</span><br><span class="line">            &#125;<span class="comment">//转换下一层段参数</span></span><br><span class="line">            indata();<span class="comment">//读DEP深度点上的输人曲线数据</span></span><br><span class="line"><span class="comment">//&#123; &#123;userCodes</span></span><br><span class="line"><span class="comment">//以下为用户算法</span></span><br><span class="line">            CALC = CAL - BITS;</span><br><span class="line"><span class="comment">//以上为用户算法</span></span><br><span class="line"><span class="comment">//&#125; &#125; userCodes</span></span><br><span class="line">            outdata();<span class="comment">//写DEPO深度点上的输出曲线数据</span></span><br><span class="line">        &#125;</span><br><span class="line">        outhead();<span class="comment">//发送数据更新消息并关闭数据文件</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> returnCode;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//打开数据文件及参数文件,读入要重定向的输人曲线或输出曲线及参数卡</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> <span class="title function_">parame</span><span class="params">(String wellPath, String inpFilePath)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (!baseParame(wellPath, inpFilePath)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        inValues = <span class="keyword">new</span> <span class="title class_">float</span>[indataCount];</span><br><span class="line">        outValues = <span class="keyword">new</span> <span class="title class_">float</span>[outdataCount];</span><br><span class="line"><span class="comment">// &#123;&#123; functionParame</span></span><br><span class="line">        io.getParameterValues(params);</span><br><span class="line">        BITS = params[<span class="number">0</span>];</span><br><span class="line"><span class="comment">//&#125; &#125; functionParame</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//读入下一-井段处理参数</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> <span class="title function_">vparame</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (!baseVParame()) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">//Get the parameters of the next disposal layer</span></span><br><span class="line"><span class="comment">//&#123; &#123; functionVParame</span></span><br><span class="line">        io.getParameterValues(params);</span><br><span class="line">        BITS = params[<span class="number">0</span>];</span><br><span class="line"><span class="comment">//&#125; &#125; functionVParame</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//读人由DEP指定的曲线数据</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">indata</span><span class="params">()</span> &#123;</span><br><span class="line">        DEP = RLEV * depIndex + SDEP;</span><br><span class="line">        io.getInputCurveValues(DEP, inValues);</span><br><span class="line"><span class="comment">//&#123; &#123; functionInData</span></span><br><span class="line">        CAL = inValues[<span class="number">0</span>];</span><br><span class="line"><span class="comment">//&#125; &#125;functionInData</span></span><br><span class="line">        depIndex++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//输出由DEPO深度点指定的曲线数据</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">outdata</span><span class="params">()</span> &#123;</span><br><span class="line">        DEPO = RLEV * depoIndex + SDEP;</span><br><span class="line"><span class="comment">//&#123; &#123; functionOutData</span></span><br><span class="line">        outValues[<span class="number">0</span>] = CALC;</span><br><span class="line"><span class="comment">//&#125; &#125; functionOutData</span></span><br><span class="line">        io.setOutputCurveValues(DEPO, outValues);</span><br><span class="line">        depoIndex++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">POR</span> <span class="variable">processer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">POR</span>();</span><br><span class="line">        <span class="keyword">if</span> (!processer.process(args)) &#123;</span><br><span class="line">            System.out.print(<span class="string">&quot;处理失败!&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.print(<span class="string">&quot;处理完毕!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="基础函数使用示例"><a href="#基础函数使用示例" class="headerlink" title="基础函数使用示例"></a>基础函数使用示例</h1><h2 id="曲线读写"><a href="#曲线读写" class="headerlink" title="曲线读写"></a>曲线读写</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cif.dataservice.io.DataServiceBasicIO;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">curvelD</span> <span class="operator">=</span> <span class="string">&quot;X1&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">curve2D</span> <span class="operator">=</span> <span class="string">&quot;X2&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">curve3D</span> <span class="operator">=</span> <span class="string">&quot;X3&quot;</span>;</span><br><span class="line">        <span class="type">float</span>[] buffer = <span class="keyword">new</span> <span class="title class_">float</span>[<span class="number">1000</span>];</span><br><span class="line"></span><br><span class="line">        <span class="type">DataServiceBasicIO</span> <span class="variable">io</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DataServiceBasicI0</span>();</span><br><span class="line">        <span class="comment">//命令行第一个参数为输人井次文件</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">id</span> <span class="operator">=</span> io.openCifp(args[<span class="number">0</span>]);<span class="comment">//打开eifp文件,获得文件ID号</span></span><br><span class="line">        <span class="keyword">if</span> (id == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//一维曲线读写</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">readCount</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">retCode</span> <span class="operator">=</span> io.isCurveExisted(id, curve1D);<span class="comment">//判断曲线是否存在</span></span><br><span class="line">        <span class="keyword">if</span> (retCode == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="type">double</span> <span class="variable">startDepth</span> <span class="operator">=</span> io.getCurveStartDepth(id, curve1D);<span class="comment">//获得曲线起始深度</span></span><br><span class="line">            readCount = io.readCurve1D(id, curve1D, startDepth, <span class="number">100</span>, buffer);<span class="comment">//读曲线值</span></span><br><span class="line">            <span class="keyword">for</span> (inti = <span class="number">0</span>; i &lt; readCount; i++) &#123;</span><br><span class="line">                buffer[i] = buffer[i] - <span class="number">100</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            io.writeCurve1D(id, curve1D, sartDepth, <span class="number">100</span>, buffer);<span class="comment">//写一维曲线值</span></span><br><span class="line">            io.flush(id, curve1D);<span class="comment">//刷新缓存数据</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//二维曲线读写</span></span><br><span class="line">        retCode = io.isCurveExisted(id, curve2D);<span class="comment">//判断曲线是否存在</span></span><br><span class="line">        <span class="keyword">if</span> (retCode == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="type">double</span> <span class="variable">startDepth</span> <span class="operator">=</span> io.getCurveStartDepth(id, curve2D);<span class="comment">//获得曲线起始深度</span></span><br><span class="line">            <span class="type">int</span> <span class="variable">arraySize</span> <span class="operator">=</span> io.getCurveArraySize(id, curve2D);<span class="comment">//获得曲线阵列大小</span></span><br><span class="line">            <span class="comment">//读二维曲线值</span></span><br><span class="line">            readCount = io.readCurve2D(id, curve2D, startDepth, <span class="number">100</span>, arraySize, buffer);</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; readCount * araySize; i++) &#123;</span><br><span class="line">                buffer[i] = buffer[i] - <span class="number">100</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            io.writeCurve2D(id, curve2D, startDepth, <span class="number">100</span>, arraySize, buffer);<span class="comment">//写二维曲线值</span></span><br><span class="line">            io.flush(id, curve2D);<span class="comment">//刷新缓存数据</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//三维曲线读写</span></span><br><span class="line">        retCode = io.isCurveExisted(id, curve3D);<span class="comment">//判断曲线是否存在</span></span><br><span class="line">        <span class="keyword">if</span> (retCode == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="type">double</span> <span class="variable">startDepth</span> <span class="operator">=</span> io.getCurveStartDepth(id, curve3D);<span class="comment">//获得曲线起始深度</span></span><br><span class="line">            <span class="type">int</span> <span class="variable">arraySize</span> <span class="operator">=</span> io.getCurveArraySize(id, curve3D);<span class="comment">//获得曲线阵列大小</span></span><br><span class="line">            <span class="type">int</span> <span class="variable">arrayNum</span> <span class="operator">=</span> io.getCurveArrayNum(id, curve3D);<span class="comment">//获得曲线阵列数</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; arrayNum; j++) &#123;</span><br><span class="line">                <span class="comment">//读三维曲线值</span></span><br><span class="line">                readCount = io.readCurve3D(id, curve3D, j, startDepth, <span class="number">100</span>, arraySize, buffer);</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; readCount * arraySize; i++) &#123;</span><br><span class="line">                    buffer[i] = buffer[i] - <span class="number">100</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">//写三维曲线值</span></span><br><span class="line">                io.writeCurve3D(id, curve3D, j, startDepth, <span class="number">100</span>, arraySize, buffer);</span><br><span class="line">            &#125;</span><br><span class="line">            io.flush(id, curve3D);<span class="comment">//刷新缓存数据</span></span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        io.dispatchNotification();<span class="comment">//分发数据更新消息</span></span><br><span class="line">        io.closeCifp(id);<span class="comment">//关闭cifp文件</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="表格读写"><a href="#表格读写" class="headerlink" title="表格读写"></a>表格读写</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> eif.dataservice.io.DataServiceBasicIO;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">tableTemplateName</span> <span class="operator">=</span> <span class="string">&quot;解释结论&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">tableName1</span> <span class="operator">=</span> <span class="string">&quot; result&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">tableName2</span> <span class="operator">=</span> <span class="string">&quot; result1 &quot;</span>;</span><br><span class="line">        <span class="type">DataServiceBasiclO</span> <span class="variable">io</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DataServiceBasicIO</span>();</span><br><span class="line">        <span class="type">int</span> <span class="variable">id</span> <span class="operator">=</span> io.openCifp(args[<span class="number">0</span>]);<span class="comment">//打开eifp文件,获得文件ID号</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (id &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">retCode</span> <span class="operator">=</span> io.isCurveExisted(id, tableNamel);<span class="comment">//判断表格是否存在</span></span><br><span class="line">        <span class="keyword">if</span> (retCode == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获得表格行数和列数</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">rowCount</span> <span class="operator">=</span> io.getTableRowCount(id, tableNamel);</span><br><span class="line">        <span class="type">int</span> <span class="variable">columnCount</span> <span class="operator">=</span> io.getTableColumnCount(id, tableNamel);</span><br><span class="line">        retCode = io.createTable(id, tableTemplateName, tableName2, <span class="number">0</span>);<span class="comment">//创建系统表格</span></span><br><span class="line">        <span class="keyword">if</span> (retCode == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//按照字符串形式统一读写 表格数据循环</span></span><br><span class="line">        String[] buffer = <span class="keyword">new</span> <span class="title class_">String</span>[colunnCount];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= rowCount; i + +) &#123;</span><br><span class="line">            retCode = io.readTable(id, tableNamne1, i, bufer);</span><br><span class="line">            <span class="keyword">if</span> (retCode ==<span class="number">1</span>)&#123;</span><br><span class="line">                io.writeTable(id, tableName2, i, buffer);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        io.dispatchNotification();<span class="comment">//分发数据更新消息</span></span><br><span class="line">        io.closeCifp(id);<span class="comment">//关闭ceifp 文件</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="复合接口与基础接口混用示例"><a href="#复合接口与基础接口混用示例" class="headerlink" title="复合接口与基础接口混用示例"></a>复合接口与基础接口混用示例</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> eif.dataservice.io.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo</span> <span class="keyword">extends</span> <span class="title class_">JavaBaseTemplate</span> &#123;</span><br><span class="line">    <span class="comment">//&#123; &#123; variableDefination</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">float</span> CAL;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">float</span> <span class="variable">BITS</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">float</span> CALC;</span><br><span class="line">    <span class="comment">//&#125; &#125; variableDefination</span></span><br><span class="line">    <span class="type">float</span>[] inValues;<span class="comment">//- -次读人的输入曲线数据</span></span><br><span class="line">    <span class="type">float</span>[] outValues;<span class="comment">//-次写出的输出曲线数据</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">inhead</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//&#123; &#123; initDefination</span></span><br><span class="line">        NAMEI = <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;CAL&quot;</span>&#125;;<span class="comment">//输人曲线名称列表</span></span><br><span class="line">        NAMEC = <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot; BITS&quot;</span>&#125;;<span class="comment">//处理参数名称列表</span></span><br><span class="line">        NAMEO = <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;CALC&quot;</span>&#125;;<span class="comment">//输出曲线名称列表</span></span><br><span class="line">        params = <span class="keyword">new</span> <span class="title class_">float</span>[<span class="number">1</span>];<span class="comment">//一次读人的所有处理参数值</span></span><br><span class="line">        <span class="comment">//&#125; &#125; initDefination</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">process</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        inhead();<span class="comment">//程序初始化</span></span><br><span class="line">        <span class="type">boolean</span> <span class="variable">returmCode</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//读入输入曲线或输出曲线的重定向,确定处理井段</span></span><br><span class="line">        retumCode = parame(args[<span class="number">0</span>], args[<span class="number">1</span>]);</span><br><span class="line">        <span class="keyword">if</span> (!returmnCode) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (DEP &lt;= ENDEP) &#123;<span class="comment">// 循环主体</span></span><br><span class="line">            <span class="keyword">if</span> (DEP &gt;= EDEP) &#123;</span><br><span class="line">                vparame();</span><br><span class="line">            &#125;<span class="comment">//转换下一层段参数</span></span><br><span class="line">            indata();<span class="comment">//读DEP深度点上的输人曲线数据</span></span><br><span class="line">            <span class="comment">//&#123; &#123; userCodes</span></span><br><span class="line">            <span class="comment">//以下为用户算法</span></span><br><span class="line">            CALC = CAL - BITS;</span><br><span class="line">            <span class="comment">//以上为用户算法</span></span><br><span class="line">            <span class="comment">//&#125; &#125; userCodes</span></span><br><span class="line">            outdata();<span class="comment">//写DEPO深度点上的输出曲线数据</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//基础函数部分</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">tableTemplateName</span> <span class="operator">=</span> <span class="string">&quot;解释结论&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">tableNamel</span> <span class="operator">=</span> <span class="string">&quot; result&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">tableName2</span> <span class="operator">=</span> <span class="string">&quot; result1&quot;</span>;</span><br><span class="line">        <span class="type">DataServiceBasicIO</span> <span class="variable">iol</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DataServiceBasicI0</span>();</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">id</span> <span class="operator">=</span> iol.openCifp(rgs[<span class="number">0</span>]);<span class="comment">//打开eifp文件,获得文件ID号</span></span><br><span class="line">        <span class="keyword">if</span> (id &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">retCode</span> <span class="operator">=</span> iol.isCurveExisted(id, tableName1);<span class="comment">//判断表格是否存在</span></span><br><span class="line">        <span class="keyword">if</span> (retCode == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获得表格行数和列数</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">rowCount</span> <span class="operator">=</span> iol.getTableRowCount(id, tableNamel);</span><br><span class="line">        <span class="type">int</span> <span class="variable">columnCount</span> <span class="operator">=</span> iol.getTableColumnCount(d, tableNamel);</span><br><span class="line">        retCode = iol.createTable(id, tableTemplateName, tableName2, <span class="number">0</span>);<span class="comment">//创建系统表格</span></span><br><span class="line">        <span class="keyword">if</span> (retCode == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//按照字符串形式统-读写表格数据循环</span></span><br><span class="line">        String[] buffer = <span class="keyword">new</span> <span class="title class_">String</span>[columnCount];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= rowCount; i++) &#123;</span><br><span class="line">            retCode = iol.readTable(id, tableNamel, i, buffer);</span><br><span class="line">            <span class="keyword">if</span> (retCode == <span class="number">1</span>) &#123;</span><br><span class="line">                iol.writeTable(id, tableName2, i, buffer);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        iol.closeCifp(id);<span class="comment">//关闭cifp 文件</span></span><br><span class="line"></span><br><span class="line">        outhead();<span class="comment">//发送数据更新消息并关闭数据文件</span></span><br><span class="line">        <span class="keyword">return</span> returnCode;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//打开数据文件及参数文件,读人要重定向的输人曲线或输出曲线及参数卡</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> <span class="title function_">parame</span><span class="params">(String wellPah, String inpFilePath)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (!baseParame(wellPath, inpFilePath)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        inValues = <span class="keyword">new</span> <span class="title class_">float</span>[indataCount];</span><br><span class="line">        outValues = <span class="keyword">new</span> <span class="title class_">float</span>[outdataCount];</span><br><span class="line">        <span class="comment">// &#123;&#123; functionParame</span></span><br><span class="line">        io.getParameterValues(params);</span><br><span class="line">        BITS = params[<span class="number">0</span>];</span><br><span class="line">        <span class="comment">//&#125; &#125; functionParame</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//读入下一井段处理参数</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> <span class="title function_">vparame</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (!baseVParame()) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//Get the parameters of the next disposal layer</span></span><br><span class="line">        <span class="comment">//functionVParame</span></span><br><span class="line">        io.getParameterValues(params);</span><br><span class="line">        BITS = params[<span class="number">0</span>];</span><br><span class="line">        <span class="comment">//!! functionVParame</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//读入由 DEP 指定的曲线数据</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">indata</span><span class="params">()</span> &#123;</span><br><span class="line">        DEP = RLEV * depIndex + SDEP;</span><br><span class="line">        io.getlnputCurveValues(DEP, inValues);</span><br><span class="line">        <span class="comment">//!! functionlnData</span></span><br><span class="line">        CAL = inValues[<span class="number">0</span>];</span><br><span class="line">        <span class="comment">//t! functionlnData</span></span><br><span class="line">        depIndex++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//输出由 DEPO 深度点指定的曲线数据</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">outdata</span><span class="params">()</span> &#123;</span><br><span class="line">        DEPO = RLEV * depolndex + SDEP;</span><br><span class="line">        <span class="comment">//! f functionOutData</span></span><br><span class="line">        outValues[<span class="number">0</span>] = CALC;</span><br><span class="line">        <span class="comment">//! functionOutData</span></span><br><span class="line">        io.setOutputCurveValues(DEPO, outValues);</span><br><span class="line">        depolndex++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">POR</span> <span class="variable">processer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">POR</span>();</span><br><span class="line">        <span class="keyword">if</span> (!processer.process(args)) &#123;</span><br><span class="line">            System.out.print(<span class="string">&quot;处理失败!&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.print(<span class="string">&quot;处理完毕!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="二次开发args传参说明"><a href="#二次开发args传参说明" class="headerlink" title="二次开发args传参说明"></a>二次开发args传参说明</h1><h2 id="单井"><a href="#单井" class="headerlink" title="单井"></a>单井</h2><p>arg[0]：代表当前Cifp文件路径</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">正在启动进程...</span><br><span class="line">命令：&quot;&quot;java&quot; &quot;-classpath&quot; &quot;&quot;D:\CIFLog\platformResource_CN\appModule\单井读取地层表格&quot;;&quot;D:\CIFLog\ciflog\modules\cif-base.jar&quot;;&quot;D:\CIFLog\ciflog\modules\cif-dataengine.jar&quot;;&quot;D:\CIFLog\ciflog\modules\cif-dataservice.jar&quot;;&quot;D:\CIFLog\ciflog\modules\cif-baseutil.jar&quot;;&quot;D:\CIFLog\ciflog\modules\cif-cifplus.jar&quot;;&quot;D:\CIFLog\ciflog\modules\cif-db.jar&quot;;&quot;D:\CIFLog\ciflog\modules\cif-resource.jar&quot;;&quot;D:\CIFLog\ciflog\modules\cif-libe.jar&quot;;&quot;D:\CIFLog\ciflog\modules\org-openide-util.jar&quot;;&quot;D:\CIFLog\ciflog\modules\org-openide-util-lookup.jar&quot;&quot; &quot;Read_FM&quot; &quot;CIF://F:\nextcloudData\No2\WesternCanadaBasinWrokSpaceCiflog1-1\WesternCanadaBasin\东1-可用_垂直\3580_100082608601W600\3580_100082608601W600_精简&quot; &quot;C:\Users\windows11\.cifPlatform\temp\app_7819482362594584962_单井读取地层表格.inp&quot;&quot;</span><br><span class="line">名称：单井读取地层表格</span><br></pre></td></tr></table></figure><h2 id="多井"><a href="#多井" class="headerlink" title="多井"></a>多井</h2><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">命令：&quot;&quot;java&quot; &quot;-classpath&quot; &quot;&quot;D:\CIFLog\platformResource_CN\appModule\Read_FM&quot;;&quot;D:\CIFLog\ciflog\modules\cif-base.jar&quot;;&quot;D:\CIFLog\ciflog\modules\cif-dataengine.jar&quot;;&quot;D:\CIFLog\ciflog\modules\cif-dataservice.jar&quot;;&quot;D:\CIFLog\ciflog\modules\cif-baseutil.jar&quot;;&quot;D:\CIFLog\ciflog\modules\cif-cifplus.jar&quot;;&quot;D:\CIFLog\ciflog\modules\cif-resource.jar&quot;;&quot;D:\CIFLog\ciflog\modules\cif-libe.jar&quot;;&quot;D:\CIFLog\ciflog\modules\org-openide-util-lookup.jar&quot;&quot; &quot;Read_FM&quot; &quot;C:\Users\windows11\.cifPlatform\temp\MW_tmp_wellFilePath.wells&quot; &quot;C:\Users\windows11\.cifPlatform\temp\MW_tmp_paramFilePath.inp&quot;&quot;</span><br></pre></td></tr></table></figure><p>会在本次生成两个缓存文件</p><p>arg[0]代表批处理井的编号的文件，文件内存储多个单井的Cifp文件路径</p><h1 id="单井读取表格"><a href="#单井读取表格" class="headerlink" title="单井读取表格"></a>单井读取表格</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cif.dataservice.io.DataServiceBasicIO;</span><br><span class="line"><span class="keyword">import</span> cif.dataservice.io.DataServiceAssistIO;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Read_FM</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> NoSuchMethodException&#123;</span><br><span class="line"><span class="comment">//要读取的表格名称</span></span><br><span class="line"><span class="type">String</span> <span class="variable">tableName1</span> <span class="operator">=</span> <span class="string">&quot;层位&quot;</span>;</span><br><span class="line"><span class="type">String</span> <span class="variable">tableName2</span> <span class="operator">=</span> <span class="string">&quot;小层&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建接口</span></span><br><span class="line"><span class="type">DataServiceBasicIO</span> <span class="variable">io</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DataServiceBasicIO</span>();</span><br><span class="line"><span class="type">DataServiceAssistIO</span> <span class="variable">io1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DataServiceAssistIO</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">//打开井次文件，获取井次ID号</span></span><br><span class="line"><span class="type">int</span> <span class="variable">id</span> <span class="operator">=</span> io.openCifp(args[<span class="number">0</span>]);</span><br><span class="line"><span class="comment">//System.out.println(id);</span></span><br><span class="line"><span class="comment">//如果没有井次文件，退出程序</span></span><br><span class="line"><span class="keyword">if</span>(id &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;不存在井次&quot;</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//DataServiceAssistIO接口里getWellName方法的传入参数是什么,public int getWellName（int arg0, String arg1,int arg2）</span></span><br><span class="line"><span class="comment">//System.out.println(io1.getWellName(0, args[0], 0));</span></span><br><span class="line"><span class="comment">//arg[0]代表当前Cifp文件路径</span></span><br><span class="line"><span class="comment">//System.out.println(args[0]);</span></span><br><span class="line"><span class="comment">//System.out.println(args[1]);</span></span><br><span class="line"><span class="comment">//System.out.println(args[2]);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//从args0中提取出井位id</span></span><br><span class="line"><span class="comment">//斜杠划分坐标</span></span><br><span class="line">String[] split1 = args[<span class="number">0</span>].split(java.util.regex.Matcher.quoteReplacement(File.separator));</span><br><span class="line"><span class="comment">//System.out.println(split1[split1.length - 1]);</span></span><br><span class="line"><span class="comment">//当前井序名称</span></span><br><span class="line"><span class="type">String</span> <span class="variable">WellCategoryName</span> <span class="operator">=</span> split1[split1.length - <span class="number">1</span>];</span><br><span class="line">String[] split2 = WellCategoryName.split(<span class="string">&quot;_&quot;</span>);</span><br><span class="line"><span class="type">String</span> <span class="variable">WellId</span> <span class="operator">=</span> split2[<span class="number">0</span>];</span><br><span class="line"><span class="type">String</span> <span class="variable">WellUWI</span> <span class="operator">=</span> split2[<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">//判断表格是否存在</span></span><br><span class="line"><span class="type">int</span> <span class="variable">retCode</span> <span class="operator">=</span> io.isCurveExisted(id, tableName1);</span><br><span class="line"><span class="keyword">if</span> (retCode == <span class="number">0</span>) &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;表格不存在&quot;</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获得表格行数和列数</span></span><br><span class="line"><span class="type">int</span> <span class="variable">rowCount</span> <span class="operator">=</span> io.getTableRowCount(id, tableName1);</span><br><span class="line"><span class="type">int</span> <span class="variable">columnCount</span> <span class="operator">=</span> io.getTableColumnCount(id, tableName1);</span><br><span class="line"></span><br><span class="line"><span class="comment">//按照字符串形式统一读写表 格数据循环</span></span><br><span class="line">String[] buffer = <span class="keyword">new</span> <span class="title class_">String</span>[columnCount];</span><br><span class="line"><span class="comment">//一行一行输出</span></span><br><span class="line"><span class="comment">//retCode = io.readTable(id, tableName1, 2, buffer);</span></span><br><span class="line"><span class="comment">//String temp1 = Arrays.toString(buffer);</span></span><br><span class="line"><span class="comment">//System.out.println(temp1);</span></span><br><span class="line"><span class="comment">//System.out.println(&quot;--&quot;);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= rowCount; i++) &#123;</span><br><span class="line">retCode = io.readTable(id, tableName1, i, buffer);</span><br><span class="line"><span class="comment">//单排输出</span></span><br><span class="line"><span class="comment">//格式：井序名IDUWI层位名层顶层底</span></span><br><span class="line">System.out.print(WellCategoryName);</span><br><span class="line">System.out.print(<span class="string">&#x27;\t&#x27;</span>);</span><br><span class="line">System.out.print(WellId);</span><br><span class="line">System.out.print(<span class="string">&#x27;\t&#x27;</span>);</span><br><span class="line">System.out.print(WellUWI);</span><br><span class="line">System.out.print(<span class="string">&#x27;\t&#x27;</span>);</span><br><span class="line">System.out.print(buffer[<span class="number">0</span>]);</span><br><span class="line">System.out.print(<span class="string">&#x27;\t&#x27;</span>);</span><br><span class="line">System.out.print(buffer[<span class="number">1</span>]);</span><br><span class="line">System.out.print(<span class="string">&#x27;\t&#x27;</span>);</span><br><span class="line">System.out.print(buffer[<span class="number">2</span>]);</span><br><span class="line">System.out.println();</span><br><span class="line"><span class="comment">//整个表输出</span></span><br><span class="line"><span class="comment">//String temp = Arrays.toString(buffer);</span></span><br><span class="line"><span class="comment">//System.out.println(temp);</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">io.dispatchNotification();<span class="comment">//分发数据更新消息</span></span><br><span class="line">io.closeCifp(id);<span class="comment">//关闭eifp文件</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="多井读取表格"><a href="#多井读取表格" class="headerlink" title="多井读取表格"></a>多井读取表格</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cif.dataservice.io.DataServiceBasicIO;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Read_Tables</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> NoSuchMethodException&#123;</span><br><span class="line"><span class="comment">//要读取的表格名称</span></span><br><span class="line"><span class="type">String</span> <span class="variable">tableName1</span> <span class="operator">=</span> <span class="string">&quot;层位&quot;</span>;</span><br><span class="line"><span class="comment">//String tableName1 = &quot;小层&quot;;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//args[0]为存放井列表的一个文件地址</span></span><br><span class="line"><span class="comment">//System.out.println(args[0]);//C:\Users\windows11\.cifPlatform\temp\MW_tmp_wellFilePath.wells</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//井列表</span></span><br><span class="line"><span class="type">String</span> <span class="variable">wellFilePathAll</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//读取文件地址内容</span></span><br><span class="line"><span class="type">File</span> <span class="variable">file</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(args[<span class="number">0</span>]);</span><br><span class="line">        <span class="type">FileReader</span> <span class="variable">fileReader</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">          fileReader = <span class="keyword">new</span> <span class="title class_">FileReader</span>(file);</span><br><span class="line">          <span class="type">char</span>[] charArray = <span class="keyword">new</span> <span class="title class_">char</span>[(<span class="type">int</span>) file.length()];</span><br><span class="line">          fileReader.read(charArray);</span><br><span class="line">          wellFilePathAll = <span class="keyword">new</span> <span class="title class_">String</span>(charArray);</span><br><span class="line"><span class="comment">//          System.out.println(wellFilePathAll);</span></span><br><span class="line">          <span class="comment">//CIF://F:\nextcloudData\No2\WesternCanadaBasinWrokSpaceCiflog1-1\WesternCanadaBasin\东1-可用_垂直\3536_100062808506W600+\3536_100062808506W600_精简</span></span><br><span class="line">          <span class="comment">//CIF://F:\nextcloudData\No2\WesternCanadaBasinWrokSpaceCiflog1-1\WesternCanadaBasin\东1-可用_垂直\3571_102040909711W600_缺DT\3571_102040909711W600_精简</span></span><br><span class="line">          <span class="comment">//CIF://F:\nextcloudData\No2\WesternCanadaBasinWrokSpaceCiflog1-1\WesternCanadaBasin\东1-可用_垂直\3580_100082608601W600\3580_100082608601W600_精简</span></span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">          e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (fileReader != <span class="literal">null</span>) &#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">fileReader.close();</span><br><span class="line">&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//处理井列表字符串</span></span><br><span class="line"><span class="comment">//分行</span></span><br><span class="line">String[] wellFilePathTemp1 = wellFilePathAll.split(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"><span class="comment">//System.out.println(wellFilePathTemp1[0]);//CIF://F:\nextcloudData\No2\WesternCanadaBasinWrokSpaceCiflog1-1\WesternCanadaBasin\东1-可用_垂直\3536_100062808506W600+\3536_100062808506W600_精简</span></span><br><span class="line"><span class="comment">//System.out.println(wellFilePathTemp1[1]);//CIF://F:\nextcloudData\No2\WesternCanadaBasinWrokSpaceCiflog1-1\WesternCanadaBasin\东1-可用_垂直\3571_102040909711W600_缺DT\3571_102040909711W600_精简</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//声明井路径字符串数组</span></span><br><span class="line">String[] wellFilePath = <span class="keyword">new</span> <span class="title class_">String</span>[wellFilePathTemp1.length];</span><br><span class="line"><span class="comment">//每一行切分然后保存路径</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span> ; i &lt; wellFilePathTemp1.length - <span class="number">1</span>; i++) &#123;</span><br><span class="line">String[] wellFilePathTemp2 = wellFilePathTemp1[i].split(<span class="string">&quot;//&quot;</span>);</span><br><span class="line">wellFilePath[i] = wellFilePathTemp2[<span class="number">1</span>];</span><br><span class="line"><span class="comment">//System.out.println(wellFilePath[i]);</span></span><br><span class="line"><span class="comment">//F:\nextcloudData\No2\WesternCanadaBasinWrokSpaceCiflog1-1\WesternCanadaBasin\东1-可用_垂直\3536_100062808506W600+\3536_100062808506W600_精简</span></span><br><span class="line"><span class="comment">//F:\nextcloudData\No2\WesternCanadaBasinWrokSpaceCiflog1-1\WesternCanadaBasin\东1-可用_垂直\3571_102040909711W600_缺DT\3571_102040909711W600_精简</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//批处理</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; wellFilePath.length-<span class="number">1</span>; i++) &#123;</span><br><span class="line"><span class="comment">//创建接口</span></span><br><span class="line"><span class="type">DataServiceBasicIO</span> <span class="variable">io</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DataServiceBasicIO</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">//打开井次文件，获取井次ID号</span></span><br><span class="line"><span class="type">int</span> <span class="variable">id</span> <span class="operator">=</span> io.openCifp(wellFilePath[i]);</span><br><span class="line"><span class="comment">//System.out.println(id);</span></span><br><span class="line"><span class="comment">//如果没有井次文件，退出程序</span></span><br><span class="line"><span class="keyword">if</span>(id &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;不存在井次&quot;</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//斜杠划分坐标</span></span><br><span class="line">String[] split1 = wellFilePath[i].split(java.util.regex.Matcher.quoteReplacement(File.separator));</span><br><span class="line"><span class="comment">//System.out.println(split1[split1.length - 1]);</span></span><br><span class="line"><span class="comment">//当前井序名称</span></span><br><span class="line"><span class="type">String</span> <span class="variable">WellCategoryName</span> <span class="operator">=</span> split1[split1.length - <span class="number">1</span>];</span><br><span class="line">String[] split2 = WellCategoryName.split(<span class="string">&quot;_&quot;</span>);</span><br><span class="line"><span class="type">String</span> <span class="variable">WellId</span> <span class="operator">=</span> split2[<span class="number">0</span>];</span><br><span class="line"><span class="type">String</span> <span class="variable">WellUWI</span> <span class="operator">=</span> split2[<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">//判断表格是否存在</span></span><br><span class="line"><span class="type">int</span> <span class="variable">retCode</span> <span class="operator">=</span> io.isCurveExisted(id, tableName1);</span><br><span class="line"><span class="keyword">if</span> (retCode == <span class="number">0</span>) &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;表格不存在&quot;</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获得表格行数和列数</span></span><br><span class="line"><span class="type">int</span> <span class="variable">rowCount</span> <span class="operator">=</span> io.getTableRowCount(id, tableName1);</span><br><span class="line"><span class="type">int</span> <span class="variable">columnCount</span> <span class="operator">=</span> io.getTableColumnCount(id, tableName1);</span><br><span class="line"></span><br><span class="line"><span class="comment">//按照字符串形式统一读写表 格数据循环</span></span><br><span class="line">String[] buffer = <span class="keyword">new</span> <span class="title class_">String</span>[columnCount];</span><br><span class="line"><span class="comment">//一行一行输出</span></span><br><span class="line"><span class="comment">//retCode = io.readTable(id, tableName1, 2, buffer);</span></span><br><span class="line"><span class="comment">//String temp1 = Arrays.toString(buffer);</span></span><br><span class="line"><span class="comment">//System.out.println(temp1);</span></span><br><span class="line"><span class="comment">//System.out.println(&quot;--&quot;);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i1</span> <span class="operator">=</span> <span class="number">1</span>; i1 &lt;= rowCount; i1++) &#123;</span><br><span class="line">retCode = io.readTable(id, tableName1, i1, buffer);</span><br><span class="line"><span class="comment">//单排输出</span></span><br><span class="line"><span class="comment">//格式：井序名IDUWI层位名层顶层底</span></span><br><span class="line"><span class="comment">//System.out.print(WellCategoryName);</span></span><br><span class="line"><span class="comment">//System.out.print(&#x27;\t&#x27;);</span></span><br><span class="line">System.out.print(WellId);</span><br><span class="line">System.out.print(<span class="string">&#x27;\t&#x27;</span>);</span><br><span class="line">System.out.print(WellUWI);</span><br><span class="line">System.out.print(<span class="string">&#x27;\t&#x27;</span>);</span><br><span class="line">System.out.print(buffer[<span class="number">0</span>]);</span><br><span class="line">System.out.print(<span class="string">&#x27;\t&#x27;</span>);</span><br><span class="line">System.out.print(buffer[<span class="number">1</span>]);</span><br><span class="line">System.out.print(<span class="string">&#x27;\t&#x27;</span>);</span><br><span class="line">System.out.print(buffer[<span class="number">2</span>]);</span><br><span class="line">System.out.println();</span><br><span class="line"><span class="comment">//整个表输出</span></span><br><span class="line"><span class="comment">//String temp = Arrays.toString(buffer);</span></span><br><span class="line"><span class="comment">//System.out.println(temp);</span></span><br><span class="line">&#125;</span><br><span class="line">buffer = <span class="keyword">new</span> <span class="title class_">String</span>[columnCount];</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="获取API接口参数方法"><a href="#获取API接口参数方法" class="headerlink" title="获取API接口参数方法"></a>获取API接口参数方法</h1><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>反射类加载机制读取，无法了解传入参数的解释</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cif.dataservice.io.DataServiceBasicIO;</span><br><span class="line"><span class="keyword">import</span> cif.dataservice.io.DataServiceAssistIO;</span><br><span class="line"><span class="keyword">import</span> cif.dataservice.io.*;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.*;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HUOQULEI</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line"><span class="type">Class</span> <span class="variable">c</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;cif.dataservice.io.DataServiceBasicIO&quot;</span>);</span><br><span class="line"><span class="comment">//-------------------获取方法的详细信息</span></span><br><span class="line"><span class="comment">//-------------------测试函数getDeclaredMethods()</span></span><br><span class="line">Method m[] = c.getDeclaredMethods();</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; m.length; i++) &#123;</span><br><span class="line"><span class="comment">//--------------------获得方法的名字</span></span><br><span class="line">System.out.println(<span class="string">&quot;getDeclaredMethods()获得的方法的名字是:&quot;</span> + m[i].getName());</span><br><span class="line"></span><br><span class="line"><span class="comment">//--------------------获得方法参数的类型和有几个参数</span></span><br><span class="line">Class b[] = m[i].getParameterTypes();<span class="comment">//获得所有的参数并且存放到数组B中</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; b.length; j++) &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;getDeclaredMethods()获得的参数的类型是&quot;</span> + b[j]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//--------------------获得方法返回值的类型</span></span><br><span class="line">System.out.println(<span class="string">&quot;getDeclaredMethods()获得的方法的返回值的类型&quot;</span> + m[i].getReturnType());<span class="comment">//获得方法的返回值类型</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//--------------------获得方法的修饰符</span></span><br><span class="line"><span class="type">int</span> <span class="variable">mod</span> <span class="operator">=</span> m[i].getModifiers();</span><br><span class="line">System.out.println(<span class="string">&quot;getDeclaredMethods()获得的方法的修饰符有&quot;</span> + Modifier.toString(mod));</span><br><span class="line"></span><br><span class="line"><span class="comment">//--------------------获得方法的异常类型</span></span><br><span class="line">Class e[] = m[i].getExceptionTypes();<span class="comment">//获得所有的异常类型存放到数组e中</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> <span class="number">0</span>; k &lt; e.length; k++)&#123;</span><br><span class="line">   System.out.println(<span class="string">&quot;getDeclaredMethods()获得的方法的异常类型是：&quot;</span> + e[k]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">&quot;-------------------------------------------------------------------&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line"><span class="comment">//-------------------获取方法的详细信息</span></span><br><span class="line"><span class="comment">//-------------------测试函数getMethods()</span></span><br><span class="line">Method n[] = c.getMethods();</span><br><span class="line"> </span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; n.length; i++) &#123;</span><br><span class="line"><span class="comment">//--------------------获得方法的名字</span></span><br><span class="line">System.out.println(<span class="string">&quot;getMethods()获得的方法的名字是:&quot;</span> + n[i].getName());</span><br><span class="line"></span><br><span class="line"><span class="comment">//--------------------获得方法参数的类型和有几个参数</span></span><br><span class="line">Class b1[] = n[i].getParameterTypes();<span class="comment">//获得所有的参数并且存放到数组B中</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; b1.length; j++)&#123;</span><br><span class="line">  System.out.println(<span class="string">&quot;getMethods()获得的参数的类型是&quot;</span> + b1[j]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//--------------------获得方法返回值的类型</span></span><br><span class="line">System.out.println(<span class="string">&quot;getMethods()获得的方法的返回值的类型&quot;</span> + n[i].getReturnType());<span class="comment">//获得方法的返回值类型</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//--------------------获得方法的修饰符</span></span><br><span class="line"><span class="type">int</span> <span class="variable">mod1</span> <span class="operator">=</span> n[i].getModifiers();</span><br><span class="line">System.out.println(<span class="string">&quot;getMethods()获得的方法的修饰符有&quot;</span> + Modifier.toString(mod1));</span><br><span class="line"></span><br><span class="line"><span class="comment">//--------------------获得方法的异常类型</span></span><br><span class="line">Class e1[] = n[i].getExceptionTypes();<span class="comment">//获得所有的异常类型存放到数组e中</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> <span class="number">0</span>; k &lt; e1.length; k++)&#123;</span><br><span class="line">   System.out.println(<span class="string">&quot;getMethods()获得的方法的异常类型是：&quot;</span> + e1[k]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//--------------------获得方法的注解信息</span></span><br><span class="line">Parameter[] parameters = n[i].getParameters();</span><br><span class="line"><span class="keyword">for</span> (Parameter parameter : parameters) &#123;</span><br><span class="line">                Class&lt;?&gt; parameterType = parameter.getType();</span><br><span class="line">                Annotation[] annotations = parameter.getAnnotations();</span><br><span class="line">                <span class="keyword">for</span> (Annotation annotation : annotations) &#123;</span><br><span class="line">                    System.out.println(<span class="string">&quot;Parameter Annotation: &quot;</span> + annotation);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//--------------------获得方法的参数名称</span></span><br><span class="line"><span class="keyword">for</span> (Parameter parameter : parameters) &#123;</span><br><span class="line">                Class&lt;?&gt; parameterType = parameter.getType();</span><br><span class="line">                Annotation[] annotations = parameter.getAnnotations();</span><br><span class="line">                <span class="type">String</span> <span class="variable">parameterName</span> <span class="operator">=</span> parameter.getName();</span><br><span class="line">                System.out.println(<span class="string">&quot;Parameter Name: &quot;</span> + parameterName);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">&quot;-------------------------------------------------------------------&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>用注解方式获取：（无法读取包内注解信息，返回空指针异常）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.lang.annotation.*;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Constructor;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Parameter;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * TODO</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> syl</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestReflect</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//获取字节码对象</span></span><br><span class="line">            Class&lt;?&gt; r= Class.forName(<span class="string">&quot;cif.dataservice.io.DataServiceAssistIO&quot;</span>);</span><br><span class="line">            <span class="comment">//类操作</span></span><br><span class="line">            <span class="comment">//class1(r);</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//属性操作</span></span><br><span class="line">            <span class="comment">//field(r);</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="comment">//方法操作</span></span><br><span class="line">            method(r);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//构造方法方法</span></span><br><span class="line">            <span class="comment">//constructor(r);</span></span><br><span class="line">        &#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 类操作</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> r</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">class1</span><span class="params">(Class&lt;?&gt; r)</span> &#123;</span><br><span class="line">        <span class="comment">//获取全限定类名</span></span><br><span class="line">        r.getName();</span><br><span class="line">        <span class="comment">//获取包名</span></span><br><span class="line">        r.getPackage().getName();</span><br><span class="line">        <span class="comment">//获取类上所有注解</span></span><br><span class="line">        Annotation[] annotations = r.getAnnotations();</span><br><span class="line">        <span class="comment">//获取类上指定的注解</span></span><br><span class="line">        <span class="type">ClassAnnotation</span> <span class="variable">classAnnotation</span> <span class="operator">=</span>r.getAnnotation(ClassAnnotation.class);</span><br><span class="line">        <span class="comment">//注解的全限定类名</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">aClass</span> <span class="operator">=</span> classAnnotation.annotationType().getName();</span><br><span class="line">        <span class="comment">//判断是否有指定注解</span></span><br><span class="line">        <span class="type">boolean</span> <span class="variable">b</span> <span class="operator">=</span> r.isAnnotationPresent(ClassAnnotation.class);</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 属性操作</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> r</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">field</span><span class="params">(Class&lt;?&gt; r)</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//获取指定属性</span></span><br><span class="line">            <span class="type">Field</span> <span class="variable">id</span> <span class="operator">=</span> r.getDeclaredField(<span class="string">&quot;id&quot;</span>);</span><br><span class="line">            <span class="comment">//获取属性名</span></span><br><span class="line">            System.out.println(id.getName());</span><br><span class="line">            <span class="comment">//获取属性类型</span></span><br><span class="line">            System.out.println(id.getType().getName());</span><br><span class="line">        &#125; <span class="keyword">catch</span> (NoSuchFieldException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//获取所有属性</span></span><br><span class="line">        Field[] fields = r.getDeclaredFields();</span><br><span class="line">        <span class="keyword">for</span> (Field field : fields) &#123;</span><br><span class="line">            <span class="comment">//获取属性上面指定的指定的注解</span></span><br><span class="line">            <span class="type">FieldAnnotation</span> <span class="variable">fieldAnnotation</span> <span class="operator">=</span> field.getAnnotation(FieldAnnotation.class);</span><br><span class="line">            <span class="comment">//获取注解属性值</span></span><br><span class="line">            System.out.println(fieldAnnotation.value());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 构造方法操作</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> r</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">constructor</span><span class="params">(Class&lt;?&gt; r)</span> &#123;</span><br><span class="line">        <span class="comment">//获取所有构造方法</span></span><br><span class="line">        Constructor&lt;?&gt;[] constructors = r.getDeclaredConstructors();</span><br><span class="line">        <span class="keyword">for</span> (Constructor&lt;?&gt; constructor : constructors) &#123;</span><br><span class="line">            <span class="comment">//获取构造方法上面指定的注解</span></span><br><span class="line">            <span class="type">ConstructorAnnotation</span> <span class="variable">constructorAnnotation</span> <span class="operator">=</span> constructor.getAnnotation(ConstructorAnnotation.class);</span><br><span class="line">            <span class="comment">//获取注解的属性值</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="string">&quot;含参构造&quot;</span>.equals(constructorAnnotation.value()))&#123;</span><br><span class="line">                <span class="comment">//获取各个参数名</span></span><br><span class="line">                Parameter[] parameters = constructor.getParameters();</span><br><span class="line">                <span class="keyword">for</span> (Parameter parameter : parameters) &#123;</span><br><span class="line">                    System.out.println(parameter.getName());</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">//获取各个参数类型</span></span><br><span class="line">                Class&lt;?&gt;[] parameterTypes = constructor.getParameterTypes();</span><br><span class="line">                <span class="keyword">for</span> (Class&lt;?&gt; parameterType : parameterTypes) &#123;</span><br><span class="line">                    System.out.println(parameterType.getName());</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">//获取参数数量</span></span><br><span class="line">                System.out.println(constructor.getParameterCount());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *方法操作</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> r</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">method</span><span class="params">(Class&lt;?&gt; r)</span> &#123;</span><br><span class="line">        <span class="comment">//获取所有方法</span></span><br><span class="line">        Method[] methods = r.getDeclaredMethods();</span><br><span class="line">        <span class="keyword">for</span> (Method method : methods) &#123;</span><br><span class="line">            <span class="comment">//获取方法上指定的注解</span></span><br><span class="line">            <span class="type">MethodAnnotation</span> <span class="variable">methodAnnotation</span> <span class="operator">=</span> method.getAnnotation(MethodAnnotation.class);</span><br><span class="line">            System.out.println(methodAnnotation.value());</span><br><span class="line">            <span class="comment">//获取方法名</span></span><br><span class="line">            System.out.println(method.getName());</span><br><span class="line">            <span class="comment">//获取返回值类型</span></span><br><span class="line">            System.out.println(method.getReturnType().getName());</span><br><span class="line">            <span class="comment">//获取各个形参数名及类型</span></span><br><span class="line">            Parameter[] parameters = method.getParameters();</span><br><span class="line">            <span class="keyword">for</span> (Parameter parameter : parameters) &#123;</span><br><span class="line">                System.out.println(parameter.getName());</span><br><span class="line">                System.out.println(parameter.getType().getName());</span><br><span class="line">                <span class="comment">//获取参数的注解</span></span><br><span class="line">                System.out.println(parameter.getAnnotation(ParameterAnnotation.class).value());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 类注解</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> syl</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Target(&#123;ElementType.TYPE&#125;)</span></span><br><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="meta">@interface</span> ClassAnnotation&#123;</span><br><span class="line">    String <span class="title function_">value</span><span class="params">()</span> <span class="keyword">default</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 属性注解</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> syl</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Target(&#123;ElementType.FIELD&#125;)</span></span><br><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="meta">@interface</span> FieldAnnotation&#123;</span><br><span class="line">    String <span class="title function_">value</span><span class="params">()</span> <span class="keyword">default</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 方法注解</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> syl</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Target(&#123;ElementType.METHOD&#125;)</span></span><br><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="meta">@interface</span> MethodAnnotation&#123;</span><br><span class="line">    String <span class="title function_">value</span><span class="params">()</span> <span class="keyword">default</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 构造方法注解</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> syl</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Target(&#123;ElementType.CONSTRUCTOR&#125;)</span></span><br><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="meta">@interface</span> ConstructorAnnotation&#123;</span><br><span class="line">    String <span class="title function_">value</span><span class="params">()</span> <span class="keyword">default</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 参数注解</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> syl</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Target(&#123;ElementType.PARAMETER&#125;)</span></span><br><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="meta">@interface</span> ParameterAnnotation&#123;</span><br><span class="line">    String <span class="title function_">value</span><span class="params">()</span> <span class="keyword">default</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="DataServiceAssistIO"><a href="#DataServiceAssistIO" class="headerlink" title="DataServiceAssistIO"></a>DataServiceAssistIO</h2><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br></pre></td><td class="code"><pre><span class="line">getDeclaredMethods()获得的方法的名字是:exportTextFileData</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.StringBuffer</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.io.File</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型void</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有privat</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:openLocalDataSource</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有private</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:getWorkSpaceCount</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:getLoggingNameList</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class [Ljava.lang.String;</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有private</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:getCategoryCount</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:getWorkSpaceName</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:getLogCurveCount</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:getWellName</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:getLogTableCount</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:getLogTableName</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:getCategoryName</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:getLogDocName</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:getLoggingCount</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有private</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:getLogCurveName</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:getLoggingName</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有private</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:getWellCount</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:openDataSource</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:getLogDocCount</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:getID</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有private</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:getWorkSpaceCount</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的方法的返回值的类型int</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:getCategoryCount</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的方法的返回值的类型int</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">Parameter Name: arg1</span><br><span class="line">Parameter Name: arg2</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:getWorkSpaceName</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的方法的返回值的类型class java.lang.String</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">Parameter Name: arg1</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:getLogCurveCount</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的方法的返回值的类型int</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">Parameter Name: arg1</span><br><span class="line">Parameter Name: arg2</span><br><span class="line">Parameter Name: arg3</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:getWellName</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的方法的返回值的类型class java.lang.String</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">Parameter Name: arg1</span><br><span class="line">Parameter Name: arg2</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:getLogTableCount</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的方法的返回值的类型int</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">Parameter Name: arg1</span><br><span class="line">Parameter Name: arg2</span><br><span class="line">Parameter Name: arg3</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:getLogTableName</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的方法的返回值的类型class java.lang.String</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">Parameter Name: arg1</span><br><span class="line">Parameter Name: arg2</span><br><span class="line">Parameter Name: arg3</span><br><span class="line">Parameter Name: arg4</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:getCategoryName</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的方法的返回值的类型class java.lang.String</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">Parameter Name: arg1</span><br><span class="line">Parameter Name: arg2</span><br><span class="line">Parameter Name: arg3</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:getLogDocName</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的方法的返回值的类型class java.lang.String</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">Parameter Name: arg1</span><br><span class="line">Parameter Name: arg2</span><br><span class="line">Parameter Name: arg3</span><br><span class="line">Parameter Name: arg4</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:getLogCurveName</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的方法的返回值的类型class java.lang.String</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">Parameter Name: arg1</span><br><span class="line">Parameter Name: arg2</span><br><span class="line">Parameter Name: arg3</span><br><span class="line">Parameter Name: arg4</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:getWellCount</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的方法的返回值的类型int</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">Parameter Name: arg1</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:openDataSource</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的方法的返回值的类型int</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:getLogDocCount</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的方法的返回值的类型int</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">Parameter Name: arg1</span><br><span class="line">Parameter Name: arg2</span><br><span class="line">Parameter Name: arg3</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:wait</span><br><span class="line">getMethods()获得的方法的返回值的类型void</span><br><span class="line">getMethods()获得的方法的修饰符有public final</span><br><span class="line">getMethods()获得的方法的异常类型是：class java.lang.InterruptedException</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:wait</span><br><span class="line">getMethods()获得的参数的类型是long</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的方法的返回值的类型void</span><br><span class="line">getMethods()获得的方法的修饰符有public final</span><br><span class="line">getMethods()获得的方法的异常类型是：class java.lang.InterruptedException</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">Parameter Name: arg1</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:wait</span><br><span class="line">getMethods()获得的参数的类型是long</span><br><span class="line">getMethods()获得的方法的返回值的类型void</span><br><span class="line">getMethods()获得的方法的修饰符有public final native</span><br><span class="line">getMethods()获得的方法的异常类型是：class java.lang.InterruptedException</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:equals</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.Object</span><br><span class="line">getMethods()获得的方法的返回值的类型boolean</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:toString</span><br><span class="line">getMethods()获得的方法的返回值的类型class java.lang.String</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:hashCode</span><br><span class="line">getMethods()获得的方法的返回值的类型int</span><br><span class="line">getMethods()获得的方法的修饰符有public native</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:getClass</span><br><span class="line">getMethods()获得的方法的返回值的类型class java.lang.Class</span><br><span class="line">getMethods()获得的方法的修饰符有public final native</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:notify</span><br><span class="line">getMethods()获得的方法的返回值的类型void</span><br><span class="line">getMethods()获得的方法的修饰符有public final native</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:notifyAll</span><br><span class="line">getMethods()获得的方法的返回值的类型void</span><br><span class="line">getMethods()获得的方法的修饰符有public final native</span><br></pre></td></tr></table></figure><h2 id="DataServiceBasicIO"><a href="#DataServiceBasicIO" class="headerlink" title="DataServiceBasicIO"></a>DataServiceBasicIO</h2><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br><span class="line">824</span><br><span class="line">825</span><br><span class="line">826</span><br><span class="line">827</span><br><span class="line">828</span><br><span class="line">829</span><br><span class="line">830</span><br><span class="line">831</span><br><span class="line">832</span><br><span class="line">833</span><br><span class="line">834</span><br><span class="line">835</span><br><span class="line">836</span><br><span class="line">837</span><br><span class="line">838</span><br><span class="line">839</span><br><span class="line">840</span><br><span class="line">841</span><br><span class="line">842</span><br><span class="line">843</span><br><span class="line">844</span><br><span class="line">845</span><br><span class="line">846</span><br><span class="line">847</span><br><span class="line">848</span><br><span class="line">849</span><br><span class="line">850</span><br><span class="line">851</span><br><span class="line">852</span><br><span class="line">853</span><br><span class="line">854</span><br><span class="line">855</span><br><span class="line">856</span><br><span class="line">857</span><br><span class="line">858</span><br><span class="line">859</span><br><span class="line">860</span><br><span class="line">861</span><br><span class="line">862</span><br><span class="line">863</span><br><span class="line">864</span><br><span class="line">865</span><br><span class="line">866</span><br><span class="line">867</span><br><span class="line">868</span><br><span class="line">869</span><br><span class="line">870</span><br><span class="line">871</span><br><span class="line">872</span><br><span class="line">873</span><br><span class="line">874</span><br><span class="line">875</span><br><span class="line">876</span><br><span class="line">877</span><br><span class="line">878</span><br><span class="line">879</span><br><span class="line">880</span><br><span class="line">881</span><br><span class="line">882</span><br><span class="line">883</span><br><span class="line">884</span><br><span class="line">885</span><br><span class="line">886</span><br><span class="line">887</span><br><span class="line">888</span><br><span class="line">889</span><br><span class="line">890</span><br><span class="line">891</span><br><span class="line">892</span><br><span class="line">893</span><br><span class="line">894</span><br><span class="line">895</span><br><span class="line">896</span><br><span class="line">897</span><br><span class="line">898</span><br><span class="line">899</span><br><span class="line">900</span><br><span class="line">901</span><br><span class="line">902</span><br><span class="line">903</span><br><span class="line">904</span><br><span class="line">905</span><br><span class="line">906</span><br><span class="line">907</span><br><span class="line">908</span><br><span class="line">909</span><br><span class="line">910</span><br><span class="line">911</span><br><span class="line">912</span><br><span class="line">913</span><br><span class="line">914</span><br><span class="line">915</span><br><span class="line">916</span><br><span class="line">917</span><br><span class="line">918</span><br><span class="line">919</span><br><span class="line">920</span><br><span class="line">921</span><br><span class="line">922</span><br><span class="line">923</span><br><span class="line">924</span><br><span class="line">925</span><br><span class="line">926</span><br><span class="line">927</span><br><span class="line">928</span><br><span class="line">929</span><br><span class="line">930</span><br><span class="line">931</span><br><span class="line">932</span><br><span class="line">933</span><br><span class="line">934</span><br><span class="line">935</span><br><span class="line">936</span><br><span class="line">937</span><br><span class="line">938</span><br><span class="line">939</span><br><span class="line">940</span><br><span class="line">941</span><br><span class="line">942</span><br><span class="line">943</span><br><span class="line">944</span><br><span class="line">945</span><br><span class="line">946</span><br><span class="line">947</span><br><span class="line">948</span><br><span class="line">949</span><br><span class="line">950</span><br><span class="line">951</span><br><span class="line">952</span><br><span class="line">953</span><br><span class="line">954</span><br><span class="line">955</span><br><span class="line">956</span><br><span class="line">957</span><br><span class="line">958</span><br><span class="line">959</span><br><span class="line">960</span><br><span class="line">961</span><br><span class="line">962</span><br><span class="line">963</span><br><span class="line">964</span><br><span class="line">965</span><br><span class="line">966</span><br><span class="line">967</span><br><span class="line">968</span><br><span class="line">969</span><br><span class="line">970</span><br><span class="line">971</span><br><span class="line">972</span><br><span class="line">973</span><br><span class="line">974</span><br><span class="line">975</span><br><span class="line">976</span><br><span class="line">977</span><br><span class="line">978</span><br><span class="line">979</span><br><span class="line">980</span><br><span class="line">981</span><br><span class="line">982</span><br><span class="line">983</span><br><span class="line">984</span><br><span class="line">985</span><br><span class="line">986</span><br><span class="line">987</span><br><span class="line">988</span><br><span class="line">989</span><br><span class="line">990</span><br><span class="line">991</span><br><span class="line">992</span><br><span class="line">993</span><br><span class="line">994</span><br><span class="line">995</span><br><span class="line">996</span><br><span class="line">997</span><br><span class="line">998</span><br><span class="line">999</span><br><span class="line">1000</span><br><span class="line">1001</span><br><span class="line">1002</span><br><span class="line">1003</span><br><span class="line">1004</span><br><span class="line">1005</span><br><span class="line">1006</span><br><span class="line">1007</span><br><span class="line">1008</span><br><span class="line">1009</span><br><span class="line">1010</span><br><span class="line">1011</span><br><span class="line">1012</span><br><span class="line">1013</span><br><span class="line">1014</span><br><span class="line">1015</span><br><span class="line">1016</span><br><span class="line">1017</span><br><span class="line">1018</span><br><span class="line">1019</span><br><span class="line">1020</span><br><span class="line">1021</span><br><span class="line">1022</span><br><span class="line">1023</span><br><span class="line">1024</span><br><span class="line">1025</span><br><span class="line">1026</span><br><span class="line">1027</span><br><span class="line">1028</span><br><span class="line">1029</span><br><span class="line">1030</span><br><span class="line">1031</span><br><span class="line">1032</span><br><span class="line">1033</span><br><span class="line">1034</span><br><span class="line">1035</span><br><span class="line">1036</span><br><span class="line">1037</span><br><span class="line">1038</span><br><span class="line">1039</span><br><span class="line">1040</span><br><span class="line">1041</span><br><span class="line">1042</span><br><span class="line">1043</span><br><span class="line">1044</span><br><span class="line">1045</span><br><span class="line">1046</span><br><span class="line">1047</span><br><span class="line">1048</span><br><span class="line">1049</span><br><span class="line">1050</span><br><span class="line">1051</span><br><span class="line">1052</span><br><span class="line">1053</span><br><span class="line">1054</span><br><span class="line">1055</span><br><span class="line">1056</span><br><span class="line">1057</span><br><span class="line">1058</span><br><span class="line">1059</span><br><span class="line">1060</span><br><span class="line">1061</span><br><span class="line">1062</span><br><span class="line">1063</span><br><span class="line">1064</span><br><span class="line">1065</span><br><span class="line">1066</span><br><span class="line">1067</span><br><span class="line">1068</span><br><span class="line">1069</span><br><span class="line">1070</span><br><span class="line">1071</span><br><span class="line">1072</span><br><span class="line">1073</span><br><span class="line">1074</span><br><span class="line">1075</span><br><span class="line">1076</span><br><span class="line">1077</span><br><span class="line">1078</span><br><span class="line">1079</span><br><span class="line">1080</span><br><span class="line">1081</span><br><span class="line">1082</span><br><span class="line">1083</span><br><span class="line">1084</span><br><span class="line">1085</span><br><span class="line">1086</span><br><span class="line">1087</span><br><span class="line">1088</span><br><span class="line">1089</span><br><span class="line">1090</span><br><span class="line">1091</span><br><span class="line">1092</span><br><span class="line">1093</span><br><span class="line">1094</span><br><span class="line">1095</span><br><span class="line">1096</span><br><span class="line">1097</span><br><span class="line">1098</span><br><span class="line">1099</span><br><span class="line">1100</span><br><span class="line">1101</span><br><span class="line">1102</span><br><span class="line">1103</span><br><span class="line">1104</span><br><span class="line">1105</span><br><span class="line">1106</span><br><span class="line">1107</span><br><span class="line">1108</span><br><span class="line">1109</span><br><span class="line">1110</span><br><span class="line">1111</span><br><span class="line">1112</span><br><span class="line">1113</span><br><span class="line">1114</span><br><span class="line">1115</span><br><span class="line">1116</span><br><span class="line">1117</span><br><span class="line">1118</span><br><span class="line">1119</span><br><span class="line">1120</span><br><span class="line">1121</span><br><span class="line">1122</span><br><span class="line">1123</span><br><span class="line">1124</span><br><span class="line">1125</span><br><span class="line">1126</span><br><span class="line">1127</span><br><span class="line">1128</span><br><span class="line">1129</span><br><span class="line">1130</span><br><span class="line">1131</span><br><span class="line">1132</span><br><span class="line">1133</span><br><span class="line">1134</span><br><span class="line">1135</span><br><span class="line">1136</span><br><span class="line">1137</span><br><span class="line">1138</span><br><span class="line">1139</span><br><span class="line">1140</span><br><span class="line">1141</span><br><span class="line">1142</span><br><span class="line">1143</span><br><span class="line">1144</span><br><span class="line">1145</span><br><span class="line">1146</span><br><span class="line">1147</span><br><span class="line">1148</span><br><span class="line">1149</span><br><span class="line">1150</span><br><span class="line">1151</span><br><span class="line">1152</span><br><span class="line">1153</span><br><span class="line">1154</span><br><span class="line">1155</span><br><span class="line">1156</span><br><span class="line">1157</span><br><span class="line">1158</span><br><span class="line">1159</span><br><span class="line">1160</span><br><span class="line">1161</span><br><span class="line">1162</span><br><span class="line">1163</span><br><span class="line">1164</span><br><span class="line">1165</span><br><span class="line">1166</span><br><span class="line">1167</span><br><span class="line">1168</span><br><span class="line">1169</span><br><span class="line">1170</span><br><span class="line">1171</span><br><span class="line">1172</span><br><span class="line">1173</span><br><span class="line">1174</span><br><span class="line">1175</span><br><span class="line">1176</span><br><span class="line">1177</span><br><span class="line">1178</span><br><span class="line">1179</span><br><span class="line">1180</span><br><span class="line">1181</span><br><span class="line">1182</span><br><span class="line">1183</span><br><span class="line">1184</span><br><span class="line">1185</span><br><span class="line">1186</span><br><span class="line">1187</span><br><span class="line">1188</span><br><span class="line">1189</span><br><span class="line">1190</span><br><span class="line">1191</span><br><span class="line">1192</span><br><span class="line">1193</span><br><span class="line">1194</span><br><span class="line">1195</span><br><span class="line">1196</span><br><span class="line">1197</span><br><span class="line">1198</span><br><span class="line">1199</span><br><span class="line">1200</span><br><span class="line">1201</span><br><span class="line">1202</span><br><span class="line">1203</span><br><span class="line">1204</span><br><span class="line">1205</span><br><span class="line">1206</span><br><span class="line">1207</span><br><span class="line">1208</span><br><span class="line">1209</span><br><span class="line">1210</span><br><span class="line">1211</span><br><span class="line">1212</span><br><span class="line">1213</span><br><span class="line">1214</span><br><span class="line">1215</span><br><span class="line">1216</span><br><span class="line">1217</span><br><span class="line">1218</span><br><span class="line">1219</span><br><span class="line">1220</span><br><span class="line">1221</span><br><span class="line">1222</span><br><span class="line">1223</span><br><span class="line">1224</span><br><span class="line">1225</span><br><span class="line">1226</span><br><span class="line">1227</span><br><span class="line">1228</span><br><span class="line">1229</span><br><span class="line">1230</span><br><span class="line">1231</span><br><span class="line">1232</span><br><span class="line">1233</span><br><span class="line">1234</span><br><span class="line">1235</span><br><span class="line">1236</span><br><span class="line">1237</span><br><span class="line">1238</span><br><span class="line">1239</span><br><span class="line">1240</span><br><span class="line">1241</span><br><span class="line">1242</span><br><span class="line">1243</span><br><span class="line">1244</span><br><span class="line">1245</span><br><span class="line">1246</span><br><span class="line">1247</span><br><span class="line">1248</span><br><span class="line">1249</span><br><span class="line">1250</span><br><span class="line">1251</span><br><span class="line">1252</span><br><span class="line">1253</span><br><span class="line">1254</span><br><span class="line">1255</span><br><span class="line">1256</span><br><span class="line">1257</span><br><span class="line">1258</span><br><span class="line">1259</span><br><span class="line">1260</span><br><span class="line">1261</span><br><span class="line">1262</span><br><span class="line">1263</span><br><span class="line">1264</span><br><span class="line">1265</span><br><span class="line">1266</span><br><span class="line">1267</span><br><span class="line">1268</span><br><span class="line">1269</span><br><span class="line">1270</span><br><span class="line">1271</span><br><span class="line">1272</span><br><span class="line">1273</span><br><span class="line">1274</span><br><span class="line">1275</span><br><span class="line">1276</span><br><span class="line">1277</span><br><span class="line">1278</span><br><span class="line">1279</span><br><span class="line">1280</span><br><span class="line">1281</span><br><span class="line">1282</span><br><span class="line">1283</span><br><span class="line">1284</span><br><span class="line">1285</span><br><span class="line">1286</span><br><span class="line">1287</span><br><span class="line">1288</span><br><span class="line">1289</span><br><span class="line">1290</span><br><span class="line">1291</span><br><span class="line">1292</span><br><span class="line">1293</span><br><span class="line">1294</span><br><span class="line">1295</span><br><span class="line">1296</span><br><span class="line">1297</span><br><span class="line">1298</span><br><span class="line">1299</span><br><span class="line">1300</span><br><span class="line">1301</span><br><span class="line">1302</span><br><span class="line">1303</span><br><span class="line">1304</span><br><span class="line">1305</span><br><span class="line">1306</span><br><span class="line">1307</span><br><span class="line">1308</span><br><span class="line">1309</span><br><span class="line">1310</span><br><span class="line">1311</span><br><span class="line">1312</span><br><span class="line">1313</span><br><span class="line">1314</span><br><span class="line">1315</span><br><span class="line">1316</span><br><span class="line">1317</span><br><span class="line">1318</span><br><span class="line">1319</span><br><span class="line">1320</span><br><span class="line">1321</span><br><span class="line">1322</span><br><span class="line">1323</span><br><span class="line">1324</span><br><span class="line">1325</span><br><span class="line">1326</span><br><span class="line">1327</span><br><span class="line">1328</span><br><span class="line">1329</span><br><span class="line">1330</span><br><span class="line">1331</span><br><span class="line">1332</span><br><span class="line">1333</span><br><span class="line">1334</span><br><span class="line">1335</span><br><span class="line">1336</span><br><span class="line">1337</span><br><span class="line">1338</span><br><span class="line">1339</span><br><span class="line">1340</span><br><span class="line">1341</span><br><span class="line">1342</span><br><span class="line">1343</span><br><span class="line">1344</span><br><span class="line">1345</span><br><span class="line">1346</span><br><span class="line">1347</span><br><span class="line">1348</span><br><span class="line">1349</span><br><span class="line">1350</span><br><span class="line">1351</span><br><span class="line">1352</span><br><span class="line">1353</span><br><span class="line">1354</span><br><span class="line">1355</span><br><span class="line">1356</span><br><span class="line">1357</span><br><span class="line">1358</span><br><span class="line">1359</span><br><span class="line">1360</span><br><span class="line">1361</span><br><span class="line">1362</span><br><span class="line">1363</span><br><span class="line">1364</span><br><span class="line">1365</span><br><span class="line">1366</span><br><span class="line">1367</span><br><span class="line">1368</span><br><span class="line">1369</span><br><span class="line">1370</span><br><span class="line">1371</span><br><span class="line">1372</span><br><span class="line">1373</span><br><span class="line">1374</span><br><span class="line">1375</span><br><span class="line">1376</span><br><span class="line">1377</span><br><span class="line">1378</span><br><span class="line">1379</span><br><span class="line">1380</span><br><span class="line">1381</span><br><span class="line">1382</span><br><span class="line">1383</span><br><span class="line">1384</span><br><span class="line">1385</span><br><span class="line">1386</span><br><span class="line">1387</span><br><span class="line">1388</span><br><span class="line">1389</span><br><span class="line">1390</span><br><span class="line">1391</span><br><span class="line">1392</span><br><span class="line">1393</span><br><span class="line">1394</span><br><span class="line">1395</span><br><span class="line">1396</span><br><span class="line">1397</span><br><span class="line">1398</span><br><span class="line">1399</span><br><span class="line">1400</span><br><span class="line">1401</span><br><span class="line">1402</span><br><span class="line">1403</span><br><span class="line">1404</span><br><span class="line">1405</span><br><span class="line">1406</span><br><span class="line">1407</span><br><span class="line">1408</span><br><span class="line">1409</span><br><span class="line">1410</span><br><span class="line">1411</span><br><span class="line">1412</span><br><span class="line">1413</span><br><span class="line">1414</span><br><span class="line">1415</span><br><span class="line">1416</span><br><span class="line">1417</span><br><span class="line">1418</span><br><span class="line">1419</span><br><span class="line">1420</span><br><span class="line">1421</span><br><span class="line">1422</span><br><span class="line">1423</span><br><span class="line">1424</span><br><span class="line">1425</span><br><span class="line">1426</span><br><span class="line">1427</span><br><span class="line">1428</span><br><span class="line">1429</span><br><span class="line">1430</span><br><span class="line">1431</span><br><span class="line">1432</span><br><span class="line">1433</span><br><span class="line">1434</span><br><span class="line">1435</span><br><span class="line">1436</span><br><span class="line">1437</span><br><span class="line">1438</span><br><span class="line">1439</span><br><span class="line">1440</span><br><span class="line">1441</span><br><span class="line">1442</span><br><span class="line">1443</span><br><span class="line">1444</span><br><span class="line">1445</span><br><span class="line">1446</span><br><span class="line">1447</span><br><span class="line">1448</span><br><span class="line">1449</span><br><span class="line">1450</span><br><span class="line">1451</span><br><span class="line">1452</span><br><span class="line">1453</span><br><span class="line">1454</span><br><span class="line">1455</span><br><span class="line">1456</span><br><span class="line">1457</span><br><span class="line">1458</span><br><span class="line">1459</span><br><span class="line">1460</span><br><span class="line">1461</span><br><span class="line">1462</span><br><span class="line">1463</span><br><span class="line">1464</span><br><span class="line">1465</span><br><span class="line">1466</span><br><span class="line">1467</span><br><span class="line">1468</span><br><span class="line">1469</span><br><span class="line">1470</span><br><span class="line">1471</span><br><span class="line">1472</span><br><span class="line">1473</span><br><span class="line">1474</span><br><span class="line">1475</span><br><span class="line">1476</span><br><span class="line">1477</span><br><span class="line">1478</span><br><span class="line">1479</span><br><span class="line">1480</span><br><span class="line">1481</span><br><span class="line">1482</span><br><span class="line">1483</span><br><span class="line">1484</span><br><span class="line">1485</span><br><span class="line">1486</span><br><span class="line">1487</span><br><span class="line">1488</span><br><span class="line">1489</span><br><span class="line">1490</span><br><span class="line">1491</span><br><span class="line">1492</span><br><span class="line">1493</span><br><span class="line">1494</span><br><span class="line">1495</span><br><span class="line">1496</span><br><span class="line">1497</span><br><span class="line">1498</span><br><span class="line">1499</span><br><span class="line">1500</span><br><span class="line">1501</span><br><span class="line">1502</span><br><span class="line">1503</span><br><span class="line">1504</span><br><span class="line">1505</span><br><span class="line">1506</span><br><span class="line">1507</span><br><span class="line">1508</span><br><span class="line">1509</span><br><span class="line">1510</span><br><span class="line">1511</span><br><span class="line">1512</span><br><span class="line">1513</span><br><span class="line">1514</span><br><span class="line">1515</span><br><span class="line">1516</span><br><span class="line">1517</span><br><span class="line">1518</span><br><span class="line">1519</span><br><span class="line">1520</span><br><span class="line">1521</span><br><span class="line">1522</span><br><span class="line">1523</span><br><span class="line">1524</span><br><span class="line">1525</span><br><span class="line">1526</span><br><span class="line">1527</span><br><span class="line">1528</span><br><span class="line">1529</span><br><span class="line">1530</span><br><span class="line">1531</span><br><span class="line">1532</span><br><span class="line">1533</span><br><span class="line">1534</span><br><span class="line">1535</span><br><span class="line">1536</span><br><span class="line">1537</span><br><span class="line">1538</span><br><span class="line">1539</span><br><span class="line">1540</span><br><span class="line">1541</span><br><span class="line">1542</span><br><span class="line">1543</span><br><span class="line">1544</span><br><span class="line">1545</span><br><span class="line">1546</span><br><span class="line">1547</span><br><span class="line">1548</span><br><span class="line">1549</span><br><span class="line">1550</span><br><span class="line">1551</span><br><span class="line">1552</span><br><span class="line">1553</span><br><span class="line">1554</span><br><span class="line">1555</span><br><span class="line">1556</span><br><span class="line">1557</span><br><span class="line">1558</span><br><span class="line">1559</span><br><span class="line">1560</span><br><span class="line">1561</span><br><span class="line">1562</span><br><span class="line">1563</span><br><span class="line">1564</span><br><span class="line">1565</span><br><span class="line">1566</span><br><span class="line">1567</span><br><span class="line">1568</span><br><span class="line">1569</span><br><span class="line">1570</span><br><span class="line">1571</span><br><span class="line">1572</span><br><span class="line">1573</span><br><span class="line">1574</span><br><span class="line">1575</span><br><span class="line">1576</span><br><span class="line">1577</span><br><span class="line">1578</span><br><span class="line">1579</span><br><span class="line">1580</span><br><span class="line">1581</span><br><span class="line">1582</span><br><span class="line">1583</span><br><span class="line">1584</span><br><span class="line">1585</span><br><span class="line">1586</span><br><span class="line">1587</span><br><span class="line">1588</span><br><span class="line">1589</span><br><span class="line">1590</span><br><span class="line">1591</span><br><span class="line">1592</span><br><span class="line">1593</span><br><span class="line">1594</span><br><span class="line">1595</span><br><span class="line">1596</span><br><span class="line">1597</span><br><span class="line">1598</span><br><span class="line">1599</span><br><span class="line">1600</span><br><span class="line">1601</span><br><span class="line">1602</span><br><span class="line">1603</span><br><span class="line">1604</span><br><span class="line">1605</span><br><span class="line">1606</span><br><span class="line">1607</span><br><span class="line">1608</span><br><span class="line">1609</span><br><span class="line">1610</span><br><span class="line">1611</span><br><span class="line">1612</span><br><span class="line">1613</span><br><span class="line">1614</span><br><span class="line">1615</span><br><span class="line">1616</span><br><span class="line">1617</span><br><span class="line">1618</span><br><span class="line">1619</span><br><span class="line">1620</span><br><span class="line">1621</span><br><span class="line">1622</span><br><span class="line">1623</span><br><span class="line">1624</span><br><span class="line">1625</span><br><span class="line">1626</span><br><span class="line">1627</span><br><span class="line">1628</span><br><span class="line">1629</span><br><span class="line">1630</span><br><span class="line">1631</span><br><span class="line">1632</span><br><span class="line">1633</span><br><span class="line">1634</span><br><span class="line">1635</span><br><span class="line">1636</span><br><span class="line">1637</span><br><span class="line">1638</span><br><span class="line">1639</span><br><span class="line">1640</span><br><span class="line">1641</span><br><span class="line">1642</span><br><span class="line">1643</span><br><span class="line">1644</span><br><span class="line">1645</span><br><span class="line">1646</span><br><span class="line">1647</span><br><span class="line">1648</span><br><span class="line">1649</span><br><span class="line">1650</span><br><span class="line">1651</span><br><span class="line">1652</span><br><span class="line">1653</span><br><span class="line">1654</span><br><span class="line">1655</span><br><span class="line">1656</span><br><span class="line">1657</span><br><span class="line">1658</span><br><span class="line">1659</span><br><span class="line">1660</span><br><span class="line">1661</span><br><span class="line">1662</span><br><span class="line">1663</span><br><span class="line">1664</span><br><span class="line">1665</span><br><span class="line">1666</span><br><span class="line">1667</span><br><span class="line">1668</span><br><span class="line">1669</span><br><span class="line">1670</span><br><span class="line">1671</span><br><span class="line">1672</span><br><span class="line">1673</span><br><span class="line">1674</span><br><span class="line">1675</span><br><span class="line">1676</span><br><span class="line">1677</span><br><span class="line">1678</span><br><span class="line">1679</span><br><span class="line">1680</span><br><span class="line">1681</span><br><span class="line">1682</span><br><span class="line">1683</span><br><span class="line">1684</span><br><span class="line">1685</span><br><span class="line">1686</span><br><span class="line">1687</span><br><span class="line">1688</span><br><span class="line">1689</span><br><span class="line">1690</span><br><span class="line">1691</span><br><span class="line">1692</span><br><span class="line">1693</span><br><span class="line">1694</span><br><span class="line">1695</span><br><span class="line">1696</span><br><span class="line">1697</span><br><span class="line">1698</span><br><span class="line">1699</span><br><span class="line">1700</span><br><span class="line">1701</span><br><span class="line">1702</span><br><span class="line">1703</span><br><span class="line">1704</span><br><span class="line">1705</span><br><span class="line">1706</span><br><span class="line">1707</span><br><span class="line">1708</span><br><span class="line">1709</span><br><span class="line">1710</span><br><span class="line">1711</span><br><span class="line">1712</span><br><span class="line">1713</span><br><span class="line">1714</span><br><span class="line">1715</span><br><span class="line">1716</span><br><span class="line">1717</span><br><span class="line">1718</span><br><span class="line">1719</span><br><span class="line">1720</span><br><span class="line">1721</span><br><span class="line">1722</span><br><span class="line">1723</span><br><span class="line">1724</span><br><span class="line">1725</span><br><span class="line">1726</span><br><span class="line">1727</span><br><span class="line">1728</span><br><span class="line">1729</span><br><span class="line">1730</span><br><span class="line">1731</span><br><span class="line">1732</span><br><span class="line">1733</span><br><span class="line">1734</span><br><span class="line">1735</span><br><span class="line">1736</span><br><span class="line">1737</span><br><span class="line">1738</span><br><span class="line">1739</span><br><span class="line">1740</span><br><span class="line">1741</span><br><span class="line">1742</span><br><span class="line">1743</span><br><span class="line">1744</span><br><span class="line">1745</span><br><span class="line">1746</span><br><span class="line">1747</span><br><span class="line">1748</span><br><span class="line">1749</span><br><span class="line">1750</span><br><span class="line">1751</span><br><span class="line">1752</span><br><span class="line">1753</span><br><span class="line">1754</span><br><span class="line">1755</span><br><span class="line">1756</span><br><span class="line">1757</span><br><span class="line">1758</span><br><span class="line">1759</span><br><span class="line">1760</span><br><span class="line">1761</span><br><span class="line">1762</span><br><span class="line">1763</span><br><span class="line">1764</span><br><span class="line">1765</span><br><span class="line">1766</span><br><span class="line">1767</span><br><span class="line">1768</span><br><span class="line">1769</span><br><span class="line">1770</span><br><span class="line">1771</span><br><span class="line">1772</span><br><span class="line">1773</span><br><span class="line">1774</span><br><span class="line">1775</span><br><span class="line">1776</span><br><span class="line">1777</span><br><span class="line">1778</span><br><span class="line">1779</span><br><span class="line">1780</span><br><span class="line">1781</span><br><span class="line">1782</span><br><span class="line">1783</span><br><span class="line">1784</span><br><span class="line">1785</span><br><span class="line">1786</span><br><span class="line">1787</span><br><span class="line">1788</span><br><span class="line">1789</span><br><span class="line">1790</span><br><span class="line">1791</span><br><span class="line">1792</span><br><span class="line">1793</span><br><span class="line">1794</span><br><span class="line">1795</span><br><span class="line">1796</span><br><span class="line">1797</span><br><span class="line">1798</span><br><span class="line">1799</span><br><span class="line">1800</span><br><span class="line">1801</span><br><span class="line">1802</span><br><span class="line">1803</span><br><span class="line">1804</span><br><span class="line">1805</span><br><span class="line">1806</span><br><span class="line">1807</span><br><span class="line">1808</span><br><span class="line">1809</span><br><span class="line">1810</span><br><span class="line">1811</span><br><span class="line">1812</span><br><span class="line">1813</span><br><span class="line">1814</span><br><span class="line">1815</span><br><span class="line">1816</span><br><span class="line">1817</span><br><span class="line">1818</span><br><span class="line">1819</span><br><span class="line">1820</span><br><span class="line">1821</span><br><span class="line">1822</span><br><span class="line">1823</span><br><span class="line">1824</span><br><span class="line">1825</span><br><span class="line">1826</span><br><span class="line">1827</span><br><span class="line">1828</span><br><span class="line">1829</span><br><span class="line">1830</span><br><span class="line">1831</span><br><span class="line">1832</span><br><span class="line">1833</span><br><span class="line">1834</span><br><span class="line">1835</span><br><span class="line">1836</span><br><span class="line">1837</span><br><span class="line">1838</span><br><span class="line">1839</span><br><span class="line">1840</span><br><span class="line">1841</span><br><span class="line">1842</span><br><span class="line">1843</span><br><span class="line">1844</span><br><span class="line">1845</span><br><span class="line">1846</span><br><span class="line">1847</span><br><span class="line">1848</span><br><span class="line">1849</span><br><span class="line">1850</span><br><span class="line">1851</span><br><span class="line">1852</span><br><span class="line">1853</span><br><span class="line">1854</span><br><span class="line">1855</span><br><span class="line">1856</span><br><span class="line">1857</span><br><span class="line">1858</span><br><span class="line">1859</span><br><span class="line">1860</span><br><span class="line">1861</span><br><span class="line">1862</span><br><span class="line">1863</span><br><span class="line">1864</span><br><span class="line">1865</span><br><span class="line">1866</span><br><span class="line">1867</span><br><span class="line">1868</span><br><span class="line">1869</span><br><span class="line">1870</span><br><span class="line">1871</span><br><span class="line">1872</span><br><span class="line">1873</span><br><span class="line">1874</span><br><span class="line">1875</span><br><span class="line">1876</span><br><span class="line">1877</span><br><span class="line">1878</span><br><span class="line">1879</span><br><span class="line">1880</span><br><span class="line">1881</span><br><span class="line">1882</span><br><span class="line">1883</span><br><span class="line">1884</span><br><span class="line">1885</span><br><span class="line">1886</span><br><span class="line">1887</span><br><span class="line">1888</span><br><span class="line">1889</span><br><span class="line">1890</span><br><span class="line">1891</span><br><span class="line">1892</span><br><span class="line">1893</span><br><span class="line">1894</span><br><span class="line">1895</span><br><span class="line">1896</span><br><span class="line">1897</span><br><span class="line">1898</span><br><span class="line">1899</span><br><span class="line">1900</span><br><span class="line">1901</span><br><span class="line">1902</span><br><span class="line">1903</span><br><span class="line">1904</span><br><span class="line">1905</span><br><span class="line">1906</span><br><span class="line">1907</span><br><span class="line">1908</span><br><span class="line">1909</span><br><span class="line">1910</span><br><span class="line">1911</span><br><span class="line">1912</span><br><span class="line">1913</span><br><span class="line">1914</span><br><span class="line">1915</span><br><span class="line">1916</span><br><span class="line">1917</span><br><span class="line">1918</span><br><span class="line">1919</span><br><span class="line">1920</span><br><span class="line">1921</span><br><span class="line">1922</span><br><span class="line">1923</span><br><span class="line">1924</span><br><span class="line">1925</span><br><span class="line">1926</span><br><span class="line">1927</span><br><span class="line">1928</span><br><span class="line">1929</span><br><span class="line">1930</span><br><span class="line">1931</span><br><span class="line">1932</span><br><span class="line">1933</span><br><span class="line">1934</span><br><span class="line">1935</span><br><span class="line">1936</span><br><span class="line">1937</span><br><span class="line">1938</span><br><span class="line">1939</span><br><span class="line">1940</span><br><span class="line">1941</span><br><span class="line">1942</span><br><span class="line">1943</span><br><span class="line">1944</span><br><span class="line">1945</span><br><span class="line">1946</span><br><span class="line">1947</span><br><span class="line">1948</span><br><span class="line">1949</span><br><span class="line">1950</span><br><span class="line">1951</span><br><span class="line">1952</span><br><span class="line">1953</span><br><span class="line">1954</span><br><span class="line">1955</span><br><span class="line">1956</span><br><span class="line">1957</span><br><span class="line">1958</span><br><span class="line">1959</span><br><span class="line">1960</span><br><span class="line">1961</span><br><span class="line">1962</span><br><span class="line">1963</span><br><span class="line">1964</span><br><span class="line">1965</span><br><span class="line">1966</span><br><span class="line">1967</span><br><span class="line">1968</span><br><span class="line">1969</span><br><span class="line">1970</span><br><span class="line">1971</span><br><span class="line">1972</span><br><span class="line">1973</span><br><span class="line">1974</span><br><span class="line">1975</span><br><span class="line">1976</span><br><span class="line">1977</span><br><span class="line">1978</span><br><span class="line">1979</span><br><span class="line">1980</span><br><span class="line">1981</span><br><span class="line">1982</span><br><span class="line">1983</span><br><span class="line">1984</span><br><span class="line">1985</span><br><span class="line">1986</span><br><span class="line">1987</span><br><span class="line">1988</span><br><span class="line">1989</span><br><span class="line">1990</span><br><span class="line">1991</span><br><span class="line">1992</span><br><span class="line">1993</span><br><span class="line">1994</span><br><span class="line">1995</span><br><span class="line">1996</span><br><span class="line">1997</span><br><span class="line">1998</span><br><span class="line">1999</span><br><span class="line">2000</span><br><span class="line">2001</span><br><span class="line">2002</span><br><span class="line">2003</span><br><span class="line">2004</span><br><span class="line">2005</span><br><span class="line">2006</span><br><span class="line">2007</span><br><span class="line">2008</span><br><span class="line">2009</span><br><span class="line">2010</span><br><span class="line">2011</span><br><span class="line">2012</span><br><span class="line">2013</span><br><span class="line">2014</span><br><span class="line">2015</span><br><span class="line">2016</span><br><span class="line">2017</span><br><span class="line">2018</span><br><span class="line">2019</span><br><span class="line">2020</span><br><span class="line">2021</span><br><span class="line">2022</span><br><span class="line">2023</span><br><span class="line">2024</span><br><span class="line">2025</span><br><span class="line">2026</span><br><span class="line">2027</span><br><span class="line">2028</span><br><span class="line">2029</span><br><span class="line">2030</span><br><span class="line">2031</span><br><span class="line">2032</span><br><span class="line">2033</span><br><span class="line">2034</span><br><span class="line">2035</span><br><span class="line">2036</span><br><span class="line">2037</span><br><span class="line">2038</span><br><span class="line">2039</span><br><span class="line">2040</span><br><span class="line">2041</span><br><span class="line">2042</span><br><span class="line">2043</span><br><span class="line">2044</span><br><span class="line">2045</span><br><span class="line">2046</span><br><span class="line">2047</span><br><span class="line">2048</span><br><span class="line">2049</span><br><span class="line">2050</span><br><span class="line">2051</span><br><span class="line">2052</span><br><span class="line">2053</span><br><span class="line">2054</span><br><span class="line">2055</span><br><span class="line">2056</span><br><span class="line">2057</span><br><span class="line">2058</span><br><span class="line">2059</span><br><span class="line">2060</span><br><span class="line">2061</span><br><span class="line">2062</span><br><span class="line">2063</span><br><span class="line">2064</span><br><span class="line">2065</span><br><span class="line">2066</span><br><span class="line">2067</span><br><span class="line">2068</span><br><span class="line">2069</span><br><span class="line">2070</span><br><span class="line">2071</span><br><span class="line">2072</span><br><span class="line">2073</span><br><span class="line">2074</span><br><span class="line">2075</span><br><span class="line">2076</span><br><span class="line">2077</span><br><span class="line">2078</span><br><span class="line">2079</span><br><span class="line">2080</span><br><span class="line">2081</span><br><span class="line">2082</span><br><span class="line">2083</span><br><span class="line">2084</span><br><span class="line">2085</span><br><span class="line">2086</span><br><span class="line">2087</span><br><span class="line">2088</span><br><span class="line">2089</span><br><span class="line">2090</span><br><span class="line">2091</span><br><span class="line">2092</span><br><span class="line">2093</span><br><span class="line">2094</span><br><span class="line">2095</span><br><span class="line">2096</span><br><span class="line">2097</span><br><span class="line">2098</span><br><span class="line">2099</span><br><span class="line">2100</span><br><span class="line">2101</span><br><span class="line">2102</span><br><span class="line">2103</span><br><span class="line">2104</span><br><span class="line">2105</span><br><span class="line">2106</span><br><span class="line">2107</span><br><span class="line">2108</span><br><span class="line">2109</span><br><span class="line">2110</span><br><span class="line">2111</span><br><span class="line">2112</span><br><span class="line">2113</span><br><span class="line">2114</span><br><span class="line">2115</span><br><span class="line">2116</span><br><span class="line">2117</span><br><span class="line">2118</span><br><span class="line">2119</span><br><span class="line">2120</span><br><span class="line">2121</span><br><span class="line">2122</span><br><span class="line">2123</span><br><span class="line">2124</span><br><span class="line">2125</span><br><span class="line">2126</span><br><span class="line">2127</span><br><span class="line">2128</span><br><span class="line">2129</span><br><span class="line">2130</span><br><span class="line">2131</span><br><span class="line">2132</span><br><span class="line">2133</span><br><span class="line">2134</span><br><span class="line">2135</span><br><span class="line">2136</span><br><span class="line">2137</span><br><span class="line">2138</span><br><span class="line">2139</span><br><span class="line">2140</span><br><span class="line">2141</span><br><span class="line">2142</span><br><span class="line">2143</span><br><span class="line">2144</span><br><span class="line">2145</span><br><span class="line">2146</span><br><span class="line">2147</span><br><span class="line">2148</span><br><span class="line">2149</span><br><span class="line">2150</span><br><span class="line">2151</span><br><span class="line">2152</span><br><span class="line">2153</span><br><span class="line">2154</span><br><span class="line">2155</span><br><span class="line">2156</span><br><span class="line">2157</span><br><span class="line">2158</span><br><span class="line">2159</span><br><span class="line">2160</span><br><span class="line">2161</span><br><span class="line">2162</span><br><span class="line">2163</span><br><span class="line">2164</span><br><span class="line">2165</span><br><span class="line">2166</span><br><span class="line">2167</span><br><span class="line">2168</span><br><span class="line">2169</span><br><span class="line">2170</span><br><span class="line">2171</span><br><span class="line">2172</span><br><span class="line">2173</span><br><span class="line">2174</span><br><span class="line">2175</span><br><span class="line">2176</span><br><span class="line">2177</span><br><span class="line">2178</span><br><span class="line">2179</span><br><span class="line">2180</span><br><span class="line">2181</span><br><span class="line">2182</span><br><span class="line">2183</span><br><span class="line">2184</span><br><span class="line">2185</span><br><span class="line">2186</span><br><span class="line">2187</span><br><span class="line">2188</span><br><span class="line">2189</span><br><span class="line">2190</span><br><span class="line">2191</span><br><span class="line">2192</span><br><span class="line">2193</span><br><span class="line">2194</span><br><span class="line">2195</span><br><span class="line">2196</span><br><span class="line">2197</span><br><span class="line">2198</span><br><span class="line">2199</span><br></pre></td><td class="code"><pre><span class="line">getDeclaredMethods()获得的方法的名字是:getMainProjectPath</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:exportTextFileData</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.StringBuffer</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.io.File</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型void</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有private</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:getCurrentWorkDir</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:getCurveDimension</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:changeCurveDepthRange</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是double</span><br><span class="line">getDeclaredMethods()获得的参数的类型是double</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:isCategoryExisted</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:isCategoryExisted</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class cif.dataengine.DataPath</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有private</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:getSysInstallationPath</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:getSysResourcePath</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:createBulkCurve3D</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是double</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是double</span><br><span class="line">getDeclaredMethods()获得的参数的类型是double</span><br><span class="line">getDeclaredMethods()获得的参数的类型是double</span><br><span class="line">getDeclaredMethods()获得的参数的类型是double</span><br><span class="line">getDeclaredMethods()获得的参数的类型是double</span><br><span class="line">getDeclaredMethods()获得的参数的类型是double</span><br><span class="line">getDeclaredMethods()获得的参数的类型是double</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:getCommonTableName</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:getCategoryDepthUnit</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:getCommonTableCount</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:getCurveStartDepth</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型double</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:getCurveDepthLevel</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型double</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:setCurveDepthLevel</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是double</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:spliceFilePath</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:createCurveEx</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是double</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是double</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:closeCifp</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型void</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:createWell</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:createCifp</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:createCifp</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:createCurve</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是double</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是double</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是boolean</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有private</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:createCurve</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是double</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是double</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:createCurve</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是double</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是double</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:getWellPropertiesItemValue</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:setWellPropertiesItemValue</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型void</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:flush</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型void</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:getID</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有private</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:openCifp</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:getCurve3DName</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:getCurve2DName</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:writeBulkCurve3D</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是double</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class [[[F</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:writeBulkCurve3D</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是double</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class [F</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:getCurve1DCount</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:getCurveEndDepth</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型double</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:getCurveXLevel</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型double</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:getCurveXCount</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:getCurveXUnit</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:readCurve1D</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是double</span><br><span class="line">getDeclaredMethods()获得的参数的类型是double</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class [F</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:readCurve1D</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是double</span><br><span class="line">getDeclaredMethods()获得的参数的类型是double</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class [F</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:readCurve1D</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是double</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class [F</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:readCurve1D</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是double</span><br><span class="line">getDeclaredMethods()获得的参数的类型是double</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class [F</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class cif.dataengine.io.ReadMode</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有private</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:readCurve1D</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是double</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class [F</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:readCurve1D</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是double</span><br><span class="line">getDeclaredMethods()获得的参数的类型是double</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class [F</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:writeCurve1D</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是double</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class [F</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:getCurveYMin</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型double</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:getCurveYLevel</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型double</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:getCurveYMax</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型double</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:getCurveYCount</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:getCurveYUnit</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:getCurve3DCount</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:reacBulkCurve3D</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是double</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class [F</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:reacBulkCurve3D</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是double</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class [[[F</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:getCurveXMin</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型double</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:getCurve1DName</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:writeCurve2D</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是double</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class [F</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:readCurve2D</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是double</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class [F</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:readCurve2D</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是double</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class [F</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:readCurve2D</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是double</span><br><span class="line">getDeclaredMethods()获得的参数的类型是double</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class [F</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:readCurve2D</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是double</span><br><span class="line">getDeclaredMethods()获得的参数的类型是double</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class [F</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:readCurve2D</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是double</span><br><span class="line">getDeclaredMethods()获得的参数的类型是double</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class [F</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class cif.dataengine.io.ReadMode</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有private</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:readCurve2D</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是double</span><br><span class="line">getDeclaredMethods()获得的参数的类型是double</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class [F</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:readCurve2D</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是double</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class [S</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:readCurve3D</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是double</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class [F</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:readCurve3D</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是double</span><br><span class="line">getDeclaredMethods()获得的参数的类型是double</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class [F</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:readCurve3D</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是double</span><br><span class="line">getDeclaredMethods()获得的参数的类型是double</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class [F</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:readCurve3D</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是double</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class [F</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:getCurve2DCount</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:writeCurve3D</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是double</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class [F</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:isCurveExisted</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:getCurveXMax</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型double</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:writeTable</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:writeTable</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class [F</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:writeTable</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是float</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:writeTable</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class [Ljava.lang.String;</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:deleteTable</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:copyCurve</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:getCurveArrayNum</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:getCurveUnit</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:getCurveProperty</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型class cif.dataservice.io.CurveProperty</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:createTable</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:getTableRowCount</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:deleteCurve</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:readTable</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class [Ljava.lang.String;</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:readTable</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class [F</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:readTable</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:readTable_x</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型float</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:copyTable</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:flushAll</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型void</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:getTableColumnCount</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:addWellNotification</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class cif.dataengine.io.LogWell</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型void</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有private</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:changeCurveDepthLevel</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class cif.dataengine.io.LogCategory</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class cif.dataengine.io.LogCurve</span><br><span class="line">getDeclaredMethods()获得的参数的类型是double</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型class cif.dataengine.io.LogCurve</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有private</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:setCurveInterpolation</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型void</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:getCurveTimeSampleLevel</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型float</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:getCurveDepthUnit</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:getCommonTableColumnName</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:removeTableAllRecords</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型void</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:computReadRowCount</span><br><span class="line">getDeclaredMethods()获得的参数的类型是byte</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class cif.dataengine.io.LoggingProperties</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有private</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:addCategoryNotification</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class cif.dataservice.io.ReferCategoryStruct</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型void</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有private</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:getCurveArraySize</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:dispatchNotification</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型void</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:createRemoteCategory</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class cif.dataengine.DataPath</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有private</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:createLocalCategory</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class cif.dataengine.DataPath</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有private</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:createDocument</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:createDocument</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:readDocument</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:readDocument</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class [B</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:writeDocument</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class [B</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:copyCurveAction</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class cif.dataengine.io.LogCategory</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class cif.dataengine.io.LogCurve</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型class cif.dataengine.io.LogCurve</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有private</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:writeCurve_3D</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是double</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class [F</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有private</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:writeCurve_2D</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是double</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class [F</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有private</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:writeTableData</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class cif.dataengine.io.LogTable</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class [Ljava.lang.String;</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有private</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:writeTableData</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class cif.dataengine.io.LogTable</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class [F</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有private</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:writeTableData</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class cif.dataengine.io.LogTable</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有private</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:readCurve_3D</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是double</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class [F</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有private</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:readCurve_3D</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是double</span><br><span class="line">getDeclaredMethods()获得的参数的类型是double</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class [F</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class cif.dataengine.io.ReadMode</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有private</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:readCurve_3D</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是double</span><br><span class="line">getDeclaredMethods()获得的参数的类型是double</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class [F</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class cif.dataengine.io.ReadMode</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有private</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:readCurve_3D</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是double</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class [F</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有private</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:readTableData</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class cif.dataengine.io.LogTable</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class [Ljava.lang.String;</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有private</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:readTableData</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class cif.dataengine.io.LogTable</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class [F</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有private</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:getDocSize</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:buildCurveXD</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是double</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是double</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型class cif.dataengine.io.CurveXD</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有private</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:writeCurve_1D</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是double</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class [F</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有private</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:readCurve_2D</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是double</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class [F</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有private</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:readCurve_2D</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是double</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class [S</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有private</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:readCurve_2D</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是double</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class [F</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有private</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:createLocalWell</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class cif.dataengine.DataPath</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有private</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:readCurve_1D</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是double</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class [F</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有private</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:readCurve_1D</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getDeclaredMethods()获得的参数的类型是double</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是int</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class [F</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有private</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getDeclaredMethods()获得的方法的名字是:getCategoryID</span><br><span class="line">getDeclaredMethods()获得的参数的类型是class cif.dataengine.DataPath</span><br><span class="line">getDeclaredMethods()获得的方法的返回值的类型int</span><br><span class="line">getDeclaredMethods()获得的方法的修饰符有private</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:getMainProjectPath</span><br><span class="line">getMethods()获得的方法的返回值的类型class java.lang.String</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:getCurrentWorkDir</span><br><span class="line">getMethods()获得的方法的返回值的类型class java.lang.String</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:getCurveDimension</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的方法的返回值的类型int</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">Parameter Name: arg1</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:changeCurveDepthRange</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的参数的类型是double</span><br><span class="line">getMethods()获得的参数的类型是double</span><br><span class="line">getMethods()获得的方法的返回值的类型int</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">Parameter Name: arg1</span><br><span class="line">Parameter Name: arg2</span><br><span class="line">Parameter Name: arg3</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:isCategoryExisted</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的方法的返回值的类型int</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:getSysInstallationPath</span><br><span class="line">getMethods()获得的方法的返回值的类型class java.lang.String</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:getSysResourcePath</span><br><span class="line">getMethods()获得的方法的返回值的类型class java.lang.String</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:createBulkCurve3D</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的参数的类型是double</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是double</span><br><span class="line">getMethods()获得的参数的类型是double</span><br><span class="line">getMethods()获得的参数的类型是double</span><br><span class="line">getMethods()获得的参数的类型是double</span><br><span class="line">getMethods()获得的参数的类型是double</span><br><span class="line">getMethods()获得的参数的类型是double</span><br><span class="line">getMethods()获得的参数的类型是double</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的方法的返回值的类型int</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">Parameter Name: arg1</span><br><span class="line">Parameter Name: arg2</span><br><span class="line">Parameter Name: arg3</span><br><span class="line">Parameter Name: arg4</span><br><span class="line">Parameter Name: arg5</span><br><span class="line">Parameter Name: arg6</span><br><span class="line">Parameter Name: arg7</span><br><span class="line">Parameter Name: arg8</span><br><span class="line">Parameter Name: arg9</span><br><span class="line">Parameter Name: arg10</span><br><span class="line">Parameter Name: arg11</span><br><span class="line">Parameter Name: arg12</span><br><span class="line">Parameter Name: arg13</span><br><span class="line">Parameter Name: arg14</span><br><span class="line">Parameter Name: arg15</span><br><span class="line">Parameter Name: arg16</span><br><span class="line">Parameter Name: arg17</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:getCommonTableName</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的方法的返回值的类型class java.lang.String</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">Parameter Name: arg1</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:getCategoryDepthUnit</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的方法的返回值的类型int</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:getCommonTableCount</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的方法的返回值的类型int</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:getCurveStartDepth</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的方法的返回值的类型double</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">Parameter Name: arg1</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:getCurveDepthLevel</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的方法的返回值的类型double</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">Parameter Name: arg1</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:setCurveDepthLevel</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的参数的类型是double</span><br><span class="line">getMethods()获得的方法的返回值的类型int</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">Parameter Name: arg1</span><br><span class="line">Parameter Name: arg2</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:spliceFilePath</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的方法的返回值的类型class java.lang.String</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">Parameter Name: arg1</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:createCurveEx</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是double</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是double</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的方法的返回值的类型int</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">Parameter Name: arg1</span><br><span class="line">Parameter Name: arg2</span><br><span class="line">Parameter Name: arg3</span><br><span class="line">Parameter Name: arg4</span><br><span class="line">Parameter Name: arg5</span><br><span class="line">Parameter Name: arg6</span><br><span class="line">Parameter Name: arg7</span><br><span class="line">Parameter Name: arg8</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:closeCifp</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的方法的返回值的类型void</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:createWell</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的方法的返回值的类型int</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:createCifp</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的方法的返回值的类型int</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:createCifp</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的方法的返回值的类型int</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">Parameter Name: arg1</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:createCurve</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是double</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是double</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的方法的返回值的类型int</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">Parameter Name: arg1</span><br><span class="line">Parameter Name: arg2</span><br><span class="line">Parameter Name: arg3</span><br><span class="line">Parameter Name: arg4</span><br><span class="line">Parameter Name: arg5</span><br><span class="line">Parameter Name: arg6</span><br><span class="line">Parameter Name: arg7</span><br><span class="line">Parameter Name: arg8</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:createCurve</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是double</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是double</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的方法的返回值的类型int</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">Parameter Name: arg1</span><br><span class="line">Parameter Name: arg2</span><br><span class="line">Parameter Name: arg3</span><br><span class="line">Parameter Name: arg4</span><br><span class="line">Parameter Name: arg5</span><br><span class="line">Parameter Name: arg6</span><br><span class="line">Parameter Name: arg7</span><br><span class="line">Parameter Name: arg8</span><br><span class="line">Parameter Name: arg9</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:getWellPropertiesItemValue</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的方法的返回值的类型class java.lang.String</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">Parameter Name: arg1</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:setWellPropertiesItemValue</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的方法的返回值的类型void</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">Parameter Name: arg1</span><br><span class="line">Parameter Name: arg2</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:flush</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的方法的返回值的类型void</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">Parameter Name: arg1</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:openCifp</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的方法的返回值的类型int</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:getCurve3DName</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的方法的返回值的类型class java.lang.String</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">Parameter Name: arg1</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:getCurve2DName</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的方法的返回值的类型class java.lang.String</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">Parameter Name: arg1</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:writeBulkCurve3D</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的参数的类型是double</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class [[[F</span><br><span class="line">getMethods()获得的方法的返回值的类型int</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">Parameter Name: arg1</span><br><span class="line">Parameter Name: arg2</span><br><span class="line">Parameter Name: arg3</span><br><span class="line">Parameter Name: arg4</span><br><span class="line">Parameter Name: arg5</span><br><span class="line">Parameter Name: arg6</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:writeBulkCurve3D</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的参数的类型是double</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class [F</span><br><span class="line">getMethods()获得的方法的返回值的类型int</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">Parameter Name: arg1</span><br><span class="line">Parameter Name: arg2</span><br><span class="line">Parameter Name: arg3</span><br><span class="line">Parameter Name: arg4</span><br><span class="line">Parameter Name: arg5</span><br><span class="line">Parameter Name: arg6</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:getCurve1DCount</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的方法的返回值的类型int</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:getCurveEndDepth</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的方法的返回值的类型double</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">Parameter Name: arg1</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:getCurveXLevel</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的方法的返回值的类型double</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">Parameter Name: arg1</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:getCurveXCount</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的方法的返回值的类型int</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">Parameter Name: arg1</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:getCurveXUnit</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的方法的返回值的类型class java.lang.String</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">Parameter Name: arg1</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:readCurve1D</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的参数的类型是double</span><br><span class="line">getMethods()获得的参数的类型是double</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class [F</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的方法的返回值的类型int</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">Parameter Name: arg1</span><br><span class="line">Parameter Name: arg2</span><br><span class="line">Parameter Name: arg3</span><br><span class="line">Parameter Name: arg4</span><br><span class="line">Parameter Name: arg5</span><br><span class="line">Parameter Name: arg6</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:readCurve1D</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的参数的类型是double</span><br><span class="line">getMethods()获得的参数的类型是double</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class [F</span><br><span class="line">getMethods()获得的方法的返回值的类型int</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">Parameter Name: arg1</span><br><span class="line">Parameter Name: arg2</span><br><span class="line">Parameter Name: arg3</span><br><span class="line">Parameter Name: arg4</span><br><span class="line">Parameter Name: arg5</span><br><span class="line">Parameter Name: arg6</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:readCurve1D</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的参数的类型是double</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class [F</span><br><span class="line">getMethods()获得的方法的返回值的类型int</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">Parameter Name: arg1</span><br><span class="line">Parameter Name: arg2</span><br><span class="line">Parameter Name: arg3</span><br><span class="line">Parameter Name: arg4</span><br><span class="line">Parameter Name: arg5</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:readCurve1D</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的参数的类型是double</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class [F</span><br><span class="line">getMethods()获得的方法的返回值的类型int</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">Parameter Name: arg1</span><br><span class="line">Parameter Name: arg2</span><br><span class="line">Parameter Name: arg3</span><br><span class="line">Parameter Name: arg4</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:readCurve1D</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的参数的类型是double</span><br><span class="line">getMethods()获得的参数的类型是double</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class [F</span><br><span class="line">getMethods()获得的方法的返回值的类型int</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">Parameter Name: arg1</span><br><span class="line">Parameter Name: arg2</span><br><span class="line">Parameter Name: arg3</span><br><span class="line">Parameter Name: arg4</span><br><span class="line">Parameter Name: arg5</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:writeCurve1D</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的参数的类型是double</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class [F</span><br><span class="line">getMethods()获得的方法的返回值的类型int</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">Parameter Name: arg1</span><br><span class="line">Parameter Name: arg2</span><br><span class="line">Parameter Name: arg3</span><br><span class="line">Parameter Name: arg4</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:getCurveYMin</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的方法的返回值的类型double</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">Parameter Name: arg1</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:getCurveYLevel</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的方法的返回值的类型double</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">Parameter Name: arg1</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:getCurveYMax</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的方法的返回值的类型double</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">Parameter Name: arg1</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:getCurveYCount</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的方法的返回值的类型int</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">Parameter Name: arg1</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:getCurveYUnit</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的方法的返回值的类型class java.lang.String</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">Parameter Name: arg1</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:getCurve3DCount</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的方法的返回值的类型int</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:reacBulkCurve3D</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的参数的类型是double</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class [F</span><br><span class="line">getMethods()获得的方法的返回值的类型int</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">Parameter Name: arg1</span><br><span class="line">Parameter Name: arg2</span><br><span class="line">Parameter Name: arg3</span><br><span class="line">Parameter Name: arg4</span><br><span class="line">Parameter Name: arg5</span><br><span class="line">Parameter Name: arg6</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:reacBulkCurve3D</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的参数的类型是double</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class [[[F</span><br><span class="line">getMethods()获得的方法的返回值的类型int</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">Parameter Name: arg1</span><br><span class="line">Parameter Name: arg2</span><br><span class="line">Parameter Name: arg3</span><br><span class="line">Parameter Name: arg4</span><br><span class="line">Parameter Name: arg5</span><br><span class="line">Parameter Name: arg6</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:getCurveXMin</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的方法的返回值的类型double</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">Parameter Name: arg1</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:getCurve1DName</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的方法的返回值的类型class java.lang.String</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">Parameter Name: arg1</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:writeCurve2D</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的参数的类型是double</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class [F</span><br><span class="line">getMethods()获得的方法的返回值的类型int</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">Parameter Name: arg1</span><br><span class="line">Parameter Name: arg2</span><br><span class="line">Parameter Name: arg3</span><br><span class="line">Parameter Name: arg4</span><br><span class="line">Parameter Name: arg5</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:readCurve2D</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的参数的类型是double</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class [F</span><br><span class="line">getMethods()获得的方法的返回值的类型int</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">Parameter Name: arg1</span><br><span class="line">Parameter Name: arg2</span><br><span class="line">Parameter Name: arg3</span><br><span class="line">Parameter Name: arg4</span><br><span class="line">Parameter Name: arg5</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:readCurve2D</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的参数的类型是double</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class [F</span><br><span class="line">getMethods()获得的方法的返回值的类型int</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">Parameter Name: arg1</span><br><span class="line">Parameter Name: arg2</span><br><span class="line">Parameter Name: arg3</span><br><span class="line">Parameter Name: arg4</span><br><span class="line">Parameter Name: arg5</span><br><span class="line">Parameter Name: arg6</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:readCurve2D</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的参数的类型是double</span><br><span class="line">getMethods()获得的参数的类型是double</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class [F</span><br><span class="line">getMethods()获得的方法的返回值的类型int</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">Parameter Name: arg1</span><br><span class="line">Parameter Name: arg2</span><br><span class="line">Parameter Name: arg3</span><br><span class="line">Parameter Name: arg4</span><br><span class="line">Parameter Name: arg5</span><br><span class="line">Parameter Name: arg6</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:readCurve2D</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的参数的类型是double</span><br><span class="line">getMethods()获得的参数的类型是double</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class [F</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的方法的返回值的类型int</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">Parameter Name: arg1</span><br><span class="line">Parameter Name: arg2</span><br><span class="line">Parameter Name: arg3</span><br><span class="line">Parameter Name: arg4</span><br><span class="line">Parameter Name: arg5</span><br><span class="line">Parameter Name: arg6</span><br><span class="line">Parameter Name: arg7</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:readCurve2D</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的参数的类型是double</span><br><span class="line">getMethods()获得的参数的类型是double</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class [F</span><br><span class="line">getMethods()获得的方法的返回值的类型int</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">Parameter Name: arg1</span><br><span class="line">Parameter Name: arg2</span><br><span class="line">Parameter Name: arg3</span><br><span class="line">Parameter Name: arg4</span><br><span class="line">Parameter Name: arg5</span><br><span class="line">Parameter Name: arg6</span><br><span class="line">Parameter Name: arg7</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:readCurve2D</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的参数的类型是double</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class [S</span><br><span class="line">getMethods()获得的方法的返回值的类型int</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">Parameter Name: arg1</span><br><span class="line">Parameter Name: arg2</span><br><span class="line">Parameter Name: arg3</span><br><span class="line">Parameter Name: arg4</span><br><span class="line">Parameter Name: arg5</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:readCurve3D</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是double</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class [F</span><br><span class="line">getMethods()获得的方法的返回值的类型int</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">Parameter Name: arg1</span><br><span class="line">Parameter Name: arg2</span><br><span class="line">Parameter Name: arg3</span><br><span class="line">Parameter Name: arg4</span><br><span class="line">Parameter Name: arg5</span><br><span class="line">Parameter Name: arg6</span><br><span class="line">Parameter Name: arg7</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:readCurve3D</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是double</span><br><span class="line">getMethods()获得的参数的类型是double</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class [F</span><br><span class="line">getMethods()获得的方法的返回值的类型int</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">Parameter Name: arg1</span><br><span class="line">Parameter Name: arg2</span><br><span class="line">Parameter Name: arg3</span><br><span class="line">Parameter Name: arg4</span><br><span class="line">Parameter Name: arg5</span><br><span class="line">Parameter Name: arg6</span><br><span class="line">Parameter Name: arg7</span><br><span class="line">Parameter Name: arg8</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:readCurve3D</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是double</span><br><span class="line">getMethods()获得的参数的类型是double</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class [F</span><br><span class="line">getMethods()获得的方法的返回值的类型int</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">Parameter Name: arg1</span><br><span class="line">Parameter Name: arg2</span><br><span class="line">Parameter Name: arg3</span><br><span class="line">Parameter Name: arg4</span><br><span class="line">Parameter Name: arg5</span><br><span class="line">Parameter Name: arg6</span><br><span class="line">Parameter Name: arg7</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:readCurve3D</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是double</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class [F</span><br><span class="line">getMethods()获得的方法的返回值的类型int</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">Parameter Name: arg1</span><br><span class="line">Parameter Name: arg2</span><br><span class="line">Parameter Name: arg3</span><br><span class="line">Parameter Name: arg4</span><br><span class="line">Parameter Name: arg5</span><br><span class="line">Parameter Name: arg6</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:getCurve2DCount</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的方法的返回值的类型int</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:writeCurve3D</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是double</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class [F</span><br><span class="line">getMethods()获得的方法的返回值的类型int</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">Parameter Name: arg1</span><br><span class="line">Parameter Name: arg2</span><br><span class="line">Parameter Name: arg3</span><br><span class="line">Parameter Name: arg4</span><br><span class="line">Parameter Name: arg5</span><br><span class="line">Parameter Name: arg6</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:isCurveExisted</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的方法的返回值的类型int</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">Parameter Name: arg1</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:getCurveXMax</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的方法的返回值的类型double</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">Parameter Name: arg1</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:writeTable</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的方法的返回值的类型int</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">Parameter Name: arg1</span><br><span class="line">Parameter Name: arg2</span><br><span class="line">Parameter Name: arg3</span><br><span class="line">Parameter Name: arg4</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:writeTable</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class [F</span><br><span class="line">getMethods()获得的方法的返回值的类型int</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">Parameter Name: arg1</span><br><span class="line">Parameter Name: arg2</span><br><span class="line">Parameter Name: arg3</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:writeTable</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是float</span><br><span class="line">getMethods()获得的方法的返回值的类型int</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">Parameter Name: arg1</span><br><span class="line">Parameter Name: arg2</span><br><span class="line">Parameter Name: arg3</span><br><span class="line">Parameter Name: arg4</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:writeTable</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class [Ljava.lang.String;</span><br><span class="line">getMethods()获得的方法的返回值的类型int</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">Parameter Name: arg1</span><br><span class="line">Parameter Name: arg2</span><br><span class="line">Parameter Name: arg3</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:deleteTable</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的方法的返回值的类型int</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">Parameter Name: arg1</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:copyCurve</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的方法的返回值的类型int</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">Parameter Name: arg1</span><br><span class="line">Parameter Name: arg2</span><br><span class="line">Parameter Name: arg3</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:getCurveArrayNum</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的方法的返回值的类型int</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">Parameter Name: arg1</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:getCurveUnit</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的方法的返回值的类型class java.lang.String</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">Parameter Name: arg1</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:getCurveProperty</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的方法的返回值的类型class cif.dataservice.io.CurveProperty</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">Parameter Name: arg1</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:createTable</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的方法的返回值的类型int</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">Parameter Name: arg1</span><br><span class="line">Parameter Name: arg2</span><br><span class="line">Parameter Name: arg3</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:getTableRowCount</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的方法的返回值的类型int</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">Parameter Name: arg1</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:deleteCurve</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的方法的返回值的类型int</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">Parameter Name: arg1</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:readTable</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class [Ljava.lang.String;</span><br><span class="line">getMethods()获得的方法的返回值的类型int</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">Parameter Name: arg1</span><br><span class="line">Parameter Name: arg2</span><br><span class="line">Parameter Name: arg3</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:readTable</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class [F</span><br><span class="line">getMethods()获得的方法的返回值的类型int</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">Parameter Name: arg1</span><br><span class="line">Parameter Name: arg2</span><br><span class="line">Parameter Name: arg3</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:readTable</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的方法的返回值的类型class java.lang.String</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">Parameter Name: arg1</span><br><span class="line">Parameter Name: arg2</span><br><span class="line">Parameter Name: arg3</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:readTable_x</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的方法的返回值的类型float</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">Parameter Name: arg1</span><br><span class="line">Parameter Name: arg2</span><br><span class="line">Parameter Name: arg3</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:copyTable</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的方法的返回值的类型int</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">Parameter Name: arg1</span><br><span class="line">Parameter Name: arg2</span><br><span class="line">Parameter Name: arg3</span><br><span class="line">Parameter Name: arg4</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:flushAll</span><br><span class="line">getMethods()获得的方法的返回值的类型void</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:getTableColumnCount</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的方法的返回值的类型int</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">Parameter Name: arg1</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:setCurveInterpolation</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的方法的返回值的类型void</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">Parameter Name: arg1</span><br><span class="line">Parameter Name: arg2</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:getCurveTimeSampleLevel</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的方法的返回值的类型float</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">Parameter Name: arg1</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:getCurveDepthUnit</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的方法的返回值的类型class java.lang.String</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">Parameter Name: arg1</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:getCommonTableColumnName</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的方法的返回值的类型class java.lang.String</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">Parameter Name: arg1</span><br><span class="line">Parameter Name: arg2</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:removeTableAllRecords</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的方法的返回值的类型void</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">Parameter Name: arg1</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:getCurveArraySize</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的方法的返回值的类型int</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">Parameter Name: arg1</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:dispatchNotification</span><br><span class="line">getMethods()获得的方法的返回值的类型void</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:createDocument</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的方法的返回值的类型int</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">Parameter Name: arg1</span><br><span class="line">Parameter Name: arg2</span><br><span class="line">Parameter Name: arg3</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:createDocument</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的方法的返回值的类型int</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">Parameter Name: arg1</span><br><span class="line">Parameter Name: arg2</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:readDocument</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的方法的返回值的类型int</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">Parameter Name: arg1</span><br><span class="line">Parameter Name: arg2</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:readDocument</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class [B</span><br><span class="line">getMethods()获得的方法的返回值的类型int</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">Parameter Name: arg1</span><br><span class="line">Parameter Name: arg2</span><br><span class="line">Parameter Name: arg3</span><br><span class="line">Parameter Name: arg4</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:writeDocument</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class [B</span><br><span class="line">getMethods()获得的方法的返回值的类型int</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">Parameter Name: arg1</span><br><span class="line">Parameter Name: arg2</span><br><span class="line">Parameter Name: arg3</span><br><span class="line">Parameter Name: arg4</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:getDocSize</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.String</span><br><span class="line">getMethods()获得的方法的返回值的类型int</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">Parameter Name: arg1</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:wait</span><br><span class="line">getMethods()获得的方法的返回值的类型void</span><br><span class="line">getMethods()获得的方法的修饰符有public final</span><br><span class="line">getMethods()获得的方法的异常类型是：class java.lang.InterruptedException</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:wait</span><br><span class="line">getMethods()获得的参数的类型是long</span><br><span class="line">getMethods()获得的参数的类型是int</span><br><span class="line">getMethods()获得的方法的返回值的类型void</span><br><span class="line">getMethods()获得的方法的修饰符有public final</span><br><span class="line">getMethods()获得的方法的异常类型是：class java.lang.InterruptedException</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">Parameter Name: arg1</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:wait</span><br><span class="line">getMethods()获得的参数的类型是long</span><br><span class="line">getMethods()获得的方法的返回值的类型void</span><br><span class="line">getMethods()获得的方法的修饰符有public final native</span><br><span class="line">getMethods()获得的方法的异常类型是：class java.lang.InterruptedException</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:equals</span><br><span class="line">getMethods()获得的参数的类型是class java.lang.Object</span><br><span class="line">getMethods()获得的方法的返回值的类型boolean</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">Parameter Name: arg0</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:toString</span><br><span class="line">getMethods()获得的方法的返回值的类型class java.lang.String</span><br><span class="line">getMethods()获得的方法的修饰符有public</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:hashCode</span><br><span class="line">getMethods()获得的方法的返回值的类型int</span><br><span class="line">getMethods()获得的方法的修饰符有public native</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:getClass</span><br><span class="line">getMethods()获得的方法的返回值的类型class java.lang.Class</span><br><span class="line">getMethods()获得的方法的修饰符有public final native</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:notify</span><br><span class="line">getMethods()获得的方法的返回值的类型void</span><br><span class="line">getMethods()获得的方法的修饰符有public final native</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">getMethods()获得的方法的名字是:notifyAll</span><br><span class="line">getMethods()获得的方法的返回值的类型void</span><br><span class="line">getMethods()获得的方法的修饰符有public final native</span><br><span class="line">-------------------------------------------------------------------</span><br></pre></td></tr></table></figure><h1 id="详细接口API说明"><a href="#详细接口API说明" class="headerlink" title="详细接口API说明"></a>详细接口API说明</h1><p>ciflog对应的基础jar包路径：<code>...\CIFLog\ciflog\modules</code></p><p>前文中提到的dataservice接口在<code>cif-dataservice.jar</code>中</p><p>打开IDEA，文件→项目结构→库→添加库，可以将jar包导入</p><h2 id="DataServiceAssistIO-java"><a href="#DataServiceAssistIO-java" class="headerlink" title="DataServiceAssistIO.java"></a>DataServiceAssistIO.java</h2><h3 id="简略方法"><a href="#简略方法" class="headerlink" title="简略方法"></a>简略方法</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">openDataSource</span><span class="params">(String dataSourcePath)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getWorkSpaceCount</span><span class="params">(<span class="type">int</span> dataSourceID)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getWellCount</span><span class="params">(<span class="type">int</span> dataSourceID, String workSpaceName)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getCategoryCount</span><span class="params">(<span class="type">int</span> dataSourceID, String workSpaceName, String wellName)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getLogCurveCount</span><span class="params">(<span class="type">int</span> dataSourceID, String workSpaceName, String wellName, String categoryName)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getLogTableCount</span><span class="params">(<span class="type">int</span> dataSourceID, String workSpaceName, String wellName, String categoryName)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getLogDocCount</span><span class="params">(<span class="type">int</span> dataSourceID, String workSpaceName, String wellName, String categoryName)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">getWorkSpaceName</span><span class="params">(<span class="type">int</span> dataSourceID, <span class="type">int</span> index)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">getWellName</span><span class="params">(<span class="type">int</span> dataSourceID, String workSpaceName, <span class="type">int</span> index)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">getCategoryName</span><span class="params">(<span class="type">int</span> dataSourceID, String workSpaceName, String wellName, <span class="type">int</span> index)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">getLogCurveName</span><span class="params">(<span class="type">int</span> dataSourceID, String workSpaceName, String wellName, String categoryName, <span class="type">int</span> index)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">getLogTableName</span><span class="params">(<span class="type">int</span> dataSourceID, String workSpaceName, String wellName, String categoryName, <span class="type">int</span> index)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">getLogDocName</span><span class="params">(<span class="type">int</span> dataSourceID, String workSpaceName, String wellName, String categoryName, <span class="type">int</span> index)</span></span><br></pre></td></tr></table></figure><h3 id="类源码"><a href="#类源码" class="headerlink" title="类源码"></a>类源码</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Source code recreated from a .class file by IntelliJ IDEA</span></span><br><span class="line"><span class="comment">// (powered by FernFlower decompiler)</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> cif.dataservice.io;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cif.dataengine.DataPath;</span><br><span class="line"><span class="keyword">import</span> cif.dataengine.io.LogCategory;</span><br><span class="line"><span class="keyword">import</span> cif.dataengine.io.LogCurve;</span><br><span class="line"><span class="keyword">import</span> cif.dataengine.io.LogDataSource;</span><br><span class="line"><span class="keyword">import</span> cif.dataengine.io.LogDocument;</span><br><span class="line"><span class="keyword">import</span> cif.dataengine.io.LogTable;</span><br><span class="line"><span class="keyword">import</span> cif.dataengine.io.LogWell;</span><br><span class="line"><span class="keyword">import</span> cif.dataengine.io.LogWorkSpace;</span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> org.openide.util.Exceptions;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DataServiceAssistIO</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">DataServiceAssistIO</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">exportTextFileData</span><span class="params">(StringBuffer sourceData, File file)</span> &#123;</span><br><span class="line">        <span class="type">FileOutputStream</span> <span class="variable">fos</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            fos = <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(file);</span><br><span class="line">            <span class="type">byte</span>[] bytes = sourceData.toString().getBytes();</span><br><span class="line">            fos.write(bytes);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception var13) &#123;</span><br><span class="line">            Exceptions.printStackTrace(var13);</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (fos != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    fos.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException var12) &#123;</span><br><span class="line">                    Exceptions.printStackTrace(var12);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">openDataSource</span><span class="params">(String dataSourcePath)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (dataSourcePath != <span class="literal">null</span> &amp;&amp; !dataSourcePath.trim().isEmpty()) &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">temp</span> <span class="operator">=</span> dataSourcePath.trim();</span><br><span class="line">            <span class="type">DataSourceStruct</span> <span class="variable">dataSourceStruct</span> <span class="operator">=</span> DataSourceContainer.getInstance().getElement(temp);</span><br><span class="line">            <span class="keyword">if</span> (dataSourceStruct != <span class="literal">null</span>) &#123;</span><br><span class="line">                DataSourceContainer.getInstance().removeElement(dataSourceStruct);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="type">int</span> <span class="variable">index</span> <span class="operator">=</span> temp.indexOf(<span class="string">&quot;@@**&quot;</span>);</span><br><span class="line">            <span class="type">return</span> <span class="variable">index</span> <span class="operator">=</span>= -<span class="number">1</span> ? <span class="built_in">this</span>.openLocalDataSource(temp) : <span class="number">0</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getWorkSpaceCount</span><span class="params">(<span class="type">int</span> dataSourceID)</span> &#123;</span><br><span class="line">        <span class="type">DataSourceStruct</span> <span class="variable">dataSourceStruct</span> <span class="operator">=</span> DataSourceContainer.getInstance().getElement(dataSourceID);</span><br><span class="line">        <span class="type">return</span> <span class="variable">dataSourceStruct</span> <span class="operator">=</span>= <span class="literal">null</span> ? -<span class="number">1</span> : dataSourceStruct.dataSource.getWorkSpaceCount();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getWellCount</span><span class="params">(<span class="type">int</span> dataSourceID, String workSpaceName)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (workSpaceName != <span class="literal">null</span> &amp;&amp; !workSpaceName.trim().isEmpty()) &#123;</span><br><span class="line">            <span class="type">DataSourceStruct</span> <span class="variable">dataSourceStruct</span> <span class="operator">=</span> DataSourceContainer.getInstance().getElement(dataSourceID);</span><br><span class="line">            <span class="keyword">if</span> (dataSourceStruct == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">LogWorkSpace</span> <span class="variable">ws</span> <span class="operator">=</span> dataSourceStruct.dataSource.getLogWorkSpace(workSpaceName.trim());</span><br><span class="line">                <span class="type">return</span> <span class="variable">ws</span> <span class="operator">=</span>= <span class="literal">null</span> ? -<span class="number">1</span> : ws.getWellCount();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getCategoryCount</span><span class="params">(<span class="type">int</span> dataSourceID, String workSpaceName, String wellName)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (workSpaceName != <span class="literal">null</span> &amp;&amp; !workSpaceName.trim().isEmpty() &amp;&amp; wellName != <span class="literal">null</span> &amp;&amp; !wellName.trim().isEmpty()) &#123;</span><br><span class="line">            <span class="type">DataSourceStruct</span> <span class="variable">dataSourceStruct</span> <span class="operator">=</span> DataSourceContainer.getInstance().getElement(dataSourceID);</span><br><span class="line">            <span class="keyword">if</span> (dataSourceStruct == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">LogWorkSpace</span> <span class="variable">ws</span> <span class="operator">=</span> dataSourceStruct.dataSource.getLogWorkSpace(workSpaceName.trim());</span><br><span class="line">                <span class="keyword">if</span> (ws == <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="type">LogWell</span> <span class="variable">well</span> <span class="operator">=</span> ws.getLogWell(wellName.trim());</span><br><span class="line">                    <span class="type">return</span> <span class="variable">well</span> <span class="operator">=</span>= <span class="literal">null</span> ? -<span class="number">1</span> : well.getCategoryCount();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getLogCurveCount</span><span class="params">(<span class="type">int</span> dataSourceID, String workSpaceName, String wellName, String categoryName)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.getLoggingCount(dataSourceID, workSpaceName, wellName, categoryName, <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getLogTableCount</span><span class="params">(<span class="type">int</span> dataSourceID, String workSpaceName, String wellName, String categoryName)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.getLoggingCount(dataSourceID, workSpaceName, wellName, categoryName, <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getLogDocCount</span><span class="params">(<span class="type">int</span> dataSourceID, String workSpaceName, String wellName, String categoryName)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.getLoggingCount(dataSourceID, workSpaceName, wellName, categoryName, <span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getWorkSpaceName</span><span class="params">(<span class="type">int</span> dataSourceID, <span class="type">int</span> index)</span> &#123;</span><br><span class="line">        <span class="type">DataSourceStruct</span> <span class="variable">dataSourceStruct</span> <span class="operator">=</span> DataSourceContainer.getInstance().getElement(dataSourceID);</span><br><span class="line">        <span class="keyword">if</span> (dataSourceStruct == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="type">LogWorkSpace</span> <span class="variable">ws</span> <span class="operator">=</span> dataSourceStruct.dataSource.getLogWorkSpace(index);</span><br><span class="line">            <span class="type">return</span> <span class="variable">ws</span> <span class="operator">=</span>= <span class="literal">null</span> ? <span class="literal">null</span> : ws.getWorkSpaceName();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getWellName</span><span class="params">(<span class="type">int</span> dataSourceID, String workSpaceName, <span class="type">int</span> index)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (workSpaceName != <span class="literal">null</span> &amp;&amp; !workSpaceName.trim().isEmpty()) &#123;</span><br><span class="line">            <span class="type">DataSourceStruct</span> <span class="variable">dataSourceStruct</span> <span class="operator">=</span> DataSourceContainer.getInstance().getElement(dataSourceID);</span><br><span class="line">            <span class="keyword">if</span> (dataSourceStruct == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">LogDataSource</span> <span class="variable">dataSource</span> <span class="operator">=</span> dataSourceStruct.dataSource;</span><br><span class="line">                <span class="type">LogWorkSpace</span> <span class="variable">ws</span> <span class="operator">=</span> dataSource.getLogWorkSpace(workSpaceName.trim());</span><br><span class="line">                <span class="keyword">if</span> (ws == <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="type">LogWell</span> <span class="variable">well</span> <span class="operator">=</span> ws.getLogWell(index);</span><br><span class="line">                    <span class="type">return</span> <span class="variable">well</span> <span class="operator">=</span>= <span class="literal">null</span> ? <span class="literal">null</span> : well.getWellName();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getCategoryName</span><span class="params">(<span class="type">int</span> dataSourceID, String workSpaceName, String wellName, <span class="type">int</span> index)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (workSpaceName != <span class="literal">null</span> &amp;&amp; !workSpaceName.trim().isEmpty() &amp;&amp; wellName != <span class="literal">null</span> &amp;&amp; !wellName.trim().isEmpty()) &#123;</span><br><span class="line">            <span class="type">DataSourceStruct</span> <span class="variable">dataSourceStruct</span> <span class="operator">=</span> DataSourceContainer.getInstance().getElement(dataSourceID);</span><br><span class="line">            <span class="keyword">if</span> (dataSourceStruct == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">LogDataSource</span> <span class="variable">dataSource</span> <span class="operator">=</span> dataSourceStruct.dataSource;</span><br><span class="line">                <span class="type">LogWorkSpace</span> <span class="variable">ws</span> <span class="operator">=</span> dataSource.getLogWorkSpace(workSpaceName.trim());</span><br><span class="line">                <span class="keyword">if</span> (ws == <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="type">LogWell</span> <span class="variable">well</span> <span class="operator">=</span> ws.getLogWell(wellName.trim());</span><br><span class="line">                    <span class="keyword">if</span> (well == <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="type">LogCategory</span> <span class="variable">category</span> <span class="operator">=</span> well.getLogCategory(index);</span><br><span class="line">                        <span class="type">return</span> <span class="variable">category</span> <span class="operator">=</span>= <span class="literal">null</span> ? <span class="literal">null</span> : category.getCategoryName();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getLogCurveName</span><span class="params">(<span class="type">int</span> dataSourceID, String workSpaceName, String wellName, String categoryName, <span class="type">int</span> index)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.getLoggingName(dataSourceID, workSpaceName, wellName, categoryName, index, <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getLogTableName</span><span class="params">(<span class="type">int</span> dataSourceID, String workSpaceName, String wellName, String categoryName, <span class="type">int</span> index)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.getLoggingName(dataSourceID, workSpaceName, wellName, categoryName, index, <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getLogDocName</span><span class="params">(<span class="type">int</span> dataSourceID, String workSpaceName, String wellName, String categoryName, <span class="type">int</span> index)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.getLoggingName(dataSourceID, workSpaceName, wellName, categoryName, index, <span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="title function_">getLoggingCount</span><span class="params">(<span class="type">int</span> dataSourceID, String workSpaceName, String wellName, String categoryName, <span class="type">int</span> loggingType)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (workSpaceName != <span class="literal">null</span> &amp;&amp; !workSpaceName.trim().isEmpty() &amp;&amp; wellName != <span class="literal">null</span> &amp;&amp; !wellName.trim().isEmpty() &amp;&amp; categoryName != <span class="literal">null</span> &amp;&amp; !categoryName.trim().isEmpty()) &#123;</span><br><span class="line">            <span class="type">DataSourceStruct</span> <span class="variable">dataSourceStruct</span> <span class="operator">=</span> DataSourceContainer.getInstance().getElement(dataSourceID);</span><br><span class="line">            <span class="keyword">if</span> (dataSourceStruct == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">LogDataSource</span> <span class="variable">dataSource</span> <span class="operator">=</span> dataSourceStruct.dataSource;</span><br><span class="line">                <span class="type">LogWorkSpace</span> <span class="variable">ws</span> <span class="operator">=</span> dataSource.getLogWorkSpace(workSpaceName.trim());</span><br><span class="line">                <span class="keyword">if</span> (ws == <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="type">LogWell</span> <span class="variable">well</span> <span class="operator">=</span> ws.getLogWell(wellName.trim());</span><br><span class="line">                    <span class="keyword">if</span> (well == <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="type">LogCategory</span> <span class="variable">category</span> <span class="operator">=</span> well.getLogCategory(categoryName.trim());</span><br><span class="line">                        <span class="keyword">if</span> (category == <span class="literal">null</span>) &#123;</span><br><span class="line">                            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            <span class="type">int</span> <span class="variable">logCount</span> <span class="operator">=</span> -<span class="number">1</span>;</span><br><span class="line">                            <span class="keyword">switch</span> (loggingType) &#123;</span><br><span class="line">                                <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                                    logCount = category.getLogCurveCount();</span><br><span class="line">                                    <span class="keyword">break</span>;</span><br><span class="line">                                <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                                    logCount = category.getLogCommonTableCount();</span><br><span class="line">                                    <span class="keyword">break</span>;</span><br><span class="line">                                <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                                    logCount = category.getLogDocCount();</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">return</span> logCount;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String <span class="title function_">getLoggingName</span><span class="params">(<span class="type">int</span> dataSourceID, String workSpaceName, String wellName, String categoryName, <span class="type">int</span> index, <span class="type">int</span> loggingType)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (workSpaceName != <span class="literal">null</span> &amp;&amp; !workSpaceName.trim().isEmpty() &amp;&amp; wellName != <span class="literal">null</span> &amp;&amp; !wellName.trim().isEmpty() &amp;&amp; categoryName != <span class="literal">null</span> &amp;&amp; !categoryName.trim().isEmpty()) &#123;</span><br><span class="line">            <span class="type">DataSourceStruct</span> <span class="variable">dataSourceStruct</span> <span class="operator">=</span> DataSourceContainer.getInstance().getElement(dataSourceID);</span><br><span class="line">            <span class="keyword">if</span> (dataSourceStruct == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">LogDataSource</span> <span class="variable">dataSource</span> <span class="operator">=</span> dataSourceStruct.dataSource;</span><br><span class="line">                <span class="type">LogWorkSpace</span> <span class="variable">ws</span> <span class="operator">=</span> dataSource.getLogWorkSpace(workSpaceName.trim());</span><br><span class="line">                <span class="keyword">if</span> (ws == <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="type">LogWell</span> <span class="variable">well</span> <span class="operator">=</span> ws.getLogWell(wellName.trim());</span><br><span class="line">                    <span class="keyword">if</span> (well == <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="type">LogCategory</span> <span class="variable">category</span> <span class="operator">=</span> well.getLogCategory(categoryName.trim());</span><br><span class="line">                        <span class="keyword">if</span> (category == <span class="literal">null</span>) &#123;</span><br><span class="line">                            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            <span class="type">String</span> <span class="variable">loggingName</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">                            <span class="keyword">switch</span> (loggingType) &#123;</span><br><span class="line">                                <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                                    <span class="type">LogCurve</span> <span class="variable">curve</span> <span class="operator">=</span> category.getLogCurve(index);</span><br><span class="line">                                    <span class="keyword">if</span> (curve != <span class="literal">null</span>) &#123;</span><br><span class="line">                                        loggingName = curve.getName();</span><br><span class="line">                                    &#125;</span><br><span class="line">                                    <span class="keyword">break</span>;</span><br><span class="line">                                <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                                    <span class="type">LogTable</span> <span class="variable">table</span> <span class="operator">=</span> category.getLogCommonTable(index);</span><br><span class="line">                                    <span class="keyword">if</span> (table != <span class="literal">null</span>) &#123;</span><br><span class="line">                                        loggingName = table.getName();</span><br><span class="line">                                    &#125;</span><br><span class="line">                                    <span class="keyword">break</span>;</span><br><span class="line">                                <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                                    <span class="type">LogDocument</span> <span class="variable">document</span> <span class="operator">=</span> category.getLogDoc(index);</span><br><span class="line">                                    <span class="keyword">if</span> (document != <span class="literal">null</span>) &#123;</span><br><span class="line">                                        loggingName = document.getName();</span><br><span class="line">                                    &#125;</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">return</span> loggingName;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="title function_">getLoggingNameList</span><span class="params">(<span class="type">int</span> dataSourceID, String workSpaceName, String wellName, String categoryName, String[] loggingNames, <span class="type">int</span> loggingType)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (workSpaceName != <span class="literal">null</span> &amp;&amp; !workSpaceName.trim().isEmpty() &amp;&amp; wellName != <span class="literal">null</span> &amp;&amp; !wellName.trim().isEmpty() &amp;&amp; categoryName != <span class="literal">null</span> &amp;&amp; !categoryName.trim().isEmpty()) &#123;</span><br><span class="line">            <span class="type">DataSourceStruct</span> <span class="variable">dataSourceStruct</span> <span class="operator">=</span> DataSourceContainer.getInstance().getElement(dataSourceID);</span><br><span class="line">            <span class="keyword">if</span> (dataSourceStruct == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">LogDataSource</span> <span class="variable">dataSource</span> <span class="operator">=</span> dataSourceStruct.dataSource;</span><br><span class="line">                <span class="type">LogWorkSpace</span> <span class="variable">ws</span> <span class="operator">=</span> dataSource.getLogWorkSpace(workSpaceName.trim());</span><br><span class="line">                <span class="keyword">if</span> (ws == <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="type">LogWell</span> <span class="variable">well</span> <span class="operator">=</span> ws.getLogWell(wellName.trim());</span><br><span class="line">                    <span class="keyword">if</span> (well == <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="type">LogCategory</span> <span class="variable">category</span> <span class="operator">=</span> well.getLogCategory(categoryName.trim());</span><br><span class="line">                        <span class="keyword">if</span> (category == <span class="literal">null</span>) &#123;</span><br><span class="line">                            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            <span class="type">int</span> <span class="variable">retCount</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">                            <span class="type">int</span> i;</span><br><span class="line">                            <span class="keyword">switch</span> (loggingType) &#123;</span><br><span class="line">                                <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                                    retCount = category.getLogCurveCount();</span><br><span class="line"></span><br><span class="line">                                    <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; retCount; ++i) &#123;</span><br><span class="line">                                        loggingNames[i] = category.getLogCurve(i).getName();</span><br><span class="line">                                    &#125;</span><br><span class="line"></span><br><span class="line">                                    <span class="keyword">return</span> retCount;</span><br><span class="line">                                <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                                    retCount = category.getLogCommonTableCount();</span><br><span class="line"></span><br><span class="line">                                    <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; retCount; ++i) &#123;</span><br><span class="line">                                        loggingNames[i] = category.getLogCommonTable(i).getName();</span><br><span class="line">                                    &#125;</span><br><span class="line"></span><br><span class="line">                                    <span class="keyword">return</span> retCount;</span><br><span class="line">                                <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                                    retCount = category.getLogDocCount();</span><br><span class="line"></span><br><span class="line">                                    <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; retCount; ++i) &#123;</span><br><span class="line">                                        loggingNames[i] = category.getLogDoc(i).getName();</span><br><span class="line">                                    &#125;</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">return</span> retCount;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="title function_">openLocalDataSource</span><span class="params">(String dataSourcePath)</span> &#123;</span><br><span class="line">        <span class="type">DataPath</span> <span class="variable">dataPath</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DataPath</span>();</span><br><span class="line">        dataPath.parse(dataSourcePath);</span><br><span class="line">        <span class="keyword">if</span> (dataPath.getPathLevel() &lt; <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">dsFilePath</span> <span class="operator">=</span> dataPath.getDataSourceName();</span><br><span class="line">            <span class="type">File</span> <span class="variable">file</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(dsFilePath);</span><br><span class="line">            <span class="keyword">if</span> (file.exists() &amp;&amp; file.isDirectory()) &#123;</span><br><span class="line">                file = <span class="keyword">new</span> <span class="title class_">File</span>(dsFilePath + File.separator + <span class="string">&quot;cifPlatform.xml&quot;</span>);</span><br><span class="line">                <span class="keyword">if</span> (file.exists() &amp;&amp; file.isFile()) &#123;</span><br><span class="line">                    <span class="type">LogDataSource</span> <span class="variable">dataSource</span> <span class="operator">=</span> dataPath.getCurrentDataFormat().buildDataSource();</span><br><span class="line">                    <span class="keyword">if</span> (!dataSource.connect(dsFilePath)) &#123;</span><br><span class="line">                        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="type">int</span> <span class="variable">id</span> <span class="operator">=</span> <span class="built_in">this</span>.getID();</span><br><span class="line">                    DataSourceContainer.getInstance().addElement(<span class="keyword">new</span> <span class="title class_">DataSourceStruct</span>(dataSource, id));</span><br><span class="line">                    <span class="keyword">return</span> id;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="title function_">getID</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">dataSourceID</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">id</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">        <span class="type">boolean</span> flag;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            flag = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; DataSourceContainer.getInstance().size(); ++i) &#123;</span><br><span class="line">                <span class="type">int</span> <span class="variable">id</span> <span class="operator">=</span> DataSourceContainer.getInstance().elemenAt(i).id;</span><br><span class="line">                <span class="keyword">if</span> (dataSourceID == id) &#123;</span><br><span class="line">                    flag = <span class="literal">true</span>;</span><br><span class="line">                    ++dataSourceID;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">while</span>(flag);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> dataSourceID;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="DataServiceBasicIO-java"><a href="#DataServiceBasicIO-java" class="headerlink" title="DataServiceBasicIO.java"></a>DataServiceBasicIO.java</h2><h3 id="简略方法-1"><a href="#简略方法-1" class="headerlink" title="简略方法"></a>简略方法</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> String <span class="title function_">spliceFilePath</span><span class="params">(String prePath, String sufPath)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">getCurrentWorkDir</span><span class="params">()</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">getMainProjectPath</span><span class="params">()</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">getSysInstallationPath</span><span class="params">()</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">getSysResourcePath</span><span class="params">()</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">openCifp</span><span class="params">(String cifpPath)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">closeCifp</span><span class="params">(<span class="type">int</span> categoryID)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">getWellPropertiesItemValue</span><span class="params">(<span class="type">int</span> categoryID, String itemName)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setWellPropertiesItemValue</span><span class="params">(<span class="type">int</span> categoryID, String itemName, String itemValue)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getCategoryDepthUnit</span><span class="params">(<span class="type">int</span> categoryID)</span><span class="comment">//meter_0,feet_1,s_2,defult_-1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">createWell</span><span class="params">(String wellPath)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">createCifp</span><span class="params">(String cifpPath, <span class="type">int</span> isOverwritten)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">createCifp</span><span class="params">(String cifpPath)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">createCurveEx</span><span class="params">(<span class="type">int</span> categoryID, String curveName, <span class="type">int</span> arrayNum, <span class="type">int</span> arraySize, <span class="type">double</span> startDepth, <span class="type">int</span> sampleCount, <span class="type">double</span> depthLevel, <span class="type">int</span> dataType, String curveUnit)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">createCurve</span><span class="params">(<span class="type">int</span> categoryID, String curveName, <span class="type">int</span> arrayNum, <span class="type">int</span> arraySize, <span class="type">double</span> startDepth, <span class="type">int</span> sampleCount, <span class="type">double</span> depthLevel, <span class="type">int</span> dataType, String curveUnit)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">createCurve</span><span class="params">(<span class="type">int</span> categoryID, String curveName, <span class="type">int</span> arrayNum, <span class="type">int</span> arraySize, <span class="type">double</span> startDepth, <span class="type">int</span> sampleCount, <span class="type">double</span> depthLevel, <span class="type">int</span> dataType, String curveUnit, <span class="type">int</span> isCleaningData)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">createBulkCurve3D</span><span class="params">(<span class="type">int</span> categoryID, String curveName, <span class="type">int</span> dataType, String curveUnit, <span class="type">double</span> startDepth, <span class="type">int</span> sampleCount, <span class="type">double</span> depthLevel, <span class="type">double</span> xMin, <span class="type">double</span> xMax, <span class="type">double</span> xLevel, <span class="type">double</span> yMin, <span class="type">double</span> yMax, <span class="type">double</span> yLevel, <span class="type">int</span> xCount, <span class="type">int</span> yCount, String xUnit, String yUnit, <span class="type">int</span> isCleaningData)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">isCategoryExisted</span><span class="params">(String categoryPath)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">isCurveExisted</span><span class="params">(<span class="type">int</span> categoryID, String curveName)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getCurve1DCount</span><span class="params">(<span class="type">int</span> categoryID)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">getCurve1DName</span><span class="params">(<span class="type">int</span> categoryID, <span class="type">int</span> index)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">getCurve2DName</span><span class="params">(<span class="type">int</span> categoryID, <span class="type">int</span> index)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">getCurve3DName</span><span class="params">(<span class="type">int</span> categoryID, <span class="type">int</span> index)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">getCommonTableName</span><span class="params">(<span class="type">int</span> categoryID, <span class="type">int</span> index)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getCurve2DCount</span><span class="params">(<span class="type">int</span> categoryID)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getCurve3DCount</span><span class="params">(<span class="type">int</span> categoryID)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getCommonTableCount</span><span class="params">(<span class="type">int</span> categoryID)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">readCurve1D</span><span class="params">(<span class="type">int</span> categoryID, String curveName, <span class="type">double</span> startDepth, <span class="type">int</span> dataCount, <span class="type">float</span>[] buffer)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">readCurve1D</span><span class="params">(<span class="type">int</span> categoryID, String curveName, <span class="type">double</span> startDepth, <span class="type">double</span> depthLevel, <span class="type">int</span> dataCount, <span class="type">float</span>[] buffer)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">readCurve1D</span><span class="params">(<span class="type">int</span> categoryID, String curveName, <span class="type">double</span> startDepth, <span class="type">double</span> depthLevel, <span class="type">int</span> dataCount, <span class="type">float</span>[] buffer, <span class="type">int</span> interpolationMode)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">readCurve1D</span><span class="params">(<span class="type">int</span> categoryID, String curveName, <span class="type">double</span> startDepth, <span class="type">int</span> upwardCount, <span class="type">int</span> downWardCount, <span class="type">float</span>[] buffer)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">readCurve1D</span><span class="params">(<span class="type">int</span> categoryID, String curveName, <span class="type">double</span> startDepth, <span class="type">double</span> depthLevel, <span class="type">int</span> upwardCount, <span class="type">int</span> downWardCount, <span class="type">float</span>[] buffer)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">writeCurve1D</span><span class="params">(<span class="type">int</span> categoryID, String curveName, <span class="type">double</span> startDepth, <span class="type">int</span> dataCount, <span class="type">float</span>[] buffer)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">readCurve2D</span><span class="params">(<span class="type">int</span> categoryID, String curveName, <span class="type">double</span> startDepth, <span class="type">int</span> dataCount, <span class="type">int</span> arraySize, <span class="type">float</span>[] buffer)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">readCurve2D</span><span class="params">(<span class="type">int</span> categoryID, String curveName, <span class="type">double</span> startDepth, <span class="type">double</span> depthLevel, <span class="type">int</span> dataCount, <span class="type">int</span> arraySize, <span class="type">float</span>[] buffer)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">readCurve2D</span><span class="params">(<span class="type">int</span> categoryID, String curveName, <span class="type">double</span> startDepth, <span class="type">double</span> depthLevel, <span class="type">int</span> dataCount, <span class="type">int</span> arraySize, <span class="type">float</span>[] buffer, <span class="type">int</span> interpolationMode)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">readCurve2D</span><span class="params">(<span class="type">int</span> categoryID, String curveName, <span class="type">double</span> startDepth, <span class="type">int</span> dataCount, <span class="type">int</span> arraySize, <span class="type">short</span>[] buffer)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">readCurve2D</span><span class="params">(<span class="type">int</span> categoryID, String curveName, <span class="type">double</span> startDepth, <span class="type">int</span> upwardCount, <span class="type">int</span> downWardCount, <span class="type">int</span> arraySize, <span class="type">float</span>[] buffer)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">readCurve2D</span><span class="params">(<span class="type">int</span> categoryID, String curveName, <span class="type">double</span> startDepth, <span class="type">double</span> depthLevel, <span class="type">int</span> upwardCount, <span class="type">int</span> downWardCount, <span class="type">int</span> arraySize, <span class="type">float</span>[] buffer)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">writeCurve2D</span><span class="params">(<span class="type">int</span> categoryID, String curveName, <span class="type">double</span> startDepth, <span class="type">int</span> dataCount, <span class="type">int</span> arraySize, <span class="type">float</span>[] buffer)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">reacBulkCurve3D</span><span class="params">(<span class="type">int</span> categoryID, String curveName, <span class="type">double</span> startDepth, <span class="type">int</span> dataCount, <span class="type">int</span> xCount, <span class="type">int</span> yCount, <span class="type">float</span>[] buffer)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">reacBulkCurve3D</span><span class="params">(<span class="type">int</span> categoryID, String curveName, <span class="type">double</span> startDepth, <span class="type">int</span> dataCount, <span class="type">int</span> xCount, <span class="type">int</span> yCount, <span class="type">float</span>[][][] buffer)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">readCurve3D</span><span class="params">(<span class="type">int</span> categoryID, String curveName, <span class="type">int</span> arrayIndex, <span class="type">double</span> startDepth, <span class="type">int</span> dataCount, <span class="type">int</span> arraySize, <span class="type">float</span>[] buffer)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">readCurve3D</span><span class="params">(<span class="type">int</span> categoryID, String curveName, <span class="type">int</span> arrayIndex, <span class="type">double</span> startDepth, <span class="type">double</span> depthLevel, <span class="type">int</span> dataCount, <span class="type">int</span> arraySize, <span class="type">float</span>[] buffer)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">readCurve3D</span><span class="params">(<span class="type">int</span> categoryID, String curveName, <span class="type">int</span> arrayIndex, <span class="type">double</span> startDepth, <span class="type">int</span> upwardCount, <span class="type">int</span> downWardCount, <span class="type">int</span> arraySize, <span class="type">float</span>[] buffer)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">readCurve3D</span><span class="params">(<span class="type">int</span> categoryID, String curveName, <span class="type">int</span> arrayIndex, <span class="type">double</span> startDepth, <span class="type">double</span> depthLevel, <span class="type">int</span> upwardCount, <span class="type">int</span> downWardCount, <span class="type">int</span> arraySize, <span class="type">float</span>[] buffer)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">writeCurve3D</span><span class="params">(<span class="type">int</span> categoryID, String curveName, <span class="type">int</span> arrayIndex, <span class="type">double</span> startDepth, <span class="type">int</span> dataCount, <span class="type">int</span> arraySize, <span class="type">float</span>[] buffer)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">writeBulkCurve3D</span><span class="params">(<span class="type">int</span> categoryID, String curveName, <span class="type">double</span> startDepth, <span class="type">int</span> dataCount, <span class="type">int</span> xCount, <span class="type">int</span> yCount, <span class="type">float</span>[] buffer)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">writeBulkCurve3D</span><span class="params">(<span class="type">int</span> categoryID, String curveName, <span class="type">double</span> startDepth, <span class="type">int</span> dataCount, <span class="type">int</span> xCount, <span class="type">int</span> yCount, <span class="type">float</span>[][][] buffer)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getCurveStartDepth</span><span class="params">(<span class="type">int</span> categoryID, String curveName)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getCurveEndDepth</span><span class="params">(<span class="type">int</span> categoryID, String curveName)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getCurveDepthLevel</span><span class="params">(<span class="type">int</span> categoryID, String curveName)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getCurveXMin</span><span class="params">(<span class="type">int</span> categoryID, String curveName)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getCurveXMax</span><span class="params">(<span class="type">int</span> categoryID, String curveName)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getCurveXLevel</span><span class="params">(<span class="type">int</span> categoryID, String curveName)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getCurveXCount</span><span class="params">(<span class="type">int</span> categoryID, String curveName)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">getCurveXUnit</span><span class="params">(<span class="type">int</span> categoryID, String curveName)</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getCurveYMin</span><span class="params">(<span class="type">int</span> categoryID, String curveName)</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getCurveYMax</span><span class="params">(<span class="type">int</span> categoryID, String curveName)</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getCurveYLevel</span><span class="params">(<span class="type">int</span> categoryID, String curveName)</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getCurveYCount</span><span class="params">(<span class="type">int</span> categoryID, String curveName)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">getCurveYUnit</span><span class="params">(<span class="type">int</span> categoryID, String curveName)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">setCurveDepthLevel</span><span class="params">(<span class="type">int</span> categoryID, String curveName, <span class="type">double</span> newDepthLevel)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">changeCurveDepthRange</span><span class="params">(<span class="type">int</span> categoryID, String curveName, <span class="type">double</span> newStartDepth, <span class="type">double</span> newEndDepth)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">deleteCurve</span><span class="params">(<span class="type">int</span> categoryID, String curveName)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">deleteTable</span><span class="params">(<span class="type">int</span> categoryID, String tableName)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">copyCurve</span><span class="params">(<span class="type">int</span> categoryID, String srcCurveName, String desCurveName, <span class="type">int</span> isOverWritten)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> CurveProperty <span class="title function_">getCurveProperty</span><span class="params">(<span class="type">int</span> categoryID, String curveName)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getCurveDimension</span><span class="params">(<span class="type">int</span> categoryID, String curveName)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getCurveArrayNum</span><span class="params">(<span class="type">int</span> categoryID, String curveName)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getCurveArraySize</span><span class="params">(<span class="type">int</span> categoryID, String curveName)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">float</span> <span class="title function_">getCurveTimeSampleLevel</span><span class="params">(<span class="type">int</span> categoryID, String curveName)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">getCurveUnit</span><span class="params">(<span class="type">int</span> categoryID, String curveName)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">getCurveDepthUnit</span><span class="params">(<span class="type">int</span> categoryID, String curveName)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">flush</span><span class="params">(<span class="type">int</span> categoryID, String curveName)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">flushAll</span><span class="params">()</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setCurveInterpolation</span><span class="params">(<span class="type">int</span> categoryID, String curveName, <span class="type">int</span> mode)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">createTable</span><span class="params">(<span class="type">int</span> categoryID, String tableTemplateName, String tableName, <span class="type">int</span> isOverwritten)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getTableRowCount</span><span class="params">(<span class="type">int</span> categoryID, String tableName)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">getCommonTableColumnName</span><span class="params">(<span class="type">int</span> categoryID, String tableName, <span class="type">int</span> columnIndex)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getTableColumnCount</span><span class="params">(<span class="type">int</span> categoryID, String tableName)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">readTable</span><span class="params">(<span class="type">int</span> categoryID, String tableName, <span class="type">int</span> rowIndex, <span class="type">int</span> columnIndex)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">float</span> <span class="title function_">readTable_x</span><span class="params">(<span class="type">int</span> categoryID, String tableName, <span class="type">int</span> rowIndex, <span class="type">int</span> columnIndex)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">readTable</span><span class="params">(<span class="type">int</span> categoryID, String tableName, <span class="type">int</span> rowIndex, <span class="type">float</span>[] buffer)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">readTable</span><span class="params">(<span class="type">int</span> categoryID, String tableName, <span class="type">int</span> rowIndex, String[] buffer)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">writeTable</span><span class="params">(<span class="type">int</span> categoryID, String tableName, <span class="type">int</span> rowIndex, <span class="type">float</span>[] buffer)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">writeTable</span><span class="params">(<span class="type">int</span> categoryID, String tableName, <span class="type">int</span> rowIndex, <span class="type">int</span> columnIndex, <span class="type">float</span> buffer)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">writeTable</span><span class="params">(<span class="type">int</span> categoryID, String tableName, <span class="type">int</span> rowIndex, <span class="type">int</span> columnIndex, String buffer)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">writeTable</span><span class="params">(<span class="type">int</span> categoryID, String tableName, <span class="type">int</span> rowIndex, String[] buffer)</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">copyTable</span><span class="params">(<span class="type">int</span> srcCategoryID, String srcTableName, <span class="type">int</span> desCategoryID, String desTableName, <span class="type">int</span> isOverwritten)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">removeTableAllRecords</span><span class="params">(<span class="type">int</span> categoryID, String tableName)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getDocSize</span><span class="params">(<span class="type">int</span> categoryID, String docName)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">createDocument</span><span class="params">(<span class="type">int</span> categoryID, String docName, <span class="type">int</span> isOverwritten)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">createDocument</span><span class="params">(<span class="type">int</span> categoryID, String docName, String srcFilePath, <span class="type">int</span> isOverwritten)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">readDocument</span><span class="params">(<span class="type">int</span> categoryID, String docName, <span class="type">int</span> offset, <span class="type">int</span> byteSize, <span class="type">byte</span>[] buffer)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">readDocument</span><span class="params">(<span class="type">int</span> categoryID, String docName, String desFilePath)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">writeDocument</span><span class="params">(<span class="type">int</span> categoryID, String docName, <span class="type">int</span> offset, <span class="type">int</span> byteSize, <span class="type">byte</span>[] buffer)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">dispatchNotification</span><span class="params">()</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="类源码-1"><a href="#类源码-1" class="headerlink" title="类源码"></a>类源码</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br><span class="line">824</span><br><span class="line">825</span><br><span class="line">826</span><br><span class="line">827</span><br><span class="line">828</span><br><span class="line">829</span><br><span class="line">830</span><br><span class="line">831</span><br><span class="line">832</span><br><span class="line">833</span><br><span class="line">834</span><br><span class="line">835</span><br><span class="line">836</span><br><span class="line">837</span><br><span class="line">838</span><br><span class="line">839</span><br><span class="line">840</span><br><span class="line">841</span><br><span class="line">842</span><br><span class="line">843</span><br><span class="line">844</span><br><span class="line">845</span><br><span class="line">846</span><br><span class="line">847</span><br><span class="line">848</span><br><span class="line">849</span><br><span class="line">850</span><br><span class="line">851</span><br><span class="line">852</span><br><span class="line">853</span><br><span class="line">854</span><br><span class="line">855</span><br><span class="line">856</span><br><span class="line">857</span><br><span class="line">858</span><br><span class="line">859</span><br><span class="line">860</span><br><span class="line">861</span><br><span class="line">862</span><br><span class="line">863</span><br><span class="line">864</span><br><span class="line">865</span><br><span class="line">866</span><br><span class="line">867</span><br><span class="line">868</span><br><span class="line">869</span><br><span class="line">870</span><br><span class="line">871</span><br><span class="line">872</span><br><span class="line">873</span><br><span class="line">874</span><br><span class="line">875</span><br><span class="line">876</span><br><span class="line">877</span><br><span class="line">878</span><br><span class="line">879</span><br><span class="line">880</span><br><span class="line">881</span><br><span class="line">882</span><br><span class="line">883</span><br><span class="line">884</span><br><span class="line">885</span><br><span class="line">886</span><br><span class="line">887</span><br><span class="line">888</span><br><span class="line">889</span><br><span class="line">890</span><br><span class="line">891</span><br><span class="line">892</span><br><span class="line">893</span><br><span class="line">894</span><br><span class="line">895</span><br><span class="line">896</span><br><span class="line">897</span><br><span class="line">898</span><br><span class="line">899</span><br><span class="line">900</span><br><span class="line">901</span><br><span class="line">902</span><br><span class="line">903</span><br><span class="line">904</span><br><span class="line">905</span><br><span class="line">906</span><br><span class="line">907</span><br><span class="line">908</span><br><span class="line">909</span><br><span class="line">910</span><br><span class="line">911</span><br><span class="line">912</span><br><span class="line">913</span><br><span class="line">914</span><br><span class="line">915</span><br><span class="line">916</span><br><span class="line">917</span><br><span class="line">918</span><br><span class="line">919</span><br><span class="line">920</span><br><span class="line">921</span><br><span class="line">922</span><br><span class="line">923</span><br><span class="line">924</span><br><span class="line">925</span><br><span class="line">926</span><br><span class="line">927</span><br><span class="line">928</span><br><span class="line">929</span><br><span class="line">930</span><br><span class="line">931</span><br><span class="line">932</span><br><span class="line">933</span><br><span class="line">934</span><br><span class="line">935</span><br><span class="line">936</span><br><span class="line">937</span><br><span class="line">938</span><br><span class="line">939</span><br><span class="line">940</span><br><span class="line">941</span><br><span class="line">942</span><br><span class="line">943</span><br><span class="line">944</span><br><span class="line">945</span><br><span class="line">946</span><br><span class="line">947</span><br><span class="line">948</span><br><span class="line">949</span><br><span class="line">950</span><br><span class="line">951</span><br><span class="line">952</span><br><span class="line">953</span><br><span class="line">954</span><br><span class="line">955</span><br><span class="line">956</span><br><span class="line">957</span><br><span class="line">958</span><br><span class="line">959</span><br><span class="line">960</span><br><span class="line">961</span><br><span class="line">962</span><br><span class="line">963</span><br><span class="line">964</span><br><span class="line">965</span><br><span class="line">966</span><br><span class="line">967</span><br><span class="line">968</span><br><span class="line">969</span><br><span class="line">970</span><br><span class="line">971</span><br><span class="line">972</span><br><span class="line">973</span><br><span class="line">974</span><br><span class="line">975</span><br><span class="line">976</span><br><span class="line">977</span><br><span class="line">978</span><br><span class="line">979</span><br><span class="line">980</span><br><span class="line">981</span><br><span class="line">982</span><br><span class="line">983</span><br><span class="line">984</span><br><span class="line">985</span><br><span class="line">986</span><br><span class="line">987</span><br><span class="line">988</span><br><span class="line">989</span><br><span class="line">990</span><br><span class="line">991</span><br><span class="line">992</span><br><span class="line">993</span><br><span class="line">994</span><br><span class="line">995</span><br><span class="line">996</span><br><span class="line">997</span><br><span class="line">998</span><br><span class="line">999</span><br><span class="line">1000</span><br><span class="line">1001</span><br><span class="line">1002</span><br><span class="line">1003</span><br><span class="line">1004</span><br><span class="line">1005</span><br><span class="line">1006</span><br><span class="line">1007</span><br><span class="line">1008</span><br><span class="line">1009</span><br><span class="line">1010</span><br><span class="line">1011</span><br><span class="line">1012</span><br><span class="line">1013</span><br><span class="line">1014</span><br><span class="line">1015</span><br><span class="line">1016</span><br><span class="line">1017</span><br><span class="line">1018</span><br><span class="line">1019</span><br><span class="line">1020</span><br><span class="line">1021</span><br><span class="line">1022</span><br><span class="line">1023</span><br><span class="line">1024</span><br><span class="line">1025</span><br><span class="line">1026</span><br><span class="line">1027</span><br><span class="line">1028</span><br><span class="line">1029</span><br><span class="line">1030</span><br><span class="line">1031</span><br><span class="line">1032</span><br><span class="line">1033</span><br><span class="line">1034</span><br><span class="line">1035</span><br><span class="line">1036</span><br><span class="line">1037</span><br><span class="line">1038</span><br><span class="line">1039</span><br><span class="line">1040</span><br><span class="line">1041</span><br><span class="line">1042</span><br><span class="line">1043</span><br><span class="line">1044</span><br><span class="line">1045</span><br><span class="line">1046</span><br><span class="line">1047</span><br><span class="line">1048</span><br><span class="line">1049</span><br><span class="line">1050</span><br><span class="line">1051</span><br><span class="line">1052</span><br><span class="line">1053</span><br><span class="line">1054</span><br><span class="line">1055</span><br><span class="line">1056</span><br><span class="line">1057</span><br><span class="line">1058</span><br><span class="line">1059</span><br><span class="line">1060</span><br><span class="line">1061</span><br><span class="line">1062</span><br><span class="line">1063</span><br><span class="line">1064</span><br><span class="line">1065</span><br><span class="line">1066</span><br><span class="line">1067</span><br><span class="line">1068</span><br><span class="line">1069</span><br><span class="line">1070</span><br><span class="line">1071</span><br><span class="line">1072</span><br><span class="line">1073</span><br><span class="line">1074</span><br><span class="line">1075</span><br><span class="line">1076</span><br><span class="line">1077</span><br><span class="line">1078</span><br><span class="line">1079</span><br><span class="line">1080</span><br><span class="line">1081</span><br><span class="line">1082</span><br><span class="line">1083</span><br><span class="line">1084</span><br><span class="line">1085</span><br><span class="line">1086</span><br><span class="line">1087</span><br><span class="line">1088</span><br><span class="line">1089</span><br><span class="line">1090</span><br><span class="line">1091</span><br><span class="line">1092</span><br><span class="line">1093</span><br><span class="line">1094</span><br><span class="line">1095</span><br><span class="line">1096</span><br><span class="line">1097</span><br><span class="line">1098</span><br><span class="line">1099</span><br><span class="line">1100</span><br><span class="line">1101</span><br><span class="line">1102</span><br><span class="line">1103</span><br><span class="line">1104</span><br><span class="line">1105</span><br><span class="line">1106</span><br><span class="line">1107</span><br><span class="line">1108</span><br><span class="line">1109</span><br><span class="line">1110</span><br><span class="line">1111</span><br><span class="line">1112</span><br><span class="line">1113</span><br><span class="line">1114</span><br><span class="line">1115</span><br><span class="line">1116</span><br><span class="line">1117</span><br><span class="line">1118</span><br><span class="line">1119</span><br><span class="line">1120</span><br><span class="line">1121</span><br><span class="line">1122</span><br><span class="line">1123</span><br><span class="line">1124</span><br><span class="line">1125</span><br><span class="line">1126</span><br><span class="line">1127</span><br><span class="line">1128</span><br><span class="line">1129</span><br><span class="line">1130</span><br><span class="line">1131</span><br><span class="line">1132</span><br><span class="line">1133</span><br><span class="line">1134</span><br><span class="line">1135</span><br><span class="line">1136</span><br><span class="line">1137</span><br><span class="line">1138</span><br><span class="line">1139</span><br><span class="line">1140</span><br><span class="line">1141</span><br><span class="line">1142</span><br><span class="line">1143</span><br><span class="line">1144</span><br><span class="line">1145</span><br><span class="line">1146</span><br><span class="line">1147</span><br><span class="line">1148</span><br><span class="line">1149</span><br><span class="line">1150</span><br><span class="line">1151</span><br><span class="line">1152</span><br><span class="line">1153</span><br><span class="line">1154</span><br><span class="line">1155</span><br><span class="line">1156</span><br><span class="line">1157</span><br><span class="line">1158</span><br><span class="line">1159</span><br><span class="line">1160</span><br><span class="line">1161</span><br><span class="line">1162</span><br><span class="line">1163</span><br><span class="line">1164</span><br><span class="line">1165</span><br><span class="line">1166</span><br><span class="line">1167</span><br><span class="line">1168</span><br><span class="line">1169</span><br><span class="line">1170</span><br><span class="line">1171</span><br><span class="line">1172</span><br><span class="line">1173</span><br><span class="line">1174</span><br><span class="line">1175</span><br><span class="line">1176</span><br><span class="line">1177</span><br><span class="line">1178</span><br><span class="line">1179</span><br><span class="line">1180</span><br><span class="line">1181</span><br><span class="line">1182</span><br><span class="line">1183</span><br><span class="line">1184</span><br><span class="line">1185</span><br><span class="line">1186</span><br><span class="line">1187</span><br><span class="line">1188</span><br><span class="line">1189</span><br><span class="line">1190</span><br><span class="line">1191</span><br><span class="line">1192</span><br><span class="line">1193</span><br><span class="line">1194</span><br><span class="line">1195</span><br><span class="line">1196</span><br><span class="line">1197</span><br><span class="line">1198</span><br><span class="line">1199</span><br><span class="line">1200</span><br><span class="line">1201</span><br><span class="line">1202</span><br><span class="line">1203</span><br><span class="line">1204</span><br><span class="line">1205</span><br><span class="line">1206</span><br><span class="line">1207</span><br><span class="line">1208</span><br><span class="line">1209</span><br><span class="line">1210</span><br><span class="line">1211</span><br><span class="line">1212</span><br><span class="line">1213</span><br><span class="line">1214</span><br><span class="line">1215</span><br><span class="line">1216</span><br><span class="line">1217</span><br><span class="line">1218</span><br><span class="line">1219</span><br><span class="line">1220</span><br><span class="line">1221</span><br><span class="line">1222</span><br><span class="line">1223</span><br><span class="line">1224</span><br><span class="line">1225</span><br><span class="line">1226</span><br><span class="line">1227</span><br><span class="line">1228</span><br><span class="line">1229</span><br><span class="line">1230</span><br><span class="line">1231</span><br><span class="line">1232</span><br><span class="line">1233</span><br><span class="line">1234</span><br><span class="line">1235</span><br><span class="line">1236</span><br><span class="line">1237</span><br><span class="line">1238</span><br><span class="line">1239</span><br><span class="line">1240</span><br><span class="line">1241</span><br><span class="line">1242</span><br><span class="line">1243</span><br><span class="line">1244</span><br><span class="line">1245</span><br><span class="line">1246</span><br><span class="line">1247</span><br><span class="line">1248</span><br><span class="line">1249</span><br><span class="line">1250</span><br><span class="line">1251</span><br><span class="line">1252</span><br><span class="line">1253</span><br><span class="line">1254</span><br><span class="line">1255</span><br><span class="line">1256</span><br><span class="line">1257</span><br><span class="line">1258</span><br><span class="line">1259</span><br><span class="line">1260</span><br><span class="line">1261</span><br><span class="line">1262</span><br><span class="line">1263</span><br><span class="line">1264</span><br><span class="line">1265</span><br><span class="line">1266</span><br><span class="line">1267</span><br><span class="line">1268</span><br><span class="line">1269</span><br><span class="line">1270</span><br><span class="line">1271</span><br><span class="line">1272</span><br><span class="line">1273</span><br><span class="line">1274</span><br><span class="line">1275</span><br><span class="line">1276</span><br><span class="line">1277</span><br><span class="line">1278</span><br><span class="line">1279</span><br><span class="line">1280</span><br><span class="line">1281</span><br><span class="line">1282</span><br><span class="line">1283</span><br><span class="line">1284</span><br><span class="line">1285</span><br><span class="line">1286</span><br><span class="line">1287</span><br><span class="line">1288</span><br><span class="line">1289</span><br><span class="line">1290</span><br><span class="line">1291</span><br><span class="line">1292</span><br><span class="line">1293</span><br><span class="line">1294</span><br><span class="line">1295</span><br><span class="line">1296</span><br><span class="line">1297</span><br><span class="line">1298</span><br><span class="line">1299</span><br><span class="line">1300</span><br><span class="line">1301</span><br><span class="line">1302</span><br><span class="line">1303</span><br><span class="line">1304</span><br><span class="line">1305</span><br><span class="line">1306</span><br><span class="line">1307</span><br><span class="line">1308</span><br><span class="line">1309</span><br><span class="line">1310</span><br><span class="line">1311</span><br><span class="line">1312</span><br><span class="line">1313</span><br><span class="line">1314</span><br><span class="line">1315</span><br><span class="line">1316</span><br><span class="line">1317</span><br><span class="line">1318</span><br><span class="line">1319</span><br><span class="line">1320</span><br><span class="line">1321</span><br><span class="line">1322</span><br><span class="line">1323</span><br><span class="line">1324</span><br><span class="line">1325</span><br><span class="line">1326</span><br><span class="line">1327</span><br><span class="line">1328</span><br><span class="line">1329</span><br><span class="line">1330</span><br><span class="line">1331</span><br><span class="line">1332</span><br><span class="line">1333</span><br><span class="line">1334</span><br><span class="line">1335</span><br><span class="line">1336</span><br><span class="line">1337</span><br><span class="line">1338</span><br><span class="line">1339</span><br><span class="line">1340</span><br><span class="line">1341</span><br><span class="line">1342</span><br><span class="line">1343</span><br><span class="line">1344</span><br><span class="line">1345</span><br><span class="line">1346</span><br><span class="line">1347</span><br><span class="line">1348</span><br><span class="line">1349</span><br><span class="line">1350</span><br><span class="line">1351</span><br><span class="line">1352</span><br><span class="line">1353</span><br><span class="line">1354</span><br><span class="line">1355</span><br><span class="line">1356</span><br><span class="line">1357</span><br><span class="line">1358</span><br><span class="line">1359</span><br><span class="line">1360</span><br><span class="line">1361</span><br><span class="line">1362</span><br><span class="line">1363</span><br><span class="line">1364</span><br><span class="line">1365</span><br><span class="line">1366</span><br><span class="line">1367</span><br><span class="line">1368</span><br><span class="line">1369</span><br><span class="line">1370</span><br><span class="line">1371</span><br><span class="line">1372</span><br><span class="line">1373</span><br><span class="line">1374</span><br><span class="line">1375</span><br><span class="line">1376</span><br><span class="line">1377</span><br><span class="line">1378</span><br><span class="line">1379</span><br><span class="line">1380</span><br><span class="line">1381</span><br><span class="line">1382</span><br><span class="line">1383</span><br><span class="line">1384</span><br><span class="line">1385</span><br><span class="line">1386</span><br><span class="line">1387</span><br><span class="line">1388</span><br><span class="line">1389</span><br><span class="line">1390</span><br><span class="line">1391</span><br><span class="line">1392</span><br><span class="line">1393</span><br><span class="line">1394</span><br><span class="line">1395</span><br><span class="line">1396</span><br><span class="line">1397</span><br><span class="line">1398</span><br><span class="line">1399</span><br><span class="line">1400</span><br><span class="line">1401</span><br><span class="line">1402</span><br><span class="line">1403</span><br><span class="line">1404</span><br><span class="line">1405</span><br><span class="line">1406</span><br><span class="line">1407</span><br><span class="line">1408</span><br><span class="line">1409</span><br><span class="line">1410</span><br><span class="line">1411</span><br><span class="line">1412</span><br><span class="line">1413</span><br><span class="line">1414</span><br><span class="line">1415</span><br><span class="line">1416</span><br><span class="line">1417</span><br><span class="line">1418</span><br><span class="line">1419</span><br><span class="line">1420</span><br><span class="line">1421</span><br><span class="line">1422</span><br><span class="line">1423</span><br><span class="line">1424</span><br><span class="line">1425</span><br><span class="line">1426</span><br><span class="line">1427</span><br><span class="line">1428</span><br><span class="line">1429</span><br><span class="line">1430</span><br><span class="line">1431</span><br><span class="line">1432</span><br><span class="line">1433</span><br><span class="line">1434</span><br><span class="line">1435</span><br><span class="line">1436</span><br><span class="line">1437</span><br><span class="line">1438</span><br><span class="line">1439</span><br><span class="line">1440</span><br><span class="line">1441</span><br><span class="line">1442</span><br><span class="line">1443</span><br><span class="line">1444</span><br><span class="line">1445</span><br><span class="line">1446</span><br><span class="line">1447</span><br><span class="line">1448</span><br><span class="line">1449</span><br><span class="line">1450</span><br><span class="line">1451</span><br><span class="line">1452</span><br><span class="line">1453</span><br><span class="line">1454</span><br><span class="line">1455</span><br><span class="line">1456</span><br><span class="line">1457</span><br><span class="line">1458</span><br><span class="line">1459</span><br><span class="line">1460</span><br><span class="line">1461</span><br><span class="line">1462</span><br><span class="line">1463</span><br><span class="line">1464</span><br><span class="line">1465</span><br><span class="line">1466</span><br><span class="line">1467</span><br><span class="line">1468</span><br><span class="line">1469</span><br><span class="line">1470</span><br><span class="line">1471</span><br><span class="line">1472</span><br><span class="line">1473</span><br><span class="line">1474</span><br><span class="line">1475</span><br><span class="line">1476</span><br><span class="line">1477</span><br><span class="line">1478</span><br><span class="line">1479</span><br><span class="line">1480</span><br><span class="line">1481</span><br><span class="line">1482</span><br><span class="line">1483</span><br><span class="line">1484</span><br><span class="line">1485</span><br><span class="line">1486</span><br><span class="line">1487</span><br><span class="line">1488</span><br><span class="line">1489</span><br><span class="line">1490</span><br><span class="line">1491</span><br><span class="line">1492</span><br><span class="line">1493</span><br><span class="line">1494</span><br><span class="line">1495</span><br><span class="line">1496</span><br><span class="line">1497</span><br><span class="line">1498</span><br><span class="line">1499</span><br><span class="line">1500</span><br><span class="line">1501</span><br><span class="line">1502</span><br><span class="line">1503</span><br><span class="line">1504</span><br><span class="line">1505</span><br><span class="line">1506</span><br><span class="line">1507</span><br><span class="line">1508</span><br><span class="line">1509</span><br><span class="line">1510</span><br><span class="line">1511</span><br><span class="line">1512</span><br><span class="line">1513</span><br><span class="line">1514</span><br><span class="line">1515</span><br><span class="line">1516</span><br><span class="line">1517</span><br><span class="line">1518</span><br><span class="line">1519</span><br><span class="line">1520</span><br><span class="line">1521</span><br><span class="line">1522</span><br><span class="line">1523</span><br><span class="line">1524</span><br><span class="line">1525</span><br><span class="line">1526</span><br><span class="line">1527</span><br><span class="line">1528</span><br><span class="line">1529</span><br><span class="line">1530</span><br><span class="line">1531</span><br><span class="line">1532</span><br><span class="line">1533</span><br><span class="line">1534</span><br><span class="line">1535</span><br><span class="line">1536</span><br><span class="line">1537</span><br><span class="line">1538</span><br><span class="line">1539</span><br><span class="line">1540</span><br><span class="line">1541</span><br><span class="line">1542</span><br><span class="line">1543</span><br><span class="line">1544</span><br><span class="line">1545</span><br><span class="line">1546</span><br><span class="line">1547</span><br><span class="line">1548</span><br><span class="line">1549</span><br><span class="line">1550</span><br><span class="line">1551</span><br><span class="line">1552</span><br><span class="line">1553</span><br><span class="line">1554</span><br><span class="line">1555</span><br><span class="line">1556</span><br><span class="line">1557</span><br><span class="line">1558</span><br><span class="line">1559</span><br><span class="line">1560</span><br><span class="line">1561</span><br><span class="line">1562</span><br><span class="line">1563</span><br><span class="line">1564</span><br><span class="line">1565</span><br><span class="line">1566</span><br><span class="line">1567</span><br><span class="line">1568</span><br><span class="line">1569</span><br><span class="line">1570</span><br><span class="line">1571</span><br><span class="line">1572</span><br><span class="line">1573</span><br><span class="line">1574</span><br><span class="line">1575</span><br><span class="line">1576</span><br><span class="line">1577</span><br><span class="line">1578</span><br><span class="line">1579</span><br><span class="line">1580</span><br><span class="line">1581</span><br><span class="line">1582</span><br><span class="line">1583</span><br><span class="line">1584</span><br><span class="line">1585</span><br><span class="line">1586</span><br><span class="line">1587</span><br><span class="line">1588</span><br><span class="line">1589</span><br><span class="line">1590</span><br><span class="line">1591</span><br><span class="line">1592</span><br><span class="line">1593</span><br><span class="line">1594</span><br><span class="line">1595</span><br><span class="line">1596</span><br><span class="line">1597</span><br><span class="line">1598</span><br><span class="line">1599</span><br><span class="line">1600</span><br><span class="line">1601</span><br><span class="line">1602</span><br><span class="line">1603</span><br><span class="line">1604</span><br><span class="line">1605</span><br><span class="line">1606</span><br><span class="line">1607</span><br><span class="line">1608</span><br><span class="line">1609</span><br><span class="line">1610</span><br><span class="line">1611</span><br><span class="line">1612</span><br><span class="line">1613</span><br><span class="line">1614</span><br><span class="line">1615</span><br><span class="line">1616</span><br><span class="line">1617</span><br><span class="line">1618</span><br><span class="line">1619</span><br><span class="line">1620</span><br><span class="line">1621</span><br><span class="line">1622</span><br><span class="line">1623</span><br><span class="line">1624</span><br><span class="line">1625</span><br><span class="line">1626</span><br><span class="line">1627</span><br><span class="line">1628</span><br><span class="line">1629</span><br><span class="line">1630</span><br><span class="line">1631</span><br><span class="line">1632</span><br><span class="line">1633</span><br><span class="line">1634</span><br><span class="line">1635</span><br><span class="line">1636</span><br><span class="line">1637</span><br><span class="line">1638</span><br><span class="line">1639</span><br><span class="line">1640</span><br><span class="line">1641</span><br><span class="line">1642</span><br><span class="line">1643</span><br><span class="line">1644</span><br><span class="line">1645</span><br><span class="line">1646</span><br><span class="line">1647</span><br><span class="line">1648</span><br><span class="line">1649</span><br><span class="line">1650</span><br><span class="line">1651</span><br><span class="line">1652</span><br><span class="line">1653</span><br><span class="line">1654</span><br><span class="line">1655</span><br><span class="line">1656</span><br><span class="line">1657</span><br><span class="line">1658</span><br><span class="line">1659</span><br><span class="line">1660</span><br><span class="line">1661</span><br><span class="line">1662</span><br><span class="line">1663</span><br><span class="line">1664</span><br><span class="line">1665</span><br><span class="line">1666</span><br><span class="line">1667</span><br><span class="line">1668</span><br><span class="line">1669</span><br><span class="line">1670</span><br><span class="line">1671</span><br><span class="line">1672</span><br><span class="line">1673</span><br><span class="line">1674</span><br><span class="line">1675</span><br><span class="line">1676</span><br><span class="line">1677</span><br><span class="line">1678</span><br><span class="line">1679</span><br><span class="line">1680</span><br><span class="line">1681</span><br><span class="line">1682</span><br><span class="line">1683</span><br><span class="line">1684</span><br><span class="line">1685</span><br><span class="line">1686</span><br><span class="line">1687</span><br><span class="line">1688</span><br><span class="line">1689</span><br><span class="line">1690</span><br><span class="line">1691</span><br><span class="line">1692</span><br><span class="line">1693</span><br><span class="line">1694</span><br><span class="line">1695</span><br><span class="line">1696</span><br><span class="line">1697</span><br><span class="line">1698</span><br><span class="line">1699</span><br><span class="line">1700</span><br><span class="line">1701</span><br><span class="line">1702</span><br><span class="line">1703</span><br><span class="line">1704</span><br><span class="line">1705</span><br><span class="line">1706</span><br><span class="line">1707</span><br><span class="line">1708</span><br><span class="line">1709</span><br><span class="line">1710</span><br><span class="line">1711</span><br><span class="line">1712</span><br><span class="line">1713</span><br><span class="line">1714</span><br><span class="line">1715</span><br><span class="line">1716</span><br><span class="line">1717</span><br><span class="line">1718</span><br><span class="line">1719</span><br><span class="line">1720</span><br><span class="line">1721</span><br><span class="line">1722</span><br><span class="line">1723</span><br><span class="line">1724</span><br><span class="line">1725</span><br><span class="line">1726</span><br><span class="line">1727</span><br><span class="line">1728</span><br><span class="line">1729</span><br><span class="line">1730</span><br><span class="line">1731</span><br><span class="line">1732</span><br><span class="line">1733</span><br><span class="line">1734</span><br><span class="line">1735</span><br><span class="line">1736</span><br><span class="line">1737</span><br><span class="line">1738</span><br><span class="line">1739</span><br><span class="line">1740</span><br><span class="line">1741</span><br><span class="line">1742</span><br><span class="line">1743</span><br><span class="line">1744</span><br><span class="line">1745</span><br><span class="line">1746</span><br><span class="line">1747</span><br><span class="line">1748</span><br><span class="line">1749</span><br><span class="line">1750</span><br><span class="line">1751</span><br><span class="line">1752</span><br><span class="line">1753</span><br><span class="line">1754</span><br><span class="line">1755</span><br><span class="line">1756</span><br><span class="line">1757</span><br><span class="line">1758</span><br><span class="line">1759</span><br><span class="line">1760</span><br><span class="line">1761</span><br><span class="line">1762</span><br><span class="line">1763</span><br><span class="line">1764</span><br><span class="line">1765</span><br><span class="line">1766</span><br><span class="line">1767</span><br><span class="line">1768</span><br><span class="line">1769</span><br><span class="line">1770</span><br><span class="line">1771</span><br><span class="line">1772</span><br><span class="line">1773</span><br><span class="line">1774</span><br><span class="line">1775</span><br><span class="line">1776</span><br><span class="line">1777</span><br><span class="line">1778</span><br><span class="line">1779</span><br><span class="line">1780</span><br><span class="line">1781</span><br><span class="line">1782</span><br><span class="line">1783</span><br><span class="line">1784</span><br><span class="line">1785</span><br><span class="line">1786</span><br><span class="line">1787</span><br><span class="line">1788</span><br><span class="line">1789</span><br><span class="line">1790</span><br><span class="line">1791</span><br><span class="line">1792</span><br><span class="line">1793</span><br><span class="line">1794</span><br><span class="line">1795</span><br><span class="line">1796</span><br><span class="line">1797</span><br><span class="line">1798</span><br><span class="line">1799</span><br><span class="line">1800</span><br><span class="line">1801</span><br><span class="line">1802</span><br><span class="line">1803</span><br><span class="line">1804</span><br><span class="line">1805</span><br><span class="line">1806</span><br><span class="line">1807</span><br><span class="line">1808</span><br><span class="line">1809</span><br><span class="line">1810</span><br><span class="line">1811</span><br><span class="line">1812</span><br><span class="line">1813</span><br><span class="line">1814</span><br><span class="line">1815</span><br><span class="line">1816</span><br><span class="line">1817</span><br><span class="line">1818</span><br><span class="line">1819</span><br><span class="line">1820</span><br><span class="line">1821</span><br><span class="line">1822</span><br><span class="line">1823</span><br><span class="line">1824</span><br><span class="line">1825</span><br><span class="line">1826</span><br><span class="line">1827</span><br><span class="line">1828</span><br><span class="line">1829</span><br><span class="line">1830</span><br><span class="line">1831</span><br><span class="line">1832</span><br><span class="line">1833</span><br><span class="line">1834</span><br><span class="line">1835</span><br><span class="line">1836</span><br><span class="line">1837</span><br><span class="line">1838</span><br><span class="line">1839</span><br><span class="line">1840</span><br><span class="line">1841</span><br><span class="line">1842</span><br><span class="line">1843</span><br><span class="line">1844</span><br><span class="line">1845</span><br><span class="line">1846</span><br><span class="line">1847</span><br><span class="line">1848</span><br><span class="line">1849</span><br><span class="line">1850</span><br><span class="line">1851</span><br><span class="line">1852</span><br><span class="line">1853</span><br><span class="line">1854</span><br><span class="line">1855</span><br><span class="line">1856</span><br><span class="line">1857</span><br><span class="line">1858</span><br><span class="line">1859</span><br><span class="line">1860</span><br><span class="line">1861</span><br><span class="line">1862</span><br><span class="line">1863</span><br><span class="line">1864</span><br><span class="line">1865</span><br><span class="line">1866</span><br><span class="line">1867</span><br><span class="line">1868</span><br><span class="line">1869</span><br><span class="line">1870</span><br><span class="line">1871</span><br><span class="line">1872</span><br><span class="line">1873</span><br><span class="line">1874</span><br><span class="line">1875</span><br><span class="line">1876</span><br><span class="line">1877</span><br><span class="line">1878</span><br><span class="line">1879</span><br><span class="line">1880</span><br><span class="line">1881</span><br><span class="line">1882</span><br><span class="line">1883</span><br><span class="line">1884</span><br><span class="line">1885</span><br><span class="line">1886</span><br><span class="line">1887</span><br><span class="line">1888</span><br><span class="line">1889</span><br><span class="line">1890</span><br><span class="line">1891</span><br><span class="line">1892</span><br><span class="line">1893</span><br><span class="line">1894</span><br><span class="line">1895</span><br><span class="line">1896</span><br><span class="line">1897</span><br><span class="line">1898</span><br><span class="line">1899</span><br><span class="line">1900</span><br><span class="line">1901</span><br><span class="line">1902</span><br><span class="line">1903</span><br><span class="line">1904</span><br><span class="line">1905</span><br><span class="line">1906</span><br><span class="line">1907</span><br><span class="line">1908</span><br><span class="line">1909</span><br><span class="line">1910</span><br><span class="line">1911</span><br><span class="line">1912</span><br><span class="line">1913</span><br><span class="line">1914</span><br><span class="line">1915</span><br><span class="line">1916</span><br><span class="line">1917</span><br><span class="line">1918</span><br><span class="line">1919</span><br><span class="line">1920</span><br><span class="line">1921</span><br><span class="line">1922</span><br><span class="line">1923</span><br><span class="line">1924</span><br><span class="line">1925</span><br><span class="line">1926</span><br><span class="line">1927</span><br><span class="line">1928</span><br><span class="line">1929</span><br><span class="line">1930</span><br><span class="line">1931</span><br><span class="line">1932</span><br><span class="line">1933</span><br><span class="line">1934</span><br><span class="line">1935</span><br><span class="line">1936</span><br><span class="line">1937</span><br><span class="line">1938</span><br><span class="line">1939</span><br><span class="line">1940</span><br><span class="line">1941</span><br><span class="line">1942</span><br><span class="line">1943</span><br><span class="line">1944</span><br><span class="line">1945</span><br><span class="line">1946</span><br><span class="line">1947</span><br><span class="line">1948</span><br><span class="line">1949</span><br><span class="line">1950</span><br><span class="line">1951</span><br><span class="line">1952</span><br><span class="line">1953</span><br><span class="line">1954</span><br><span class="line">1955</span><br><span class="line">1956</span><br><span class="line">1957</span><br><span class="line">1958</span><br><span class="line">1959</span><br><span class="line">1960</span><br><span class="line">1961</span><br><span class="line">1962</span><br><span class="line">1963</span><br><span class="line">1964</span><br><span class="line">1965</span><br><span class="line">1966</span><br><span class="line">1967</span><br><span class="line">1968</span><br><span class="line">1969</span><br><span class="line">1970</span><br><span class="line">1971</span><br><span class="line">1972</span><br><span class="line">1973</span><br><span class="line">1974</span><br><span class="line">1975</span><br><span class="line">1976</span><br><span class="line">1977</span><br><span class="line">1978</span><br><span class="line">1979</span><br><span class="line">1980</span><br><span class="line">1981</span><br><span class="line">1982</span><br><span class="line">1983</span><br><span class="line">1984</span><br><span class="line">1985</span><br><span class="line">1986</span><br><span class="line">1987</span><br><span class="line">1988</span><br><span class="line">1989</span><br><span class="line">1990</span><br><span class="line">1991</span><br><span class="line">1992</span><br><span class="line">1993</span><br><span class="line">1994</span><br><span class="line">1995</span><br><span class="line">1996</span><br><span class="line">1997</span><br><span class="line">1998</span><br><span class="line">1999</span><br><span class="line">2000</span><br><span class="line">2001</span><br><span class="line">2002</span><br><span class="line">2003</span><br><span class="line">2004</span><br><span class="line">2005</span><br><span class="line">2006</span><br><span class="line">2007</span><br><span class="line">2008</span><br><span class="line">2009</span><br><span class="line">2010</span><br><span class="line">2011</span><br><span class="line">2012</span><br><span class="line">2013</span><br><span class="line">2014</span><br><span class="line">2015</span><br><span class="line">2016</span><br><span class="line">2017</span><br><span class="line">2018</span><br><span class="line">2019</span><br><span class="line">2020</span><br><span class="line">2021</span><br><span class="line">2022</span><br><span class="line">2023</span><br><span class="line">2024</span><br><span class="line">2025</span><br><span class="line">2026</span><br><span class="line">2027</span><br><span class="line">2028</span><br><span class="line">2029</span><br><span class="line">2030</span><br><span class="line">2031</span><br><span class="line">2032</span><br><span class="line">2033</span><br><span class="line">2034</span><br><span class="line">2035</span><br><span class="line">2036</span><br><span class="line">2037</span><br><span class="line">2038</span><br><span class="line">2039</span><br><span class="line">2040</span><br><span class="line">2041</span><br><span class="line">2042</span><br><span class="line">2043</span><br><span class="line">2044</span><br><span class="line">2045</span><br><span class="line">2046</span><br><span class="line">2047</span><br><span class="line">2048</span><br><span class="line">2049</span><br><span class="line">2050</span><br><span class="line">2051</span><br><span class="line">2052</span><br><span class="line">2053</span><br><span class="line">2054</span><br><span class="line">2055</span><br><span class="line">2056</span><br><span class="line">2057</span><br><span class="line">2058</span><br><span class="line">2059</span><br><span class="line">2060</span><br><span class="line">2061</span><br><span class="line">2062</span><br><span class="line">2063</span><br><span class="line">2064</span><br><span class="line">2065</span><br><span class="line">2066</span><br><span class="line">2067</span><br><span class="line">2068</span><br><span class="line">2069</span><br><span class="line">2070</span><br><span class="line">2071</span><br><span class="line">2072</span><br><span class="line">2073</span><br><span class="line">2074</span><br><span class="line">2075</span><br><span class="line">2076</span><br><span class="line">2077</span><br><span class="line">2078</span><br><span class="line">2079</span><br><span class="line">2080</span><br><span class="line">2081</span><br><span class="line">2082</span><br><span class="line">2083</span><br><span class="line">2084</span><br><span class="line">2085</span><br><span class="line">2086</span><br><span class="line">2087</span><br><span class="line">2088</span><br><span class="line">2089</span><br><span class="line">2090</span><br><span class="line">2091</span><br><span class="line">2092</span><br><span class="line">2093</span><br><span class="line">2094</span><br><span class="line">2095</span><br><span class="line">2096</span><br><span class="line">2097</span><br><span class="line">2098</span><br><span class="line">2099</span><br><span class="line">2100</span><br><span class="line">2101</span><br><span class="line">2102</span><br><span class="line">2103</span><br><span class="line">2104</span><br><span class="line">2105</span><br><span class="line">2106</span><br><span class="line">2107</span><br><span class="line">2108</span><br><span class="line">2109</span><br><span class="line">2110</span><br><span class="line">2111</span><br><span class="line">2112</span><br><span class="line">2113</span><br><span class="line">2114</span><br><span class="line">2115</span><br><span class="line">2116</span><br><span class="line">2117</span><br><span class="line">2118</span><br><span class="line">2119</span><br><span class="line">2120</span><br><span class="line">2121</span><br><span class="line">2122</span><br><span class="line">2123</span><br><span class="line">2124</span><br><span class="line">2125</span><br><span class="line">2126</span><br><span class="line">2127</span><br><span class="line">2128</span><br><span class="line">2129</span><br><span class="line">2130</span><br><span class="line">2131</span><br><span class="line">2132</span><br><span class="line">2133</span><br><span class="line">2134</span><br><span class="line">2135</span><br><span class="line">2136</span><br><span class="line">2137</span><br><span class="line">2138</span><br><span class="line">2139</span><br><span class="line">2140</span><br><span class="line">2141</span><br><span class="line">2142</span><br><span class="line">2143</span><br><span class="line">2144</span><br><span class="line">2145</span><br><span class="line">2146</span><br><span class="line">2147</span><br><span class="line">2148</span><br><span class="line">2149</span><br><span class="line">2150</span><br><span class="line">2151</span><br><span class="line">2152</span><br><span class="line">2153</span><br><span class="line">2154</span><br><span class="line">2155</span><br><span class="line">2156</span><br><span class="line">2157</span><br><span class="line">2158</span><br><span class="line">2159</span><br><span class="line">2160</span><br><span class="line">2161</span><br><span class="line">2162</span><br><span class="line">2163</span><br><span class="line">2164</span><br><span class="line">2165</span><br><span class="line">2166</span><br><span class="line">2167</span><br><span class="line">2168</span><br><span class="line">2169</span><br><span class="line">2170</span><br><span class="line">2171</span><br><span class="line">2172</span><br><span class="line">2173</span><br><span class="line">2174</span><br><span class="line">2175</span><br><span class="line">2176</span><br><span class="line">2177</span><br><span class="line">2178</span><br><span class="line">2179</span><br><span class="line">2180</span><br><span class="line">2181</span><br><span class="line">2182</span><br><span class="line">2183</span><br><span class="line">2184</span><br><span class="line">2185</span><br><span class="line">2186</span><br><span class="line">2187</span><br><span class="line">2188</span><br><span class="line">2189</span><br><span class="line">2190</span><br><span class="line">2191</span><br><span class="line">2192</span><br><span class="line">2193</span><br><span class="line">2194</span><br><span class="line">2195</span><br><span class="line">2196</span><br><span class="line">2197</span><br><span class="line">2198</span><br><span class="line">2199</span><br><span class="line">2200</span><br><span class="line">2201</span><br><span class="line">2202</span><br><span class="line">2203</span><br><span class="line">2204</span><br><span class="line">2205</span><br><span class="line">2206</span><br><span class="line">2207</span><br><span class="line">2208</span><br><span class="line">2209</span><br><span class="line">2210</span><br><span class="line">2211</span><br><span class="line">2212</span><br><span class="line">2213</span><br><span class="line">2214</span><br><span class="line">2215</span><br><span class="line">2216</span><br><span class="line">2217</span><br><span class="line">2218</span><br><span class="line">2219</span><br><span class="line">2220</span><br><span class="line">2221</span><br><span class="line">2222</span><br><span class="line">2223</span><br><span class="line">2224</span><br><span class="line">2225</span><br><span class="line">2226</span><br><span class="line">2227</span><br><span class="line">2228</span><br><span class="line">2229</span><br><span class="line">2230</span><br><span class="line">2231</span><br><span class="line">2232</span><br><span class="line">2233</span><br><span class="line">2234</span><br><span class="line">2235</span><br><span class="line">2236</span><br><span class="line">2237</span><br><span class="line">2238</span><br><span class="line">2239</span><br><span class="line">2240</span><br><span class="line">2241</span><br><span class="line">2242</span><br><span class="line">2243</span><br><span class="line">2244</span><br><span class="line">2245</span><br><span class="line">2246</span><br><span class="line">2247</span><br><span class="line">2248</span><br><span class="line">2249</span><br><span class="line">2250</span><br><span class="line">2251</span><br><span class="line">2252</span><br><span class="line">2253</span><br><span class="line">2254</span><br><span class="line">2255</span><br><span class="line">2256</span><br><span class="line">2257</span><br><span class="line">2258</span><br><span class="line">2259</span><br><span class="line">2260</span><br><span class="line">2261</span><br><span class="line">2262</span><br><span class="line">2263</span><br><span class="line">2264</span><br><span class="line">2265</span><br><span class="line">2266</span><br><span class="line">2267</span><br><span class="line">2268</span><br><span class="line">2269</span><br><span class="line">2270</span><br><span class="line">2271</span><br><span class="line">2272</span><br><span class="line">2273</span><br><span class="line">2274</span><br><span class="line">2275</span><br><span class="line">2276</span><br><span class="line">2277</span><br><span class="line">2278</span><br><span class="line">2279</span><br><span class="line">2280</span><br><span class="line">2281</span><br><span class="line">2282</span><br><span class="line">2283</span><br><span class="line">2284</span><br><span class="line">2285</span><br><span class="line">2286</span><br><span class="line">2287</span><br><span class="line">2288</span><br><span class="line">2289</span><br><span class="line">2290</span><br><span class="line">2291</span><br><span class="line">2292</span><br><span class="line">2293</span><br><span class="line">2294</span><br><span class="line">2295</span><br><span class="line">2296</span><br><span class="line">2297</span><br><span class="line">2298</span><br><span class="line">2299</span><br><span class="line">2300</span><br><span class="line">2301</span><br><span class="line">2302</span><br><span class="line">2303</span><br><span class="line">2304</span><br><span class="line">2305</span><br><span class="line">2306</span><br><span class="line">2307</span><br><span class="line">2308</span><br><span class="line">2309</span><br><span class="line">2310</span><br><span class="line">2311</span><br><span class="line">2312</span><br><span class="line">2313</span><br><span class="line">2314</span><br><span class="line">2315</span><br><span class="line">2316</span><br><span class="line">2317</span><br><span class="line">2318</span><br><span class="line">2319</span><br><span class="line">2320</span><br><span class="line">2321</span><br><span class="line">2322</span><br><span class="line">2323</span><br><span class="line">2324</span><br><span class="line">2325</span><br><span class="line">2326</span><br><span class="line">2327</span><br><span class="line">2328</span><br><span class="line">2329</span><br><span class="line">2330</span><br><span class="line">2331</span><br><span class="line">2332</span><br><span class="line">2333</span><br><span class="line">2334</span><br><span class="line">2335</span><br><span class="line">2336</span><br><span class="line">2337</span><br><span class="line">2338</span><br><span class="line">2339</span><br><span class="line">2340</span><br><span class="line">2341</span><br><span class="line">2342</span><br><span class="line">2343</span><br><span class="line">2344</span><br><span class="line">2345</span><br><span class="line">2346</span><br><span class="line">2347</span><br><span class="line">2348</span><br><span class="line">2349</span><br><span class="line">2350</span><br><span class="line">2351</span><br><span class="line">2352</span><br><span class="line">2353</span><br><span class="line">2354</span><br><span class="line">2355</span><br><span class="line">2356</span><br><span class="line">2357</span><br><span class="line">2358</span><br><span class="line">2359</span><br><span class="line">2360</span><br><span class="line">2361</span><br><span class="line">2362</span><br><span class="line">2363</span><br><span class="line">2364</span><br><span class="line">2365</span><br><span class="line">2366</span><br><span class="line">2367</span><br><span class="line">2368</span><br><span class="line">2369</span><br><span class="line">2370</span><br><span class="line">2371</span><br><span class="line">2372</span><br><span class="line">2373</span><br><span class="line">2374</span><br><span class="line">2375</span><br><span class="line">2376</span><br><span class="line">2377</span><br><span class="line">2378</span><br><span class="line">2379</span><br><span class="line">2380</span><br><span class="line">2381</span><br><span class="line">2382</span><br><span class="line">2383</span><br><span class="line">2384</span><br><span class="line">2385</span><br><span class="line">2386</span><br><span class="line">2387</span><br><span class="line">2388</span><br><span class="line">2389</span><br><span class="line">2390</span><br><span class="line">2391</span><br><span class="line">2392</span><br><span class="line">2393</span><br><span class="line">2394</span><br><span class="line">2395</span><br><span class="line">2396</span><br><span class="line">2397</span><br><span class="line">2398</span><br><span class="line">2399</span><br><span class="line">2400</span><br><span class="line">2401</span><br><span class="line">2402</span><br><span class="line">2403</span><br><span class="line">2404</span><br><span class="line">2405</span><br><span class="line">2406</span><br><span class="line">2407</span><br><span class="line">2408</span><br><span class="line">2409</span><br><span class="line">2410</span><br><span class="line">2411</span><br><span class="line">2412</span><br><span class="line">2413</span><br><span class="line">2414</span><br><span class="line">2415</span><br><span class="line">2416</span><br><span class="line">2417</span><br><span class="line">2418</span><br><span class="line">2419</span><br><span class="line">2420</span><br><span class="line">2421</span><br><span class="line">2422</span><br><span class="line">2423</span><br><span class="line">2424</span><br><span class="line">2425</span><br><span class="line">2426</span><br><span class="line">2427</span><br><span class="line">2428</span><br><span class="line">2429</span><br><span class="line">2430</span><br><span class="line">2431</span><br><span class="line">2432</span><br><span class="line">2433</span><br><span class="line">2434</span><br><span class="line">2435</span><br><span class="line">2436</span><br><span class="line">2437</span><br><span class="line">2438</span><br><span class="line">2439</span><br><span class="line">2440</span><br><span class="line">2441</span><br><span class="line">2442</span><br><span class="line">2443</span><br><span class="line">2444</span><br><span class="line">2445</span><br><span class="line">2446</span><br><span class="line">2447</span><br><span class="line">2448</span><br><span class="line">2449</span><br><span class="line">2450</span><br><span class="line">2451</span><br><span class="line">2452</span><br><span class="line">2453</span><br><span class="line">2454</span><br><span class="line">2455</span><br><span class="line">2456</span><br><span class="line">2457</span><br><span class="line">2458</span><br><span class="line">2459</span><br><span class="line">2460</span><br><span class="line">2461</span><br><span class="line">2462</span><br><span class="line">2463</span><br><span class="line">2464</span><br><span class="line">2465</span><br><span class="line">2466</span><br><span class="line">2467</span><br><span class="line">2468</span><br><span class="line">2469</span><br><span class="line">2470</span><br><span class="line">2471</span><br><span class="line">2472</span><br><span class="line">2473</span><br><span class="line">2474</span><br><span class="line">2475</span><br><span class="line">2476</span><br><span class="line">2477</span><br><span class="line">2478</span><br><span class="line">2479</span><br><span class="line">2480</span><br><span class="line">2481</span><br><span class="line">2482</span><br><span class="line">2483</span><br><span class="line">2484</span><br><span class="line">2485</span><br><span class="line">2486</span><br><span class="line">2487</span><br><span class="line">2488</span><br><span class="line">2489</span><br><span class="line">2490</span><br><span class="line">2491</span><br><span class="line">2492</span><br><span class="line">2493</span><br><span class="line">2494</span><br><span class="line">2495</span><br><span class="line">2496</span><br><span class="line">2497</span><br><span class="line">2498</span><br><span class="line">2499</span><br><span class="line">2500</span><br><span class="line">2501</span><br><span class="line">2502</span><br><span class="line">2503</span><br><span class="line">2504</span><br><span class="line">2505</span><br><span class="line">2506</span><br><span class="line">2507</span><br><span class="line">2508</span><br><span class="line">2509</span><br><span class="line">2510</span><br><span class="line">2511</span><br><span class="line">2512</span><br><span class="line">2513</span><br><span class="line">2514</span><br><span class="line">2515</span><br><span class="line">2516</span><br><span class="line">2517</span><br><span class="line">2518</span><br><span class="line">2519</span><br><span class="line">2520</span><br><span class="line">2521</span><br><span class="line">2522</span><br><span class="line">2523</span><br><span class="line">2524</span><br><span class="line">2525</span><br><span class="line">2526</span><br><span class="line">2527</span><br><span class="line">2528</span><br><span class="line">2529</span><br><span class="line">2530</span><br><span class="line">2531</span><br><span class="line">2532</span><br><span class="line">2533</span><br><span class="line">2534</span><br><span class="line">2535</span><br><span class="line">2536</span><br><span class="line">2537</span><br><span class="line">2538</span><br><span class="line">2539</span><br><span class="line">2540</span><br><span class="line">2541</span><br><span class="line">2542</span><br><span class="line">2543</span><br><span class="line">2544</span><br><span class="line">2545</span><br><span class="line">2546</span><br><span class="line">2547</span><br><span class="line">2548</span><br><span class="line">2549</span><br><span class="line">2550</span><br><span class="line">2551</span><br><span class="line">2552</span><br><span class="line">2553</span><br><span class="line">2554</span><br><span class="line">2555</span><br><span class="line">2556</span><br><span class="line">2557</span><br><span class="line">2558</span><br><span class="line">2559</span><br><span class="line">2560</span><br><span class="line">2561</span><br><span class="line">2562</span><br><span class="line">2563</span><br><span class="line">2564</span><br><span class="line">2565</span><br><span class="line">2566</span><br><span class="line">2567</span><br><span class="line">2568</span><br><span class="line">2569</span><br><span class="line">2570</span><br><span class="line">2571</span><br><span class="line">2572</span><br><span class="line">2573</span><br><span class="line">2574</span><br><span class="line">2575</span><br><span class="line">2576</span><br><span class="line">2577</span><br><span class="line">2578</span><br><span class="line">2579</span><br><span class="line">2580</span><br><span class="line">2581</span><br><span class="line">2582</span><br><span class="line">2583</span><br><span class="line">2584</span><br><span class="line">2585</span><br><span class="line">2586</span><br><span class="line">2587</span><br><span class="line">2588</span><br><span class="line">2589</span><br><span class="line">2590</span><br><span class="line">2591</span><br><span class="line">2592</span><br><span class="line">2593</span><br><span class="line">2594</span><br><span class="line">2595</span><br><span class="line">2596</span><br><span class="line">2597</span><br><span class="line">2598</span><br><span class="line">2599</span><br><span class="line">2600</span><br><span class="line">2601</span><br><span class="line">2602</span><br><span class="line">2603</span><br><span class="line">2604</span><br><span class="line">2605</span><br><span class="line">2606</span><br><span class="line">2607</span><br><span class="line">2608</span><br><span class="line">2609</span><br><span class="line">2610</span><br><span class="line">2611</span><br><span class="line">2612</span><br><span class="line">2613</span><br><span class="line">2614</span><br><span class="line">2615</span><br><span class="line">2616</span><br><span class="line">2617</span><br><span class="line">2618</span><br><span class="line">2619</span><br><span class="line">2620</span><br><span class="line">2621</span><br><span class="line">2622</span><br><span class="line">2623</span><br><span class="line">2624</span><br><span class="line">2625</span><br><span class="line">2626</span><br><span class="line">2627</span><br><span class="line">2628</span><br><span class="line">2629</span><br><span class="line">2630</span><br><span class="line">2631</span><br><span class="line">2632</span><br><span class="line">2633</span><br><span class="line">2634</span><br><span class="line">2635</span><br><span class="line">2636</span><br><span class="line">2637</span><br><span class="line">2638</span><br><span class="line">2639</span><br><span class="line">2640</span><br><span class="line">2641</span><br><span class="line">2642</span><br><span class="line">2643</span><br><span class="line">2644</span><br><span class="line">2645</span><br><span class="line">2646</span><br><span class="line">2647</span><br><span class="line">2648</span><br><span class="line">2649</span><br><span class="line">2650</span><br><span class="line">2651</span><br><span class="line">2652</span><br><span class="line">2653</span><br><span class="line">2654</span><br><span class="line">2655</span><br><span class="line">2656</span><br><span class="line">2657</span><br><span class="line">2658</span><br><span class="line">2659</span><br><span class="line">2660</span><br><span class="line">2661</span><br><span class="line">2662</span><br><span class="line">2663</span><br><span class="line">2664</span><br><span class="line">2665</span><br><span class="line">2666</span><br><span class="line">2667</span><br><span class="line">2668</span><br><span class="line">2669</span><br><span class="line">2670</span><br><span class="line">2671</span><br><span class="line">2672</span><br><span class="line">2673</span><br><span class="line">2674</span><br><span class="line">2675</span><br><span class="line">2676</span><br><span class="line">2677</span><br><span class="line">2678</span><br><span class="line">2679</span><br><span class="line">2680</span><br><span class="line">2681</span><br><span class="line">2682</span><br><span class="line">2683</span><br><span class="line">2684</span><br><span class="line">2685</span><br><span class="line">2686</span><br><span class="line">2687</span><br><span class="line">2688</span><br><span class="line">2689</span><br><span class="line">2690</span><br><span class="line">2691</span><br><span class="line">2692</span><br><span class="line">2693</span><br><span class="line">2694</span><br><span class="line">2695</span><br><span class="line">2696</span><br><span class="line">2697</span><br><span class="line">2698</span><br><span class="line">2699</span><br><span class="line">2700</span><br><span class="line">2701</span><br><span class="line">2702</span><br><span class="line">2703</span><br><span class="line">2704</span><br><span class="line">2705</span><br><span class="line">2706</span><br><span class="line">2707</span><br><span class="line">2708</span><br><span class="line">2709</span><br><span class="line">2710</span><br><span class="line">2711</span><br><span class="line">2712</span><br><span class="line">2713</span><br><span class="line">2714</span><br><span class="line">2715</span><br><span class="line">2716</span><br><span class="line">2717</span><br><span class="line">2718</span><br><span class="line">2719</span><br><span class="line">2720</span><br><span class="line">2721</span><br><span class="line">2722</span><br><span class="line">2723</span><br><span class="line">2724</span><br><span class="line">2725</span><br><span class="line">2726</span><br><span class="line">2727</span><br><span class="line">2728</span><br><span class="line">2729</span><br><span class="line">2730</span><br><span class="line">2731</span><br><span class="line">2732</span><br><span class="line">2733</span><br><span class="line">2734</span><br><span class="line">2735</span><br><span class="line">2736</span><br><span class="line">2737</span><br><span class="line">2738</span><br><span class="line">2739</span><br><span class="line">2740</span><br><span class="line">2741</span><br><span class="line">2742</span><br><span class="line">2743</span><br><span class="line">2744</span><br><span class="line">2745</span><br><span class="line">2746</span><br><span class="line">2747</span><br><span class="line">2748</span><br><span class="line">2749</span><br><span class="line">2750</span><br><span class="line">2751</span><br><span class="line">2752</span><br><span class="line">2753</span><br><span class="line">2754</span><br><span class="line">2755</span><br><span class="line">2756</span><br><span class="line">2757</span><br><span class="line">2758</span><br><span class="line">2759</span><br><span class="line">2760</span><br><span class="line">2761</span><br><span class="line">2762</span><br><span class="line">2763</span><br><span class="line">2764</span><br><span class="line">2765</span><br><span class="line">2766</span><br><span class="line">2767</span><br><span class="line">2768</span><br><span class="line">2769</span><br><span class="line">2770</span><br><span class="line">2771</span><br><span class="line">2772</span><br><span class="line">2773</span><br><span class="line">2774</span><br><span class="line">2775</span><br><span class="line">2776</span><br><span class="line">2777</span><br><span class="line">2778</span><br><span class="line">2779</span><br><span class="line">2780</span><br><span class="line">2781</span><br><span class="line">2782</span><br><span class="line">2783</span><br><span class="line">2784</span><br><span class="line">2785</span><br><span class="line">2786</span><br><span class="line">2787</span><br><span class="line">2788</span><br><span class="line">2789</span><br><span class="line">2790</span><br><span class="line">2791</span><br><span class="line">2792</span><br><span class="line">2793</span><br><span class="line">2794</span><br><span class="line">2795</span><br><span class="line">2796</span><br><span class="line">2797</span><br><span class="line">2798</span><br><span class="line">2799</span><br><span class="line">2800</span><br><span class="line">2801</span><br><span class="line">2802</span><br><span class="line">2803</span><br><span class="line">2804</span><br><span class="line">2805</span><br><span class="line">2806</span><br><span class="line">2807</span><br><span class="line">2808</span><br><span class="line">2809</span><br><span class="line">2810</span><br><span class="line">2811</span><br><span class="line">2812</span><br><span class="line">2813</span><br><span class="line">2814</span><br><span class="line">2815</span><br><span class="line">2816</span><br><span class="line">2817</span><br><span class="line">2818</span><br><span class="line">2819</span><br><span class="line">2820</span><br><span class="line">2821</span><br><span class="line">2822</span><br><span class="line">2823</span><br><span class="line">2824</span><br><span class="line">2825</span><br><span class="line">2826</span><br><span class="line">2827</span><br><span class="line">2828</span><br><span class="line">2829</span><br><span class="line">2830</span><br><span class="line">2831</span><br><span class="line">2832</span><br><span class="line">2833</span><br><span class="line">2834</span><br><span class="line">2835</span><br><span class="line">2836</span><br><span class="line">2837</span><br><span class="line">2838</span><br><span class="line">2839</span><br><span class="line">2840</span><br><span class="line">2841</span><br><span class="line">2842</span><br><span class="line">2843</span><br><span class="line">2844</span><br><span class="line">2845</span><br><span class="line">2846</span><br><span class="line">2847</span><br><span class="line">2848</span><br><span class="line">2849</span><br><span class="line">2850</span><br><span class="line">2851</span><br><span class="line">2852</span><br><span class="line">2853</span><br><span class="line">2854</span><br><span class="line">2855</span><br><span class="line">2856</span><br><span class="line">2857</span><br><span class="line">2858</span><br><span class="line">2859</span><br><span class="line">2860</span><br><span class="line">2861</span><br><span class="line">2862</span><br><span class="line">2863</span><br><span class="line">2864</span><br><span class="line">2865</span><br><span class="line">2866</span><br><span class="line">2867</span><br><span class="line">2868</span><br><span class="line">2869</span><br><span class="line">2870</span><br><span class="line">2871</span><br><span class="line">2872</span><br><span class="line">2873</span><br><span class="line">2874</span><br><span class="line">2875</span><br><span class="line">2876</span><br><span class="line">2877</span><br><span class="line">2878</span><br><span class="line">2879</span><br><span class="line">2880</span><br><span class="line">2881</span><br><span class="line">2882</span><br><span class="line">2883</span><br><span class="line">2884</span><br><span class="line">2885</span><br><span class="line">2886</span><br><span class="line">2887</span><br><span class="line">2888</span><br><span class="line">2889</span><br><span class="line">2890</span><br><span class="line">2891</span><br><span class="line">2892</span><br><span class="line">2893</span><br><span class="line">2894</span><br><span class="line">2895</span><br><span class="line">2896</span><br><span class="line">2897</span><br><span class="line">2898</span><br><span class="line">2899</span><br><span class="line">2900</span><br><span class="line">2901</span><br><span class="line">2902</span><br><span class="line">2903</span><br><span class="line">2904</span><br><span class="line">2905</span><br><span class="line">2906</span><br><span class="line">2907</span><br><span class="line">2908</span><br><span class="line">2909</span><br><span class="line">2910</span><br><span class="line">2911</span><br><span class="line">2912</span><br><span class="line">2913</span><br><span class="line">2914</span><br><span class="line">2915</span><br><span class="line">2916</span><br><span class="line">2917</span><br><span class="line">2918</span><br><span class="line">2919</span><br><span class="line">2920</span><br><span class="line">2921</span><br><span class="line">2922</span><br><span class="line">2923</span><br><span class="line">2924</span><br><span class="line">2925</span><br><span class="line">2926</span><br><span class="line">2927</span><br><span class="line">2928</span><br><span class="line">2929</span><br><span class="line">2930</span><br><span class="line">2931</span><br><span class="line">2932</span><br><span class="line">2933</span><br><span class="line">2934</span><br><span class="line">2935</span><br><span class="line">2936</span><br><span class="line">2937</span><br><span class="line">2938</span><br><span class="line">2939</span><br><span class="line">2940</span><br><span class="line">2941</span><br><span class="line">2942</span><br><span class="line">2943</span><br><span class="line">2944</span><br><span class="line">2945</span><br><span class="line">2946</span><br><span class="line">2947</span><br><span class="line">2948</span><br><span class="line">2949</span><br><span class="line">2950</span><br><span class="line">2951</span><br><span class="line">2952</span><br><span class="line">2953</span><br><span class="line">2954</span><br><span class="line">2955</span><br><span class="line">2956</span><br><span class="line">2957</span><br><span class="line">2958</span><br><span class="line">2959</span><br><span class="line">2960</span><br><span class="line">2961</span><br><span class="line">2962</span><br><span class="line">2963</span><br><span class="line">2964</span><br><span class="line">2965</span><br><span class="line">2966</span><br><span class="line">2967</span><br><span class="line">2968</span><br><span class="line">2969</span><br><span class="line">2970</span><br><span class="line">2971</span><br><span class="line">2972</span><br><span class="line">2973</span><br><span class="line">2974</span><br><span class="line">2975</span><br><span class="line">2976</span><br><span class="line">2977</span><br><span class="line">2978</span><br><span class="line">2979</span><br><span class="line">2980</span><br><span class="line">2981</span><br><span class="line">2982</span><br><span class="line">2983</span><br><span class="line">2984</span><br><span class="line">2985</span><br><span class="line">2986</span><br><span class="line">2987</span><br><span class="line">2988</span><br><span class="line">2989</span><br><span class="line">2990</span><br><span class="line">2991</span><br><span class="line">2992</span><br><span class="line">2993</span><br><span class="line">2994</span><br><span class="line">2995</span><br><span class="line">2996</span><br><span class="line">2997</span><br><span class="line">2998</span><br><span class="line">2999</span><br><span class="line">3000</span><br><span class="line">3001</span><br><span class="line">3002</span><br><span class="line">3003</span><br><span class="line">3004</span><br><span class="line">3005</span><br><span class="line">3006</span><br><span class="line">3007</span><br><span class="line">3008</span><br><span class="line">3009</span><br><span class="line">3010</span><br><span class="line">3011</span><br><span class="line">3012</span><br><span class="line">3013</span><br><span class="line">3014</span><br><span class="line">3015</span><br><span class="line">3016</span><br><span class="line">3017</span><br><span class="line">3018</span><br><span class="line">3019</span><br><span class="line">3020</span><br><span class="line">3021</span><br><span class="line">3022</span><br><span class="line">3023</span><br><span class="line">3024</span><br><span class="line">3025</span><br><span class="line">3026</span><br><span class="line">3027</span><br><span class="line">3028</span><br><span class="line">3029</span><br><span class="line">3030</span><br><span class="line">3031</span><br><span class="line">3032</span><br><span class="line">3033</span><br><span class="line">3034</span><br><span class="line">3035</span><br><span class="line">3036</span><br><span class="line">3037</span><br><span class="line">3038</span><br><span class="line">3039</span><br><span class="line">3040</span><br><span class="line">3041</span><br><span class="line">3042</span><br><span class="line">3043</span><br><span class="line">3044</span><br><span class="line">3045</span><br><span class="line">3046</span><br><span class="line">3047</span><br><span class="line">3048</span><br><span class="line">3049</span><br><span class="line">3050</span><br><span class="line">3051</span><br><span class="line">3052</span><br><span class="line">3053</span><br><span class="line">3054</span><br><span class="line">3055</span><br><span class="line">3056</span><br><span class="line">3057</span><br><span class="line">3058</span><br><span class="line">3059</span><br><span class="line">3060</span><br><span class="line">3061</span><br><span class="line">3062</span><br><span class="line">3063</span><br><span class="line">3064</span><br><span class="line">3065</span><br><span class="line">3066</span><br><span class="line">3067</span><br><span class="line">3068</span><br><span class="line">3069</span><br><span class="line">3070</span><br><span class="line">3071</span><br><span class="line">3072</span><br><span class="line">3073</span><br><span class="line">3074</span><br><span class="line">3075</span><br><span class="line">3076</span><br><span class="line">3077</span><br><span class="line">3078</span><br><span class="line">3079</span><br><span class="line">3080</span><br><span class="line">3081</span><br><span class="line">3082</span><br><span class="line">3083</span><br><span class="line">3084</span><br><span class="line">3085</span><br><span class="line">3086</span><br><span class="line">3087</span><br><span class="line">3088</span><br><span class="line">3089</span><br><span class="line">3090</span><br><span class="line">3091</span><br><span class="line">3092</span><br><span class="line">3093</span><br><span class="line">3094</span><br><span class="line">3095</span><br><span class="line">3096</span><br><span class="line">3097</span><br><span class="line">3098</span><br><span class="line">3099</span><br><span class="line">3100</span><br><span class="line">3101</span><br><span class="line">3102</span><br><span class="line">3103</span><br><span class="line">3104</span><br><span class="line">3105</span><br><span class="line">3106</span><br><span class="line">3107</span><br><span class="line">3108</span><br><span class="line">3109</span><br><span class="line">3110</span><br><span class="line">3111</span><br><span class="line">3112</span><br><span class="line">3113</span><br><span class="line">3114</span><br><span class="line">3115</span><br><span class="line">3116</span><br><span class="line">3117</span><br><span class="line">3118</span><br><span class="line">3119</span><br><span class="line">3120</span><br><span class="line">3121</span><br><span class="line">3122</span><br><span class="line">3123</span><br><span class="line">3124</span><br><span class="line">3125</span><br><span class="line">3126</span><br><span class="line">3127</span><br><span class="line">3128</span><br><span class="line">3129</span><br><span class="line">3130</span><br><span class="line">3131</span><br><span class="line">3132</span><br><span class="line">3133</span><br><span class="line">3134</span><br><span class="line">3135</span><br><span class="line">3136</span><br><span class="line">3137</span><br><span class="line">3138</span><br><span class="line">3139</span><br><span class="line">3140</span><br><span class="line">3141</span><br><span class="line">3142</span><br><span class="line">3143</span><br><span class="line">3144</span><br><span class="line">3145</span><br><span class="line">3146</span><br><span class="line">3147</span><br><span class="line">3148</span><br><span class="line">3149</span><br><span class="line">3150</span><br><span class="line">3151</span><br><span class="line">3152</span><br><span class="line">3153</span><br><span class="line">3154</span><br><span class="line">3155</span><br><span class="line">3156</span><br><span class="line">3157</span><br><span class="line">3158</span><br><span class="line">3159</span><br><span class="line">3160</span><br><span class="line">3161</span><br><span class="line">3162</span><br><span class="line">3163</span><br><span class="line">3164</span><br><span class="line">3165</span><br><span class="line">3166</span><br><span class="line">3167</span><br><span class="line">3168</span><br><span class="line">3169</span><br><span class="line">3170</span><br><span class="line">3171</span><br><span class="line">3172</span><br><span class="line">3173</span><br><span class="line">3174</span><br><span class="line">3175</span><br><span class="line">3176</span><br><span class="line">3177</span><br><span class="line">3178</span><br><span class="line">3179</span><br><span class="line">3180</span><br><span class="line">3181</span><br><span class="line">3182</span><br><span class="line">3183</span><br><span class="line">3184</span><br><span class="line">3185</span><br><span class="line">3186</span><br><span class="line">3187</span><br><span class="line">3188</span><br><span class="line">3189</span><br><span class="line">3190</span><br><span class="line">3191</span><br><span class="line">3192</span><br><span class="line">3193</span><br><span class="line">3194</span><br><span class="line">3195</span><br><span class="line">3196</span><br><span class="line">3197</span><br><span class="line">3198</span><br><span class="line">3199</span><br><span class="line">3200</span><br><span class="line">3201</span><br><span class="line">3202</span><br><span class="line">3203</span><br><span class="line">3204</span><br><span class="line">3205</span><br><span class="line">3206</span><br><span class="line">3207</span><br><span class="line">3208</span><br><span class="line">3209</span><br><span class="line">3210</span><br><span class="line">3211</span><br><span class="line">3212</span><br><span class="line">3213</span><br><span class="line">3214</span><br><span class="line">3215</span><br><span class="line">3216</span><br><span class="line">3217</span><br><span class="line">3218</span><br><span class="line">3219</span><br><span class="line">3220</span><br><span class="line">3221</span><br><span class="line">3222</span><br><span class="line">3223</span><br><span class="line">3224</span><br><span class="line">3225</span><br><span class="line">3226</span><br><span class="line">3227</span><br><span class="line">3228</span><br><span class="line">3229</span><br><span class="line">3230</span><br><span class="line">3231</span><br><span class="line">3232</span><br><span class="line">3233</span><br><span class="line">3234</span><br><span class="line">3235</span><br><span class="line">3236</span><br><span class="line">3237</span><br><span class="line">3238</span><br><span class="line">3239</span><br><span class="line">3240</span><br><span class="line">3241</span><br><span class="line">3242</span><br><span class="line">3243</span><br><span class="line">3244</span><br><span class="line">3245</span><br><span class="line">3246</span><br><span class="line">3247</span><br><span class="line">3248</span><br><span class="line">3249</span><br><span class="line">3250</span><br><span class="line">3251</span><br><span class="line">3252</span><br><span class="line">3253</span><br><span class="line">3254</span><br><span class="line">3255</span><br><span class="line">3256</span><br><span class="line">3257</span><br><span class="line">3258</span><br><span class="line">3259</span><br><span class="line">3260</span><br><span class="line">3261</span><br><span class="line">3262</span><br><span class="line">3263</span><br><span class="line">3264</span><br><span class="line">3265</span><br><span class="line">3266</span><br><span class="line">3267</span><br><span class="line">3268</span><br><span class="line">3269</span><br><span class="line">3270</span><br><span class="line">3271</span><br><span class="line">3272</span><br><span class="line">3273</span><br><span class="line">3274</span><br><span class="line">3275</span><br><span class="line">3276</span><br><span class="line">3277</span><br><span class="line">3278</span><br><span class="line">3279</span><br><span class="line">3280</span><br><span class="line">3281</span><br><span class="line">3282</span><br><span class="line">3283</span><br><span class="line">3284</span><br><span class="line">3285</span><br><span class="line">3286</span><br><span class="line">3287</span><br><span class="line">3288</span><br><span class="line">3289</span><br><span class="line">3290</span><br><span class="line">3291</span><br><span class="line">3292</span><br><span class="line">3293</span><br><span class="line">3294</span><br><span class="line">3295</span><br><span class="line">3296</span><br><span class="line">3297</span><br><span class="line">3298</span><br><span class="line">3299</span><br><span class="line">3300</span><br><span class="line">3301</span><br><span class="line">3302</span><br><span class="line">3303</span><br><span class="line">3304</span><br><span class="line">3305</span><br><span class="line">3306</span><br><span class="line">3307</span><br><span class="line">3308</span><br><span class="line">3309</span><br><span class="line">3310</span><br><span class="line">3311</span><br><span class="line">3312</span><br><span class="line">3313</span><br><span class="line">3314</span><br><span class="line">3315</span><br><span class="line">3316</span><br><span class="line">3317</span><br><span class="line">3318</span><br><span class="line">3319</span><br><span class="line">3320</span><br><span class="line">3321</span><br><span class="line">3322</span><br><span class="line">3323</span><br><span class="line">3324</span><br><span class="line">3325</span><br><span class="line">3326</span><br><span class="line">3327</span><br><span class="line">3328</span><br><span class="line">3329</span><br><span class="line">3330</span><br><span class="line">3331</span><br><span class="line">3332</span><br><span class="line">3333</span><br><span class="line">3334</span><br><span class="line">3335</span><br><span class="line">3336</span><br><span class="line">3337</span><br><span class="line">3338</span><br><span class="line">3339</span><br><span class="line">3340</span><br><span class="line">3341</span><br><span class="line">3342</span><br><span class="line">3343</span><br><span class="line">3344</span><br><span class="line">3345</span><br><span class="line">3346</span><br><span class="line">3347</span><br><span class="line">3348</span><br><span class="line">3349</span><br><span class="line">3350</span><br><span class="line">3351</span><br><span class="line">3352</span><br><span class="line">3353</span><br><span class="line">3354</span><br><span class="line">3355</span><br><span class="line">3356</span><br><span class="line">3357</span><br><span class="line">3358</span><br><span class="line">3359</span><br><span class="line">3360</span><br><span class="line">3361</span><br><span class="line">3362</span><br><span class="line">3363</span><br><span class="line">3364</span><br><span class="line">3365</span><br><span class="line">3366</span><br><span class="line">3367</span><br><span class="line">3368</span><br><span class="line">3369</span><br><span class="line">3370</span><br><span class="line">3371</span><br><span class="line">3372</span><br><span class="line">3373</span><br><span class="line">3374</span><br><span class="line">3375</span><br><span class="line">3376</span><br><span class="line">3377</span><br><span class="line">3378</span><br><span class="line">3379</span><br><span class="line">3380</span><br><span class="line">3381</span><br><span class="line">3382</span><br><span class="line">3383</span><br><span class="line">3384</span><br><span class="line">3385</span><br><span class="line">3386</span><br><span class="line">3387</span><br><span class="line">3388</span><br><span class="line">3389</span><br><span class="line">3390</span><br><span class="line">3391</span><br><span class="line">3392</span><br><span class="line">3393</span><br><span class="line">3394</span><br><span class="line">3395</span><br><span class="line">3396</span><br><span class="line">3397</span><br><span class="line">3398</span><br><span class="line">3399</span><br><span class="line">3400</span><br><span class="line">3401</span><br><span class="line">3402</span><br><span class="line">3403</span><br><span class="line">3404</span><br><span class="line">3405</span><br><span class="line">3406</span><br><span class="line">3407</span><br><span class="line">3408</span><br><span class="line">3409</span><br><span class="line">3410</span><br><span class="line">3411</span><br><span class="line">3412</span><br><span class="line">3413</span><br><span class="line">3414</span><br><span class="line">3415</span><br><span class="line">3416</span><br><span class="line">3417</span><br><span class="line">3418</span><br><span class="line">3419</span><br><span class="line">3420</span><br><span class="line">3421</span><br><span class="line">3422</span><br><span class="line">3423</span><br><span class="line">3424</span><br><span class="line">3425</span><br><span class="line">3426</span><br><span class="line">3427</span><br><span class="line">3428</span><br><span class="line">3429</span><br><span class="line">3430</span><br><span class="line">3431</span><br><span class="line">3432</span><br><span class="line">3433</span><br><span class="line">3434</span><br><span class="line">3435</span><br><span class="line">3436</span><br><span class="line">3437</span><br><span class="line">3438</span><br><span class="line">3439</span><br><span class="line">3440</span><br><span class="line">3441</span><br><span class="line">3442</span><br><span class="line">3443</span><br><span class="line">3444</span><br><span class="line">3445</span><br><span class="line">3446</span><br><span class="line">3447</span><br><span class="line">3448</span><br><span class="line">3449</span><br><span class="line">3450</span><br><span class="line">3451</span><br><span class="line">3452</span><br><span class="line">3453</span><br><span class="line">3454</span><br><span class="line">3455</span><br><span class="line">3456</span><br><span class="line">3457</span><br><span class="line">3458</span><br><span class="line">3459</span><br><span class="line">3460</span><br><span class="line">3461</span><br><span class="line">3462</span><br><span class="line">3463</span><br><span class="line">3464</span><br><span class="line">3465</span><br><span class="line">3466</span><br><span class="line">3467</span><br><span class="line">3468</span><br><span class="line">3469</span><br><span class="line">3470</span><br><span class="line">3471</span><br><span class="line">3472</span><br><span class="line">3473</span><br><span class="line">3474</span><br><span class="line">3475</span><br><span class="line">3476</span><br><span class="line">3477</span><br><span class="line">3478</span><br><span class="line">3479</span><br><span class="line">3480</span><br><span class="line">3481</span><br><span class="line">3482</span><br><span class="line">3483</span><br><span class="line">3484</span><br><span class="line">3485</span><br><span class="line">3486</span><br><span class="line">3487</span><br><span class="line">3488</span><br><span class="line">3489</span><br><span class="line">3490</span><br><span class="line">3491</span><br><span class="line">3492</span><br><span class="line">3493</span><br><span class="line">3494</span><br><span class="line">3495</span><br><span class="line">3496</span><br><span class="line">3497</span><br><span class="line">3498</span><br><span class="line">3499</span><br><span class="line">3500</span><br><span class="line">3501</span><br><span class="line">3502</span><br><span class="line">3503</span><br><span class="line">3504</span><br><span class="line">3505</span><br><span class="line">3506</span><br><span class="line">3507</span><br><span class="line">3508</span><br><span class="line">3509</span><br><span class="line">3510</span><br><span class="line">3511</span><br><span class="line">3512</span><br><span class="line">3513</span><br><span class="line">3514</span><br><span class="line">3515</span><br><span class="line">3516</span><br><span class="line">3517</span><br><span class="line">3518</span><br><span class="line">3519</span><br><span class="line">3520</span><br><span class="line">3521</span><br><span class="line">3522</span><br><span class="line">3523</span><br><span class="line">3524</span><br><span class="line">3525</span><br><span class="line">3526</span><br><span class="line">3527</span><br><span class="line">3528</span><br><span class="line">3529</span><br><span class="line">3530</span><br><span class="line">3531</span><br><span class="line">3532</span><br><span class="line">3533</span><br><span class="line">3534</span><br><span class="line">3535</span><br><span class="line">3536</span><br><span class="line">3537</span><br><span class="line">3538</span><br><span class="line">3539</span><br><span class="line">3540</span><br><span class="line">3541</span><br><span class="line">3542</span><br><span class="line">3543</span><br><span class="line">3544</span><br><span class="line">3545</span><br><span class="line">3546</span><br><span class="line">3547</span><br><span class="line">3548</span><br><span class="line">3549</span><br><span class="line">3550</span><br><span class="line">3551</span><br><span class="line">3552</span><br><span class="line">3553</span><br><span class="line">3554</span><br><span class="line">3555</span><br><span class="line">3556</span><br><span class="line">3557</span><br><span class="line">3558</span><br><span class="line">3559</span><br><span class="line">3560</span><br><span class="line">3561</span><br><span class="line">3562</span><br><span class="line">3563</span><br><span class="line">3564</span><br><span class="line">3565</span><br><span class="line">3566</span><br><span class="line">3567</span><br><span class="line">3568</span><br><span class="line">3569</span><br><span class="line">3570</span><br><span class="line">3571</span><br><span class="line">3572</span><br><span class="line">3573</span><br><span class="line">3574</span><br><span class="line">3575</span><br><span class="line">3576</span><br><span class="line">3577</span><br><span class="line">3578</span><br><span class="line">3579</span><br><span class="line">3580</span><br><span class="line">3581</span><br><span class="line">3582</span><br><span class="line">3583</span><br><span class="line">3584</span><br><span class="line">3585</span><br><span class="line">3586</span><br><span class="line">3587</span><br><span class="line">3588</span><br><span class="line">3589</span><br><span class="line">3590</span><br><span class="line">3591</span><br><span class="line">3592</span><br><span class="line">3593</span><br><span class="line">3594</span><br><span class="line">3595</span><br><span class="line">3596</span><br><span class="line">3597</span><br><span class="line">3598</span><br><span class="line">3599</span><br><span class="line">3600</span><br><span class="line">3601</span><br><span class="line">3602</span><br><span class="line">3603</span><br><span class="line">3604</span><br><span class="line">3605</span><br><span class="line">3606</span><br><span class="line">3607</span><br><span class="line">3608</span><br><span class="line">3609</span><br><span class="line">3610</span><br><span class="line">3611</span><br><span class="line">3612</span><br><span class="line">3613</span><br><span class="line">3614</span><br><span class="line">3615</span><br><span class="line">3616</span><br><span class="line">3617</span><br><span class="line">3618</span><br><span class="line">3619</span><br><span class="line">3620</span><br><span class="line">3621</span><br><span class="line">3622</span><br><span class="line">3623</span><br><span class="line">3624</span><br><span class="line">3625</span><br><span class="line">3626</span><br><span class="line">3627</span><br><span class="line">3628</span><br><span class="line">3629</span><br><span class="line">3630</span><br><span class="line">3631</span><br><span class="line">3632</span><br><span class="line">3633</span><br><span class="line">3634</span><br><span class="line">3635</span><br><span class="line">3636</span><br><span class="line">3637</span><br><span class="line">3638</span><br><span class="line">3639</span><br><span class="line">3640</span><br><span class="line">3641</span><br><span class="line">3642</span><br><span class="line">3643</span><br><span class="line">3644</span><br><span class="line">3645</span><br><span class="line">3646</span><br><span class="line">3647</span><br><span class="line">3648</span><br><span class="line">3649</span><br><span class="line">3650</span><br><span class="line">3651</span><br><span class="line">3652</span><br><span class="line">3653</span><br><span class="line">3654</span><br><span class="line">3655</span><br><span class="line">3656</span><br><span class="line">3657</span><br><span class="line">3658</span><br><span class="line">3659</span><br><span class="line">3660</span><br><span class="line">3661</span><br><span class="line">3662</span><br><span class="line">3663</span><br><span class="line">3664</span><br><span class="line">3665</span><br><span class="line">3666</span><br><span class="line">3667</span><br><span class="line">3668</span><br><span class="line">3669</span><br><span class="line">3670</span><br><span class="line">3671</span><br><span class="line">3672</span><br><span class="line">3673</span><br><span class="line">3674</span><br><span class="line">3675</span><br><span class="line">3676</span><br><span class="line">3677</span><br><span class="line">3678</span><br><span class="line">3679</span><br><span class="line">3680</span><br><span class="line">3681</span><br><span class="line">3682</span><br><span class="line">3683</span><br><span class="line">3684</span><br><span class="line">3685</span><br><span class="line">3686</span><br><span class="line">3687</span><br><span class="line">3688</span><br><span class="line">3689</span><br><span class="line">3690</span><br><span class="line">3691</span><br><span class="line">3692</span><br><span class="line">3693</span><br><span class="line">3694</span><br><span class="line">3695</span><br><span class="line">3696</span><br><span class="line">3697</span><br><span class="line">3698</span><br><span class="line">3699</span><br><span class="line">3700</span><br><span class="line">3701</span><br><span class="line">3702</span><br><span class="line">3703</span><br><span class="line">3704</span><br><span class="line">3705</span><br><span class="line">3706</span><br><span class="line">3707</span><br><span class="line">3708</span><br><span class="line">3709</span><br><span class="line">3710</span><br><span class="line">3711</span><br><span class="line">3712</span><br><span class="line">3713</span><br><span class="line">3714</span><br><span class="line">3715</span><br><span class="line">3716</span><br><span class="line">3717</span><br><span class="line">3718</span><br><span class="line">3719</span><br><span class="line">3720</span><br><span class="line">3721</span><br><span class="line">3722</span><br><span class="line">3723</span><br><span class="line">3724</span><br><span class="line">3725</span><br><span class="line">3726</span><br><span class="line">3727</span><br><span class="line">3728</span><br><span class="line">3729</span><br><span class="line">3730</span><br><span class="line">3731</span><br><span class="line">3732</span><br><span class="line">3733</span><br><span class="line">3734</span><br><span class="line">3735</span><br><span class="line">3736</span><br><span class="line">3737</span><br><span class="line">3738</span><br><span class="line">3739</span><br><span class="line">3740</span><br><span class="line">3741</span><br><span class="line">3742</span><br><span class="line">3743</span><br><span class="line">3744</span><br><span class="line">3745</span><br><span class="line">3746</span><br><span class="line">3747</span><br><span class="line">3748</span><br><span class="line">3749</span><br><span class="line">3750</span><br><span class="line">3751</span><br><span class="line">3752</span><br><span class="line">3753</span><br><span class="line">3754</span><br><span class="line">3755</span><br><span class="line">3756</span><br><span class="line">3757</span><br><span class="line">3758</span><br><span class="line">3759</span><br><span class="line">3760</span><br><span class="line">3761</span><br><span class="line">3762</span><br><span class="line">3763</span><br><span class="line">3764</span><br><span class="line">3765</span><br><span class="line">3766</span><br><span class="line">3767</span><br><span class="line">3768</span><br><span class="line">3769</span><br><span class="line">3770</span><br><span class="line">3771</span><br><span class="line">3772</span><br><span class="line">3773</span><br><span class="line">3774</span><br><span class="line">3775</span><br><span class="line">3776</span><br><span class="line">3777</span><br><span class="line">3778</span><br><span class="line">3779</span><br><span class="line">3780</span><br><span class="line">3781</span><br><span class="line">3782</span><br><span class="line">3783</span><br><span class="line">3784</span><br><span class="line">3785</span><br><span class="line">3786</span><br><span class="line">3787</span><br><span class="line">3788</span><br><span class="line">3789</span><br><span class="line">3790</span><br><span class="line">3791</span><br><span class="line">3792</span><br><span class="line">3793</span><br><span class="line">3794</span><br><span class="line">3795</span><br><span class="line">3796</span><br><span class="line">3797</span><br><span class="line">3798</span><br><span class="line">3799</span><br><span class="line">3800</span><br><span class="line">3801</span><br><span class="line">3802</span><br><span class="line">3803</span><br><span class="line">3804</span><br><span class="line">3805</span><br><span class="line">3806</span><br><span class="line">3807</span><br><span class="line">3808</span><br><span class="line">3809</span><br><span class="line">3810</span><br><span class="line">3811</span><br><span class="line">3812</span><br><span class="line">3813</span><br><span class="line">3814</span><br><span class="line">3815</span><br><span class="line">3816</span><br><span class="line">3817</span><br><span class="line">3818</span><br><span class="line">3819</span><br><span class="line">3820</span><br><span class="line">3821</span><br><span class="line">3822</span><br><span class="line">3823</span><br><span class="line">3824</span><br><span class="line">3825</span><br><span class="line">3826</span><br><span class="line">3827</span><br><span class="line">3828</span><br><span class="line">3829</span><br><span class="line">3830</span><br><span class="line">3831</span><br><span class="line">3832</span><br><span class="line">3833</span><br><span class="line">3834</span><br><span class="line">3835</span><br><span class="line">3836</span><br><span class="line">3837</span><br><span class="line">3838</span><br><span class="line">3839</span><br><span class="line">3840</span><br><span class="line">3841</span><br><span class="line">3842</span><br><span class="line">3843</span><br><span class="line">3844</span><br><span class="line">3845</span><br><span class="line">3846</span><br><span class="line">3847</span><br><span class="line">3848</span><br><span class="line">3849</span><br><span class="line">3850</span><br><span class="line">3851</span><br><span class="line">3852</span><br><span class="line">3853</span><br><span class="line">3854</span><br><span class="line">3855</span><br><span class="line">3856</span><br><span class="line">3857</span><br><span class="line">3858</span><br><span class="line">3859</span><br><span class="line">3860</span><br><span class="line">3861</span><br><span class="line">3862</span><br><span class="line">3863</span><br><span class="line">3864</span><br><span class="line">3865</span><br><span class="line">3866</span><br><span class="line">3867</span><br><span class="line">3868</span><br><span class="line">3869</span><br><span class="line">3870</span><br><span class="line">3871</span><br><span class="line">3872</span><br><span class="line">3873</span><br><span class="line">3874</span><br><span class="line">3875</span><br><span class="line">3876</span><br><span class="line">3877</span><br><span class="line">3878</span><br><span class="line">3879</span><br><span class="line">3880</span><br><span class="line">3881</span><br><span class="line">3882</span><br><span class="line">3883</span><br><span class="line">3884</span><br><span class="line">3885</span><br><span class="line">3886</span><br><span class="line">3887</span><br><span class="line">3888</span><br><span class="line">3889</span><br><span class="line">3890</span><br><span class="line">3891</span><br><span class="line">3892</span><br><span class="line">3893</span><br><span class="line">3894</span><br><span class="line">3895</span><br><span class="line">3896</span><br><span class="line">3897</span><br><span class="line">3898</span><br><span class="line">3899</span><br><span class="line">3900</span><br><span class="line">3901</span><br><span class="line">3902</span><br><span class="line">3903</span><br><span class="line">3904</span><br><span class="line">3905</span><br><span class="line">3906</span><br><span class="line">3907</span><br><span class="line">3908</span><br><span class="line">3909</span><br><span class="line">3910</span><br><span class="line">3911</span><br><span class="line">3912</span><br><span class="line">3913</span><br><span class="line">3914</span><br><span class="line">3915</span><br><span class="line">3916</span><br><span class="line">3917</span><br><span class="line">3918</span><br><span class="line">3919</span><br><span class="line">3920</span><br><span class="line">3921</span><br><span class="line">3922</span><br><span class="line">3923</span><br><span class="line">3924</span><br><span class="line">3925</span><br><span class="line">3926</span><br><span class="line">3927</span><br><span class="line">3928</span><br><span class="line">3929</span><br><span class="line">3930</span><br><span class="line">3931</span><br><span class="line">3932</span><br><span class="line">3933</span><br><span class="line">3934</span><br><span class="line">3935</span><br><span class="line">3936</span><br><span class="line">3937</span><br><span class="line">3938</span><br><span class="line">3939</span><br><span class="line">3940</span><br><span class="line">3941</span><br><span class="line">3942</span><br><span class="line">3943</span><br><span class="line">3944</span><br><span class="line">3945</span><br><span class="line">3946</span><br><span class="line">3947</span><br><span class="line">3948</span><br><span class="line">3949</span><br><span class="line">3950</span><br><span class="line">3951</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Source code recreated from a .class file by IntelliJ IDEA</span></span><br><span class="line"><span class="comment">// (powered by FernFlower decompiler)</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> cif.dataservice.io;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cif.base.Global;</span><br><span class="line"><span class="keyword">import</span> cif.baseutil.EncryptCipher;</span><br><span class="line"><span class="keyword">import</span> cif.dataengine.DataEngine;</span><br><span class="line"><span class="keyword">import</span> cif.dataengine.DataPath;</span><br><span class="line"><span class="keyword">import</span> cif.dataengine.io.CategoryProperties;</span><br><span class="line"><span class="keyword">import</span> cif.dataengine.io.Curve1D;</span><br><span class="line"><span class="keyword">import</span> cif.dataengine.io.Curve2D;</span><br><span class="line"><span class="keyword">import</span> cif.dataengine.io.Curve3D;</span><br><span class="line"><span class="keyword">import</span> cif.dataengine.io.CurveXD;</span><br><span class="line"><span class="keyword">import</span> cif.dataengine.io.LogCategory;</span><br><span class="line"><span class="keyword">import</span> cif.dataengine.io.LogCurve;</span><br><span class="line"><span class="keyword">import</span> cif.dataengine.io.LogCurve1D;</span><br><span class="line"><span class="keyword">import</span> cif.dataengine.io.LogCurve2D;</span><br><span class="line"><span class="keyword">import</span> cif.dataengine.io.LogCurve3D;</span><br><span class="line"><span class="keyword">import</span> cif.dataengine.io.LogDataSource;</span><br><span class="line"><span class="keyword">import</span> cif.dataengine.io.LogDocument;</span><br><span class="line"><span class="keyword">import</span> cif.dataengine.io.LogTable;</span><br><span class="line"><span class="keyword">import</span> cif.dataengine.io.LogWell;</span><br><span class="line"><span class="keyword">import</span> cif.dataengine.io.LogWorkSpace;</span><br><span class="line"><span class="keyword">import</span> cif.dataengine.io.Logging;</span><br><span class="line"><span class="keyword">import</span> cif.dataengine.io.LoggingProperties;</span><br><span class="line"><span class="keyword">import</span> cif.dataengine.io.ReadMode;</span><br><span class="line"><span class="keyword">import</span> cif.dataengine.io.TableFields;</span><br><span class="line"><span class="keyword">import</span> cif.dataengine.io.TableRecords;</span><br><span class="line"><span class="keyword">import</span> cif.dataengine.io.WellProperties;</span><br><span class="line"><span class="keyword">import</span> cif.dataengine.io.WriteMode;</span><br><span class="line"><span class="keyword">import</span> cif.dataservice.CategoryNotifiedInfo;</span><br><span class="line"><span class="keyword">import</span> cif.dataservice.NotificationMessage;</span><br><span class="line"><span class="keyword">import</span> cif.dataservice.NotificationStruct;</span><br><span class="line"><span class="keyword">import</span> cif.dataservice.WellNotifiedInfo;</span><br><span class="line"><span class="keyword">import</span> cif.dataservice.client.MessageCommunicationClient;</span><br><span class="line"><span class="keyword">import</span> cif.resource.ResourceObject;</span><br><span class="line"><span class="keyword">import</span> cif.resource.ResourceUtilities;</span><br><span class="line"><span class="keyword">import</span> cif.resource.table.TableTemplateXmlRw;</span><br><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.ByteArrayInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> org.openide.util.Exceptions;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DataServiceBasicIO</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> ArrayList&lt;NotificationStruct&gt; wellNotificationList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>();</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> ArrayList&lt;NotificationStruct&gt; categoryNotificationList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>();</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">StringBuffer</span> <span class="variable">strBuf</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuffer</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">DataServiceBasicIO</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">exportTextFileData</span><span class="params">(StringBuffer sourceData, File file)</span> &#123;</span><br><span class="line">        <span class="type">FileOutputStream</span> <span class="variable">fos</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            fos = <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(file);</span><br><span class="line">            <span class="type">byte</span>[] bytes = sourceData.toString().getBytes();</span><br><span class="line">            fos.write(bytes);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException var13) &#123;</span><br><span class="line">            Exceptions.printStackTrace(var13);</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (fos != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    fos.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException var12) &#123;</span><br><span class="line">                    Exceptions.printStackTrace(var12);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">spliceFilePath</span><span class="params">(String prePath, String sufPath)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (prePath != <span class="literal">null</span> &amp;&amp; sufPath != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (prePath.endsWith(<span class="string">&quot;\\&quot;</span>) || prePath.endsWith(<span class="string">&quot;/&quot;</span>)) &#123;</span><br><span class="line">                prePath = prePath.substring(<span class="number">0</span>, prePath.length() - <span class="number">1</span>).trim();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> prePath.trim() + File.separator + sufPath.trim();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getCurrentWorkDir</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">workDir</span> <span class="operator">=</span> System.getProperty(<span class="string">&quot;user.dir&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (workDir.endsWith(<span class="string">&quot;\\&quot;</span>) || workDir.endsWith(<span class="string">&quot;/&quot;</span>)) &#123;</span><br><span class="line">            workDir = workDir.substring(<span class="number">0</span>, workDir.length() - <span class="number">1</span>).trim();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> workDir;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getMainProjectPath</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">File</span> <span class="variable">file</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(Global.getTempPath() + File.separator + <span class="string">&quot;maindsinfo.txt&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span> (!file.exists()) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">BufferedReader</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">FileReader</span>(file));</span><br><span class="line">                <span class="type">String</span> <span class="variable">mainDSPath</span> <span class="operator">=</span> in.readLine();</span><br><span class="line">                <span class="keyword">return</span> mainDSPath != <span class="literal">null</span> &amp;&amp; !mainDSPath.trim().isEmpty() ? mainDSPath.trim() : <span class="literal">null</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException var4) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getSysInstallationPath</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> Global.getInstallationPath();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getSysResourcePath</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> Global.getInstallationResourcePath();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">openCifp</span><span class="params">(String cifpPath)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (cifpPath != <span class="literal">null</span> &amp;&amp; !cifpPath.trim().isEmpty()) &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">temp</span> <span class="operator">=</span> cifpPath.trim();</span><br><span class="line">            <span class="type">DataPath</span> <span class="variable">dataPath</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DataPath</span>();</span><br><span class="line">            dataPath.parse(temp);</span><br><span class="line">            <span class="keyword">return</span> dataPath.getPathLevel() &lt; <span class="number">4</span> ? -<span class="number">1</span> : <span class="built_in">this</span>.getCategoryID(dataPath);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">closeCifp</span><span class="params">(<span class="type">int</span> categoryID)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (categoryID &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="type">ReferCategoryStruct</span> <span class="variable">referCategoryStruct</span> <span class="operator">=</span> ReferCategoryContainer.getInstance().getSpecifiedElement(categoryID);</span><br><span class="line">            <span class="keyword">if</span> (referCategoryStruct != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="type">LogCategory</span> <span class="variable">category</span> <span class="operator">=</span> referCategoryStruct.getCategory();</span><br><span class="line">                <span class="keyword">if</span> (category != <span class="literal">null</span>) &#123;</span><br><span class="line">                    category.close();</span><br><span class="line">                    ReferCategoryContainer.getInstance().removeElement(categoryID);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getWellPropertiesItemValue</span><span class="params">(<span class="type">int</span> categoryID, String itemName)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (categoryID &gt;= <span class="number">0</span> &amp;&amp; itemName != <span class="literal">null</span> &amp;&amp; !itemName.trim().isEmpty()) &#123;</span><br><span class="line">            <span class="type">ReferCategoryStruct</span> <span class="variable">referCategoryStruct</span> <span class="operator">=</span> ReferCategoryContainer.getInstance().getSpecifiedElement(categoryID);</span><br><span class="line">            <span class="keyword">if</span> (referCategoryStruct == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">LogCategory</span> <span class="variable">category</span> <span class="operator">=</span> referCategoryStruct.getCategory();</span><br><span class="line">                <span class="keyword">if</span> (category == <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="type">WellProperties</span> <span class="variable">wellProperties</span> <span class="operator">=</span> category.getWellProperties();</span><br><span class="line">                    <span class="type">return</span> <span class="variable">wellProperties</span> <span class="operator">=</span>= <span class="literal">null</span> ? <span class="literal">null</span> : wellProperties.getValue(itemName.trim());</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setWellPropertiesItemValue</span><span class="params">(<span class="type">int</span> categoryID, String itemName, String itemValue)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (categoryID &gt;= <span class="number">0</span> &amp;&amp; itemName != <span class="literal">null</span> &amp;&amp; !itemName.trim().isEmpty()) &#123;</span><br><span class="line">            <span class="type">ReferCategoryStruct</span> <span class="variable">referCategoryStruct</span> <span class="operator">=</span> ReferCategoryContainer.getInstance().getSpecifiedElement(categoryID);</span><br><span class="line">            <span class="keyword">if</span> (referCategoryStruct != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="type">LogCategory</span> <span class="variable">category</span> <span class="operator">=</span> referCategoryStruct.getCategory();</span><br><span class="line">                <span class="keyword">if</span> (category != <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="type">WellProperties</span> <span class="variable">wellProperties</span> <span class="operator">=</span> category.getWellProperties();</span><br><span class="line">                    <span class="keyword">if</span> (wellProperties != <span class="literal">null</span>) &#123;</span><br><span class="line">                        wellProperties.setValue(itemName.trim(), itemValue);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getCategoryDepthUnit</span><span class="params">(<span class="type">int</span> categoryID)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (categoryID &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="type">ReferCategoryStruct</span> <span class="variable">referCategoryStruct</span> <span class="operator">=</span> ReferCategoryContainer.getInstance().getSpecifiedElement(categoryID);</span><br><span class="line">            <span class="keyword">if</span> (referCategoryStruct == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">LogCategory</span> <span class="variable">category</span> <span class="operator">=</span> referCategoryStruct.getCategory();</span><br><span class="line">                <span class="keyword">if</span> (category == <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">switch</span> (category.getCategoryDepthUnit()) &#123;</span><br><span class="line">                        <span class="keyword">case</span> <span class="string">&quot;meter&quot;</span>:</span><br><span class="line">                            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                        <span class="keyword">case</span> <span class="string">&quot;feet&quot;</span>:</span><br><span class="line">                            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">                        <span class="keyword">case</span> <span class="string">&quot;s&quot;</span>:</span><br><span class="line">                            <span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">                        <span class="keyword">default</span>:</span><br><span class="line">                            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">createWell</span><span class="params">(String wellPath)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (wellPath != <span class="literal">null</span> &amp;&amp; !wellPath.trim().isEmpty()) &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">temp</span> <span class="operator">=</span> wellPath.trim();</span><br><span class="line">            <span class="type">int</span> <span class="variable">index</span> <span class="operator">=</span> temp.indexOf(<span class="string">&quot;@@**&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span> (index == -<span class="number">1</span>) &#123;</span><br><span class="line">                <span class="type">DataPath</span> <span class="variable">dataPath</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DataPath</span>();</span><br><span class="line">                dataPath.parse(temp);</span><br><span class="line">                <span class="keyword">return</span> dataPath.getPathLevel() &lt; <span class="number">3</span> ? <span class="number">0</span> : <span class="built_in">this</span>.createLocalWell(dataPath);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">createCifp</span><span class="params">(String cifpPath, <span class="type">int</span> isOverwritten)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (cifpPath != <span class="literal">null</span> &amp;&amp; !cifpPath.trim().isEmpty()) &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">temp</span> <span class="operator">=</span> cifpPath.trim();</span><br><span class="line">            <span class="type">int</span> <span class="variable">index</span> <span class="operator">=</span> temp.indexOf(<span class="string">&quot;@@**&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span> (index == -<span class="number">1</span>) &#123;</span><br><span class="line">                <span class="type">DataPath</span> <span class="variable">dataPath</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DataPath</span>();</span><br><span class="line">                dataPath.parse(temp);</span><br><span class="line">                <span class="keyword">return</span> dataPath.getPathLevel() &lt; <span class="number">4</span> ? <span class="number">0</span> : <span class="built_in">this</span>.createLocalCategory(dataPath, isOverwritten);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">dataPathStr</span> <span class="operator">=</span> temp.substring(<span class="number">0</span>, index);</span><br><span class="line">                <span class="type">String</span> <span class="variable">userPath</span> <span class="operator">=</span> temp.substring(index + <span class="string">&quot;@@**&quot;</span>.length());</span><br><span class="line">                index = userPath.indexOf(<span class="string">&quot;%%%&quot;</span>);</span><br><span class="line">                <span class="keyword">if</span> (index == -<span class="number">1</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="type">DataPath</span> <span class="variable">dataPath</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DataPath</span>();</span><br><span class="line">                    dataPath.parse(dataPathStr);</span><br><span class="line">                    <span class="keyword">if</span> (dataPath.getPathLevel() &lt; <span class="number">4</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="type">EncryptCipher</span> <span class="variable">encryptCipher</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">EncryptCipher</span>();</span><br><span class="line">                        <span class="type">String</span> <span class="variable">userName</span> <span class="operator">=</span> encryptCipher.decrypt(userPath.substring(<span class="number">0</span>, index).trim());</span><br><span class="line">                        <span class="type">String</span> <span class="variable">userPassword</span> <span class="operator">=</span> encryptCipher.decrypt(userPath.substring(index + <span class="string">&quot;%%%&quot;</span>.length()).trim());</span><br><span class="line">                        <span class="keyword">return</span> <span class="built_in">this</span>.createRemoteCategory(dataPath, userName, userPassword);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">createCifp</span><span class="params">(String cifpPath)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (cifpPath != <span class="literal">null</span> &amp;&amp; !cifpPath.trim().isEmpty()) &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">temp</span> <span class="operator">=</span> cifpPath.trim();</span><br><span class="line">            <span class="type">int</span> <span class="variable">index</span> <span class="operator">=</span> temp.indexOf(<span class="string">&quot;@@**&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span> (index == -<span class="number">1</span>) &#123;</span><br><span class="line">                <span class="type">DataPath</span> <span class="variable">dataPath</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DataPath</span>();</span><br><span class="line">                dataPath.parse(temp);</span><br><span class="line">                <span class="keyword">return</span> dataPath.getPathLevel() &lt; <span class="number">4</span> ? <span class="number">0</span> : <span class="built_in">this</span>.createLocalCategory(dataPath, <span class="number">0</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">dataPathStr</span> <span class="operator">=</span> temp.substring(<span class="number">0</span>, index);</span><br><span class="line">                <span class="type">String</span> <span class="variable">userPath</span> <span class="operator">=</span> temp.substring(index + <span class="string">&quot;@@**&quot;</span>.length());</span><br><span class="line">                index = userPath.indexOf(<span class="string">&quot;%%%&quot;</span>);</span><br><span class="line">                <span class="keyword">if</span> (index == -<span class="number">1</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="type">DataPath</span> <span class="variable">dataPath</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DataPath</span>();</span><br><span class="line">                    dataPath.parse(dataPathStr);</span><br><span class="line">                    <span class="keyword">if</span> (dataPath.getPathLevel() &lt; <span class="number">4</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="type">EncryptCipher</span> <span class="variable">encryptCipher</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">EncryptCipher</span>();</span><br><span class="line">                        <span class="type">String</span> <span class="variable">userName</span> <span class="operator">=</span> encryptCipher.decrypt(userPath.substring(<span class="number">0</span>, index).trim());</span><br><span class="line">                        <span class="type">String</span> <span class="variable">userPassword</span> <span class="operator">=</span> encryptCipher.decrypt(userPath.substring(index + <span class="string">&quot;%%%&quot;</span>.length()).trim());</span><br><span class="line">                        <span class="keyword">return</span> <span class="built_in">this</span>.createRemoteCategory(dataPath, userName, userPassword);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">createCurveEx</span><span class="params">(<span class="type">int</span> categoryID, String curveName, <span class="type">int</span> arrayNum, <span class="type">int</span> arraySize, <span class="type">double</span> startDepth, <span class="type">int</span> sampleCount, <span class="type">double</span> depthLevel, <span class="type">int</span> dataType, String curveUnit)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.createCurve(categoryID, curveName, arrayNum, arraySize, startDepth, sampleCount, depthLevel, dataType, curveUnit, <span class="literal">true</span>, <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">createCurve</span><span class="params">(<span class="type">int</span> categoryID, String curveName, <span class="type">int</span> arrayNum, <span class="type">int</span> arraySize, <span class="type">double</span> startDepth, <span class="type">int</span> sampleCount, <span class="type">double</span> depthLevel, <span class="type">int</span> dataType, String curveUnit)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.createCurve(categoryID, curveName, arrayNum, arraySize, startDepth, sampleCount, depthLevel, dataType, curveUnit, <span class="literal">false</span>, <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">createCurve</span><span class="params">(<span class="type">int</span> categoryID, String curveName, <span class="type">int</span> arrayNum, <span class="type">int</span> arraySize, <span class="type">double</span> startDepth, <span class="type">int</span> sampleCount, <span class="type">double</span> depthLevel, <span class="type">int</span> dataType, String curveUnit, <span class="type">int</span> isCleaningData)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.createCurve(categoryID, curveName, arrayNum, arraySize, startDepth, sampleCount, depthLevel, dataType, curveUnit, <span class="literal">false</span>, isCleaningData);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">createBulkCurve3D</span><span class="params">(<span class="type">int</span> categoryID, String curveName, <span class="type">int</span> dataType, String curveUnit, <span class="type">double</span> startDepth, <span class="type">int</span> sampleCount, <span class="type">double</span> depthLevel, <span class="type">double</span> xMin, <span class="type">double</span> xMax, <span class="type">double</span> xLevel, <span class="type">double</span> yMin, <span class="type">double</span> yMax, <span class="type">double</span> yLevel, <span class="type">int</span> xCount, <span class="type">int</span> yCount, String xUnit, String yUnit, <span class="type">int</span> isCleaningData)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (categoryID &gt;= <span class="number">1</span> &amp;&amp; curveName != <span class="literal">null</span> &amp;&amp; !curveName.trim().isEmpty()) &#123;</span><br><span class="line">            <span class="keyword">if</span> (sampleCount &lt; <span class="number">1</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">curve_name</span> <span class="operator">=</span> curveName.trim();</span><br><span class="line">                <span class="type">ReferCategoryStruct</span> <span class="variable">categoryStruct</span> <span class="operator">=</span> ReferCategoryContainer.getInstance().getSpecifiedElement(categoryID);</span><br><span class="line">                <span class="keyword">if</span> (categoryStruct == <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="type">LogCategory</span> <span class="variable">category</span> <span class="operator">=</span> categoryStruct.getCategory();</span><br><span class="line">                    <span class="keyword">if</span> (category.getLogCurve(curve_name) != <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="type">Curve3D</span> <span class="variable">curve3D</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Curve3D</span>();</span><br><span class="line">                        curve3D.setCurveType((<span class="type">byte</span>)<span class="number">3</span>);</span><br><span class="line">                        curve3D.setSubCurveType((<span class="type">byte</span>)<span class="number">1</span>);</span><br><span class="line">                        curve3D.setCurveName(curveName);</span><br><span class="line">                        curve3D.setStartDepth(startDepth);</span><br><span class="line">                        curve3D.setEndDepth(startDepth + depthLevel * (<span class="type">double</span>)(sampleCount - <span class="number">1</span>));</span><br><span class="line">                        curve3D.setDepthLevel(depthLevel);</span><br><span class="line">                        curve3D.setDataType((<span class="type">byte</span>)dataType);</span><br><span class="line">                        curve3D.setDepthUnit(category.getCategoryDepthUnit());</span><br><span class="line">                        curve3D.setCurveUnit(curveUnit);</span><br><span class="line">                        curve3D.setXMin(xMin);</span><br><span class="line">                        curve3D.setXMax(xMax);</span><br><span class="line">                        curve3D.setXLevel(xLevel);</span><br><span class="line">                        curve3D.setXCount(xCount);</span><br><span class="line">                        curve3D.setXUnit(xUnit);</span><br><span class="line">                        curve3D.setYMin(yMin);</span><br><span class="line">                        curve3D.setYMax(yMax);</span><br><span class="line">                        curve3D.setYLevel(yLevel);</span><br><span class="line">                        curve3D.setYCount(yCount);</span><br><span class="line">                        curve3D.setYUnit(yUnit);</span><br><span class="line">                        <span class="type">LogCurve</span> <span class="variable">curve</span> <span class="operator">=</span> category.createCurve(curve3D, <span class="literal">false</span>);</span><br><span class="line">                        <span class="keyword">if</span> (curve == <span class="literal">null</span>) &#123;</span><br><span class="line">                            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            <span class="type">ReferCurveStruct</span> <span class="variable">curveStruct</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ReferCurveStruct</span>(curve_name, curve);</span><br><span class="line">                            categoryStruct.addCurveElement(curveStruct);</span><br><span class="line">                            categoryStruct.isModified = <span class="literal">true</span>;</span><br><span class="line">                            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="title function_">createCurve</span><span class="params">(<span class="type">int</span> categoryID, String curveName, <span class="type">int</span> arrayNum, <span class="type">int</span> arraySize, <span class="type">double</span> startDepth, <span class="type">int</span> sampleCount, <span class="type">double</span> depthLevel, <span class="type">int</span> dataType, String curveUnit, <span class="type">boolean</span> isOverWrite, <span class="type">int</span> isCleaningData)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (categoryID &gt;= <span class="number">1</span> &amp;&amp; curveName != <span class="literal">null</span> &amp;&amp; !curveName.trim().isEmpty()) &#123;</span><br><span class="line">            <span class="keyword">if</span> (arrayNum &gt;= <span class="number">1</span> &amp;&amp; arraySize &gt;= <span class="number">1</span>) &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">curve_name</span> <span class="operator">=</span> curveName.trim();</span><br><span class="line">                <span class="type">ReferCategoryStruct</span> <span class="variable">categoryStruct</span> <span class="operator">=</span> ReferCategoryContainer.getInstance().getSpecifiedElement(categoryID);</span><br><span class="line">                <span class="keyword">if</span> (categoryStruct == <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="type">LogCategory</span> <span class="variable">category</span> <span class="operator">=</span> categoryStruct.getCategory();</span><br><span class="line">                    <span class="keyword">if</span> (category.getLogCurve(curve_name) != <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">if</span> (!isOverWrite) &#123;</span><br><span class="line">                            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">if</span> (category.deleteLogging(curve_name) != <span class="number">0</span>) &#123;</span><br><span class="line">                            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="type">CurveXD</span> <span class="variable">curveXD</span> <span class="operator">=</span> <span class="built_in">this</span>.buildCurveXD(curve_name, arrayNum, arraySize, startDepth, sampleCount, depthLevel, dataType, curveUnit, category.getCategoryDepthUnit());</span><br><span class="line">                    <span class="type">LogCurve</span> <span class="variable">curve</span> <span class="operator">=</span> category.createCurve(curveXD, isCleaningData == <span class="number">1</span>);</span><br><span class="line">                    <span class="keyword">if</span> (curve == <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="type">ReferCurveStruct</span> <span class="variable">curveStruct</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ReferCurveStruct</span>(curve_name, curve);</span><br><span class="line">                        categoryStruct.addCurveElement(curveStruct);</span><br><span class="line">                        categoryStruct.isModified = <span class="literal">true</span>;</span><br><span class="line">                        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">isCategoryExisted</span><span class="params">(String categoryPath)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (categoryPath != <span class="literal">null</span> &amp;&amp; !categoryPath.trim().isEmpty()) &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">temp</span> <span class="operator">=</span> categoryPath.trim();</span><br><span class="line">            <span class="type">DataPath</span> <span class="variable">dataPath</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DataPath</span>();</span><br><span class="line">            dataPath.parse(temp);</span><br><span class="line">            <span class="keyword">return</span> dataPath.getPathLevel() &lt; <span class="number">4</span> ? -<span class="number">1</span> : <span class="number">1</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">isCurveExisted</span><span class="params">(<span class="type">int</span> categoryID, String curveName)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (categoryID &gt;= <span class="number">1</span> &amp;&amp; curveName != <span class="literal">null</span> &amp;&amp; !curveName.trim().isEmpty()) &#123;</span><br><span class="line">            <span class="type">ReferCategoryStruct</span> <span class="variable">categoryStruct</span> <span class="operator">=</span> ReferCategoryContainer.getInstance().getSpecifiedElement(categoryID);</span><br><span class="line">            <span class="keyword">if</span> (categoryStruct != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="type">LogCategory</span> <span class="variable">category</span> <span class="operator">=</span> categoryStruct.getCategory();</span><br><span class="line">                <span class="keyword">if</span> (category != <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="type">Logging</span> <span class="variable">curve</span> <span class="operator">=</span> category.getLogging(curveName.trim());</span><br><span class="line">                    <span class="keyword">if</span> (curve != <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getCurve1DCount</span><span class="params">(<span class="type">int</span> categoryID)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (categoryID &lt; <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="type">ReferCategoryStruct</span> <span class="variable">categoryStruct</span> <span class="operator">=</span> ReferCategoryContainer.getInstance().getSpecifiedElement(categoryID);</span><br><span class="line">            <span class="type">return</span> <span class="variable">categoryStruct</span> <span class="operator">=</span>= <span class="literal">null</span> ? <span class="number">0</span> : categoryStruct.getCategory().getLogCurve1DCount();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getCurve1DName</span><span class="params">(<span class="type">int</span> categoryID, <span class="type">int</span> index)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (categoryID &gt;= <span class="number">1</span> &amp;&amp; index &gt;= <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="type">ReferCategoryStruct</span> <span class="variable">categoryStruct</span> <span class="operator">=</span> ReferCategoryContainer.getInstance().getSpecifiedElement(categoryID);</span><br><span class="line">            <span class="keyword">if</span> (categoryStruct == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> index &gt; categoryStruct.getCategory().getLogCurve1DCount() ? <span class="literal">null</span> : categoryStruct.getCategory().getLogCurve1D(index - <span class="number">1</span>).getName();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getCurve2DName</span><span class="params">(<span class="type">int</span> categoryID, <span class="type">int</span> index)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (categoryID &gt;= <span class="number">1</span> &amp;&amp; index &gt;= <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="type">ReferCategoryStruct</span> <span class="variable">categoryStruct</span> <span class="operator">=</span> ReferCategoryContainer.getInstance().getSpecifiedElement(categoryID);</span><br><span class="line">            <span class="keyword">if</span> (categoryStruct == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> index &gt; categoryStruct.getCategory().getLogCurve2DCount() ? <span class="literal">null</span> : categoryStruct.getCategory().getLogCurve2D(index - <span class="number">1</span>).getName();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getCurve3DName</span><span class="params">(<span class="type">int</span> categoryID, <span class="type">int</span> index)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (categoryID &gt;= <span class="number">1</span> &amp;&amp; index &gt;= <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="type">ReferCategoryStruct</span> <span class="variable">categoryStruct</span> <span class="operator">=</span> ReferCategoryContainer.getInstance().getSpecifiedElement(categoryID);</span><br><span class="line">            <span class="keyword">if</span> (categoryStruct == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> index &gt; categoryStruct.getCategory().getLogCurve3DCount() ? <span class="literal">null</span> : categoryStruct.getCategory().getLogCurve3D(index - <span class="number">1</span>).getName();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getCommonTableName</span><span class="params">(<span class="type">int</span> categoryID, <span class="type">int</span> index)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (categoryID &gt;= <span class="number">1</span> &amp;&amp; index &gt;= <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="type">ReferCategoryStruct</span> <span class="variable">categoryStruct</span> <span class="operator">=</span> ReferCategoryContainer.getInstance().getSpecifiedElement(categoryID);</span><br><span class="line">            <span class="keyword">if</span> (categoryStruct == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> index &gt; categoryStruct.getCategory().getLogCommonTableCount() ? <span class="literal">null</span> : categoryStruct.getCategory().getLogCommonTable(index - <span class="number">1</span>).getName();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getCurve2DCount</span><span class="params">(<span class="type">int</span> categoryID)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (categoryID &lt; <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="type">ReferCategoryStruct</span> <span class="variable">categoryStruct</span> <span class="operator">=</span> ReferCategoryContainer.getInstance().getSpecifiedElement(categoryID);</span><br><span class="line">            <span class="type">return</span> <span class="variable">categoryStruct</span> <span class="operator">=</span>= <span class="literal">null</span> ? <span class="number">0</span> : categoryStruct.getCategory().getLogCurve2DCount();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getCurve3DCount</span><span class="params">(<span class="type">int</span> categoryID)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (categoryID &lt; <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="type">ReferCategoryStruct</span> <span class="variable">categoryStruct</span> <span class="operator">=</span> ReferCategoryContainer.getInstance().getSpecifiedElement(categoryID);</span><br><span class="line">            <span class="type">return</span> <span class="variable">categoryStruct</span> <span class="operator">=</span>= <span class="literal">null</span> ? <span class="number">0</span> : categoryStruct.getCategory().getLogCurve3DCount();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getCommonTableCount</span><span class="params">(<span class="type">int</span> categoryID)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (categoryID &lt; <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="type">ReferCategoryStruct</span> <span class="variable">categoryStruct</span> <span class="operator">=</span> ReferCategoryContainer.getInstance().getSpecifiedElement(categoryID);</span><br><span class="line">            <span class="type">return</span> <span class="variable">categoryStruct</span> <span class="operator">=</span>= <span class="literal">null</span> ? <span class="number">0</span> : categoryStruct.getCategory().getLogCommonTableCount();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">readCurve1D</span><span class="params">(<span class="type">int</span> categoryID, String curveName, <span class="type">double</span> startDepth, <span class="type">int</span> dataCount, <span class="type">float</span>[] buffer)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.readCurve_1D(categoryID, curveName, startDepth, dataCount, buffer);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">readCurve1D</span><span class="params">(<span class="type">int</span> categoryID, String curveName, <span class="type">double</span> startDepth, <span class="type">double</span> depthLevel, <span class="type">int</span> dataCount, <span class="type">float</span>[] buffer)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.readCurve1D(categoryID, curveName, startDepth, depthLevel, dataCount, buffer, (ReadMode)<span class="literal">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">readCurve1D</span><span class="params">(<span class="type">int</span> categoryID, String curveName, <span class="type">double</span> startDepth, <span class="type">double</span> depthLevel, <span class="type">int</span> dataCount, <span class="type">float</span>[] buffer, <span class="type">int</span> interpolationMode)</span> &#123;</span><br><span class="line">        <span class="type">ReadMode</span> <span class="variable">readMode</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ReadMode</span>();</span><br><span class="line">        <span class="keyword">switch</span> (interpolationMode) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                readMode.interpolationMode = <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                readMode.interpolationMode = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                readMode.interpolationMode = <span class="number">3</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.readCurve1D(categoryID, curveName, startDepth, depthLevel, dataCount, buffer, readMode);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="title function_">readCurve1D</span><span class="params">(<span class="type">int</span> categoryID, String curveName, <span class="type">double</span> startDepth, <span class="type">double</span> depthLevel, <span class="type">int</span> dataCount, <span class="type">float</span>[] buffer, ReadMode mode)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (categoryID &gt;= <span class="number">1</span> &amp;&amp; dataCount &gt;= <span class="number">1</span> &amp;&amp; buffer != <span class="literal">null</span> &amp;&amp; curveName != <span class="literal">null</span> &amp;&amp; !curveName.trim().isEmpty()) &#123;</span><br><span class="line">            <span class="type">ReferCategoryStruct</span> <span class="variable">categoryStruct</span> <span class="operator">=</span> ReferCategoryContainer.getInstance().getSpecifiedElement(categoryID);</span><br><span class="line">            <span class="keyword">if</span> (categoryStruct == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">curve_name</span> <span class="operator">=</span> curveName.trim();</span><br><span class="line">                <span class="type">ReferCurveStruct</span> <span class="variable">curveStruct</span> <span class="operator">=</span> categoryStruct.getSpecifiedCurveElement(curve_name);</span><br><span class="line">                <span class="keyword">if</span> (curveStruct != <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> ((LogCurve1D)curveStruct.curve).readData(startDepth, depthLevel, dataCount, buffer, (ReadMode)<span class="literal">null</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="type">LogCategory</span> <span class="variable">category</span> <span class="operator">=</span> categoryStruct.getCategory();</span><br><span class="line">                    <span class="keyword">if</span> (category == <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="type">LogCurve1D</span> <span class="variable">curve</span> <span class="operator">=</span> category.getLogCurve1D(curve_name);</span><br><span class="line">                        <span class="keyword">if</span> (curve == <span class="literal">null</span>) &#123;</span><br><span class="line">                            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            curveStruct = <span class="keyword">new</span> <span class="title class_">ReferCurveStruct</span>(curve_name, curve);</span><br><span class="line">                            categoryStruct.addCurveElement(curveStruct);</span><br><span class="line">                            <span class="keyword">return</span> curve.readData(startDepth, dataCount, buffer, mode);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">readCurve1D</span><span class="params">(<span class="type">int</span> categoryID, String curveName, <span class="type">double</span> startDepth, <span class="type">int</span> upwardCount, <span class="type">int</span> downWardCount, <span class="type">float</span>[] buffer)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.readCurve_1D(categoryID, curveName, startDepth, upwardCount, downWardCount, buffer);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">readCurve1D</span><span class="params">(<span class="type">int</span> categoryID, String curveName, <span class="type">double</span> startDepth, <span class="type">double</span> depthLevel, <span class="type">int</span> upwardCount, <span class="type">int</span> downWardCount, <span class="type">float</span>[] buffer)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (categoryID &gt;= <span class="number">1</span> &amp;&amp; upwardCount &gt;= <span class="number">0</span> &amp;&amp; downWardCount &gt;= <span class="number">0</span> &amp;&amp; buffer != <span class="literal">null</span> &amp;&amp; curveName != <span class="literal">null</span> &amp;&amp; !curveName.trim().isEmpty()) &#123;</span><br><span class="line">            <span class="type">ReferCategoryStruct</span> <span class="variable">categoryStruct</span> <span class="operator">=</span> ReferCategoryContainer.getInstance().getSpecifiedElement(categoryID);</span><br><span class="line">            <span class="keyword">if</span> (categoryStruct == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">curve_name</span> <span class="operator">=</span> curveName.trim();</span><br><span class="line">                <span class="type">ReferCurveStruct</span> <span class="variable">curveStruct</span> <span class="operator">=</span> categoryStruct.getSpecifiedCurveElement(curve_name);</span><br><span class="line">                <span class="keyword">if</span> (curveStruct != <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> ((LogCurve1D)curveStruct.curve).readData(startDepth, depthLevel, upwardCount, downWardCount, buffer, (ReadMode)<span class="literal">null</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="type">LogCategory</span> <span class="variable">category</span> <span class="operator">=</span> categoryStruct.getCategory();</span><br><span class="line">                    <span class="keyword">if</span> (category == <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="type">LogCurve1D</span> <span class="variable">curve</span> <span class="operator">=</span> category.getLogCurve1D(curve_name);</span><br><span class="line">                        <span class="keyword">if</span> (curve == <span class="literal">null</span>) &#123;</span><br><span class="line">                            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            curveStruct = <span class="keyword">new</span> <span class="title class_">ReferCurveStruct</span>(curve_name, curve);</span><br><span class="line">                            categoryStruct.addCurveElement(curveStruct);</span><br><span class="line">                            <span class="keyword">return</span> curve.readData(startDepth, depthLevel, upwardCount, downWardCount, buffer, (ReadMode)<span class="literal">null</span>);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">writeCurve1D</span><span class="params">(<span class="type">int</span> categoryID, String curveName, <span class="type">double</span> startDepth, <span class="type">int</span> dataCount, <span class="type">float</span>[] buffer)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.writeCurve_1D(categoryID, curveName, startDepth, dataCount, buffer);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">readCurve2D</span><span class="params">(<span class="type">int</span> categoryID, String curveName, <span class="type">double</span> startDepth, <span class="type">int</span> dataCount, <span class="type">int</span> arraySize, <span class="type">float</span>[] buffer)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.readCurve_2D(categoryID, curveName, startDepth, dataCount, arraySize, buffer);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">readCurve2D</span><span class="params">(<span class="type">int</span> categoryID, String curveName, <span class="type">double</span> startDepth, <span class="type">double</span> depthLevel, <span class="type">int</span> dataCount, <span class="type">int</span> arraySize, <span class="type">float</span>[] buffer)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.readCurve2D(categoryID, curveName, startDepth, depthLevel, dataCount, arraySize, buffer, (ReadMode)<span class="literal">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">readCurve2D</span><span class="params">(<span class="type">int</span> categoryID, String curveName, <span class="type">double</span> startDepth, <span class="type">double</span> depthLevel, <span class="type">int</span> dataCount, <span class="type">int</span> arraySize, <span class="type">float</span>[] buffer, <span class="type">int</span> interpolationMode)</span> &#123;</span><br><span class="line">        <span class="type">ReadMode</span> <span class="variable">readMode</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ReadMode</span>();</span><br><span class="line">        <span class="keyword">switch</span> (interpolationMode) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                readMode.interpolationMode = <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                readMode.interpolationMode = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                readMode.interpolationMode = <span class="number">3</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.readCurve2D(categoryID, curveName, startDepth, depthLevel, dataCount, arraySize, buffer, readMode);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="title function_">readCurve2D</span><span class="params">(<span class="type">int</span> categoryID, String curveName, <span class="type">double</span> startDepth, <span class="type">double</span> depthLevel, <span class="type">int</span> dataCount, <span class="type">int</span> arraySize, <span class="type">float</span>[] buffer, ReadMode readMode)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (categoryID &gt;= <span class="number">1</span> &amp;&amp; dataCount &gt;= <span class="number">1</span> &amp;&amp; buffer != <span class="literal">null</span> &amp;&amp; curveName != <span class="literal">null</span> &amp;&amp; !curveName.trim().isEmpty()) &#123;</span><br><span class="line">            <span class="type">ReferCategoryStruct</span> <span class="variable">categoryStruct</span> <span class="operator">=</span> ReferCategoryContainer.getInstance().getSpecifiedElement(categoryID);</span><br><span class="line">            <span class="keyword">if</span> (categoryStruct == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">curve_name</span> <span class="operator">=</span> curveName.trim();</span><br><span class="line">                <span class="type">LogCurve2D</span> <span class="variable">curve</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">                <span class="type">ReferCurveStruct</span> <span class="variable">curveStruct</span> <span class="operator">=</span> categoryStruct.getSpecifiedCurveElement(curve_name);</span><br><span class="line">                <span class="type">int</span> retCode;</span><br><span class="line">                <span class="keyword">if</span> (curveStruct != <span class="literal">null</span>) &#123;</span><br><span class="line">                    curve = (LogCurve2D)curveStruct.curve;</span><br><span class="line">                    <span class="type">float</span>[][] data = <span class="keyword">new</span> <span class="title class_">float</span>[dataCount][arraySize];</span><br><span class="line">                    <span class="type">int</span> <span class="variable">retCode</span> <span class="operator">=</span> curve.readData(startDepth, depthLevel, dataCount, data, readMode);</span><br><span class="line">                    <span class="keyword">if</span> (retCode &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                        <span class="keyword">for</span>(retCode = <span class="number">0</span>; retCode &lt; retCode; ++retCode) &#123;</span><br><span class="line">                            System.arraycopy(data[retCode], <span class="number">0</span>, buffer, retCode * arraySize, arraySize);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">return</span> retCode;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="type">LogCategory</span> <span class="variable">category</span> <span class="operator">=</span> categoryStruct.getCategory();</span><br><span class="line">                    <span class="keyword">if</span> (category == <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        curve = category.getLogCurve2D(curve_name);</span><br><span class="line">                        <span class="keyword">if</span> (curve == <span class="literal">null</span>) &#123;</span><br><span class="line">                            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            curveStruct = <span class="keyword">new</span> <span class="title class_">ReferCurveStruct</span>(curve_name, curve);</span><br><span class="line">                            categoryStruct.addCurveElement(curveStruct);</span><br><span class="line">                            <span class="type">float</span>[][] data = <span class="keyword">new</span> <span class="title class_">float</span>[dataCount][arraySize];</span><br><span class="line">                            retCode = curve.readData(startDepth, depthLevel, dataCount, data, readMode);</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; retCode; ++i) &#123;</span><br><span class="line">                                System.arraycopy(data[i], <span class="number">0</span>, buffer, i * arraySize, arraySize);</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">return</span> retCode;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">readCurve2D</span><span class="params">(<span class="type">int</span> categoryID, String curveName, <span class="type">double</span> startDepth, <span class="type">int</span> dataCount, <span class="type">int</span> arraySize, <span class="type">short</span>[] buffer)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.readCurve_2D(categoryID, curveName, startDepth, dataCount, arraySize, buffer);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">readCurve2D</span><span class="params">(<span class="type">int</span> categoryID, String curveName, <span class="type">double</span> startDepth, <span class="type">int</span> upwardCount, <span class="type">int</span> downWardCount, <span class="type">int</span> arraySize, <span class="type">float</span>[] buffer)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.readCurve_2D(categoryID, curveName, startDepth, upwardCount, downWardCount, arraySize, buffer);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">readCurve2D</span><span class="params">(<span class="type">int</span> categoryID, String curveName, <span class="type">double</span> startDepth, <span class="type">double</span> depthLevel, <span class="type">int</span> upwardCount, <span class="type">int</span> downWardCount, <span class="type">int</span> arraySize, <span class="type">float</span>[] buffer)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (categoryID &gt;= <span class="number">1</span> &amp;&amp; upwardCount &gt;= <span class="number">0</span> &amp;&amp; downWardCount &gt;= <span class="number">0</span> &amp;&amp; buffer != <span class="literal">null</span> &amp;&amp; curveName != <span class="literal">null</span> &amp;&amp; !curveName.trim().isEmpty()) &#123;</span><br><span class="line">            <span class="type">ReferCategoryStruct</span> <span class="variable">categoryStruct</span> <span class="operator">=</span> ReferCategoryContainer.getInstance().getSpecifiedElement(categoryID);</span><br><span class="line">            <span class="keyword">if</span> (categoryStruct == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">curve_name</span> <span class="operator">=</span> curveName.trim();</span><br><span class="line">                <span class="type">int</span> <span class="variable">dataCount</span> <span class="operator">=</span> upwardCount + downWardCount + <span class="number">1</span>;</span><br><span class="line">                <span class="type">ReferCurveStruct</span> <span class="variable">curveStruct</span> <span class="operator">=</span> categoryStruct.getSpecifiedCurveElement(curve_name);</span><br><span class="line">                <span class="type">LogCurve2D</span> <span class="variable">curve</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">                <span class="type">int</span> retCode;</span><br><span class="line">                <span class="keyword">if</span> (curveStruct != <span class="literal">null</span>) &#123;</span><br><span class="line">                    curve = (LogCurve2D)curveStruct.curve;</span><br><span class="line">                    <span class="type">float</span>[][] data = <span class="keyword">new</span> <span class="title class_">float</span>[dataCount][arraySize];</span><br><span class="line">                    <span class="type">int</span> <span class="variable">retCode</span> <span class="operator">=</span> curve.readData(startDepth, depthLevel, upwardCount, downWardCount, data, (ReadMode)<span class="literal">null</span>);</span><br><span class="line">                    <span class="keyword">if</span> (retCode &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                        <span class="keyword">for</span>(retCode = <span class="number">0</span>; retCode &lt; retCode; ++retCode) &#123;</span><br><span class="line">                            System.arraycopy(data[retCode], <span class="number">0</span>, buffer, retCode * arraySize, arraySize);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">return</span> retCode;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="type">LogCategory</span> <span class="variable">category</span> <span class="operator">=</span> categoryStruct.getCategory();</span><br><span class="line">                    <span class="keyword">if</span> (category == <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        curve = category.getLogCurve2D(curve_name);</span><br><span class="line">                        <span class="keyword">if</span> (curve == <span class="literal">null</span>) &#123;</span><br><span class="line">                            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            curveStruct = <span class="keyword">new</span> <span class="title class_">ReferCurveStruct</span>(curve_name, curve);</span><br><span class="line">                            categoryStruct.addCurveElement(curveStruct);</span><br><span class="line">                            <span class="type">float</span>[][] data = <span class="keyword">new</span> <span class="title class_">float</span>[dataCount][arraySize];</span><br><span class="line">                            retCode = curve.readData(startDepth, depthLevel, upwardCount, downWardCount, data, (ReadMode)<span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; retCode; ++i) &#123;</span><br><span class="line">                                System.arraycopy(data[i], <span class="number">0</span>, buffer, i * arraySize, arraySize);</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">return</span> retCode;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">writeCurve2D</span><span class="params">(<span class="type">int</span> categoryID, String curveName, <span class="type">double</span> startDepth, <span class="type">int</span> dataCount, <span class="type">int</span> arraySize, <span class="type">float</span>[] buffer)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.writeCurve_2D(categoryID, curveName, startDepth, dataCount, arraySize, buffer);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">reacBulkCurve3D</span><span class="params">(<span class="type">int</span> categoryID, String curveName, <span class="type">double</span> startDepth, <span class="type">int</span> dataCount, <span class="type">int</span> xCount, <span class="type">int</span> yCount, <span class="type">float</span>[] buffer)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (categoryID &gt;= <span class="number">1</span> &amp;&amp; dataCount &gt;= <span class="number">1</span> &amp;&amp; buffer != <span class="literal">null</span> &amp;&amp; curveName != <span class="literal">null</span> &amp;&amp; !curveName.trim().isEmpty()) &#123;</span><br><span class="line">            <span class="type">ReferCategoryStruct</span> <span class="variable">categoryStruct</span> <span class="operator">=</span> ReferCategoryContainer.getInstance().getSpecifiedElement(categoryID);</span><br><span class="line">            <span class="keyword">if</span> (categoryStruct == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">curve_name</span> <span class="operator">=</span> curveName.trim();</span><br><span class="line">                <span class="type">ReferCurveStruct</span> <span class="variable">curveStruct</span> <span class="operator">=</span> categoryStruct.getSpecifiedCurveElement(curve_name);</span><br><span class="line">                <span class="type">LogCurve3D</span> <span class="variable">curve</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">                <span class="type">int</span> retCode;</span><br><span class="line">                <span class="type">int</span> i;</span><br><span class="line">                <span class="type">int</span> offset;</span><br><span class="line">                <span class="keyword">if</span> (curveStruct != <span class="literal">null</span>) &#123;</span><br><span class="line">                    curve = (LogCurve3D)curveStruct.curve;</span><br><span class="line">                    <span class="type">float</span>[][][] data = <span class="keyword">new</span> <span class="title class_">float</span>[dataCount][xCount][yCount];</span><br><span class="line">                    <span class="type">int</span> <span class="variable">retCode</span> <span class="operator">=</span> curve.readDataWithoutBuffer(startDepth, dataCount, data, (ReadMode)<span class="literal">null</span>);</span><br><span class="line">                    <span class="keyword">if</span> (retCode &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                        <span class="type">int</span> <span class="variable">offset</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">for</span>(offset = <span class="number">0</span>; offset &lt; retCode; ++offset) &#123;</span><br><span class="line">                            retCode = offset * yCount * xCount;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; yCount; ++i) &#123;</span><br><span class="line">                                System.arraycopy(data[offset][i], <span class="number">0</span>, buffer, retCode + i * xCount, xCount);</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">return</span> retCode;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="type">LogCategory</span> <span class="variable">category</span> <span class="operator">=</span> categoryStruct.getCategory();</span><br><span class="line">                    <span class="keyword">if</span> (category == <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        curve = category.getLogCurve3D(curve_name);</span><br><span class="line">                        <span class="keyword">if</span> (curve == <span class="literal">null</span>) &#123;</span><br><span class="line">                            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            curveStruct = <span class="keyword">new</span> <span class="title class_">ReferCurveStruct</span>(curve_name, curve);</span><br><span class="line">                            categoryStruct.addCurveElement(curveStruct);</span><br><span class="line">                            <span class="type">float</span>[][][] data = <span class="keyword">new</span> <span class="title class_">float</span>[dataCount][yCount][xCount];</span><br><span class="line">                            retCode = curve.readDataWithoutBuffer(startDepth, dataCount, data, (ReadMode)<span class="literal">null</span>);</span><br><span class="line">                            <span class="keyword">if</span> (retCode &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                                <span class="type">int</span> <span class="variable">offset</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">                                <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; retCode; ++i) &#123;</span><br><span class="line">                                    offset = i * yCount * xCount;</span><br><span class="line"></span><br><span class="line">                                    <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; yCount; ++j) &#123;</span><br><span class="line">                                        System.arraycopy(data[i][j], <span class="number">0</span>, buffer, offset + j * xCount, xCount);</span><br><span class="line">                                    &#125;</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">return</span> retCode;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">reacBulkCurve3D</span><span class="params">(<span class="type">int</span> categoryID, String curveName, <span class="type">double</span> startDepth, <span class="type">int</span> dataCount, <span class="type">int</span> xCount, <span class="type">int</span> yCount, <span class="type">float</span>[][][] buffer)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (categoryID &gt;= <span class="number">1</span> &amp;&amp; dataCount &gt;= <span class="number">1</span> &amp;&amp; buffer != <span class="literal">null</span> &amp;&amp; curveName != <span class="literal">null</span> &amp;&amp; !curveName.trim().isEmpty()) &#123;</span><br><span class="line">            <span class="type">ReferCategoryStruct</span> <span class="variable">categoryStruct</span> <span class="operator">=</span> ReferCategoryContainer.getInstance().getSpecifiedElement(categoryID);</span><br><span class="line">            <span class="keyword">if</span> (categoryStruct == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">curve_name</span> <span class="operator">=</span> curveName.trim();</span><br><span class="line">                <span class="type">ReferCurveStruct</span> <span class="variable">curveStruct</span> <span class="operator">=</span> categoryStruct.getSpecifiedCurveElement(curve_name);</span><br><span class="line">                <span class="type">LogCurve3D</span> <span class="variable">curve</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">                <span class="keyword">if</span> (curveStruct != <span class="literal">null</span>) &#123;</span><br><span class="line">                    curve = (LogCurve3D)curveStruct.curve;</span><br><span class="line">                    <span class="keyword">return</span> curve.readDataWithoutBuffer(startDepth, dataCount, buffer, (ReadMode)<span class="literal">null</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="type">LogCategory</span> <span class="variable">category</span> <span class="operator">=</span> categoryStruct.getCategory();</span><br><span class="line">                    <span class="keyword">if</span> (category == <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        curve = category.getLogCurve3D(curve_name);</span><br><span class="line">                        <span class="keyword">if</span> (curve == <span class="literal">null</span>) &#123;</span><br><span class="line">                            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            curveStruct = <span class="keyword">new</span> <span class="title class_">ReferCurveStruct</span>(curve_name, curve);</span><br><span class="line">                            categoryStruct.addCurveElement(curveStruct);</span><br><span class="line">                            <span class="type">int</span> <span class="variable">retCode</span> <span class="operator">=</span> curve.readDataWithoutBuffer(startDepth, dataCount, buffer, (ReadMode)<span class="literal">null</span>);</span><br><span class="line">                            <span class="keyword">return</span> retCode;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">readCurve3D</span><span class="params">(<span class="type">int</span> categoryID, String curveName, <span class="type">int</span> arrayIndex, <span class="type">double</span> startDepth, <span class="type">int</span> dataCount, <span class="type">int</span> arraySize, <span class="type">float</span>[] buffer)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.readCurve_3D(categoryID, curveName, arrayIndex, startDepth, dataCount, arraySize, buffer);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">readCurve3D</span><span class="params">(<span class="type">int</span> categoryID, String curveName, <span class="type">int</span> arrayIndex, <span class="type">double</span> startDepth, <span class="type">double</span> depthLevel, <span class="type">int</span> dataCount, <span class="type">int</span> arraySize, <span class="type">float</span>[] buffer)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.readCurve_3D(categoryID, curveName, arrayIndex, startDepth, depthLevel, dataCount, arraySize, buffer, (ReadMode)<span class="literal">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">readCurve3D</span><span class="params">(<span class="type">int</span> categoryID, String curveName, <span class="type">int</span> arrayIndex, <span class="type">double</span> startDepth, <span class="type">int</span> upwardCount, <span class="type">int</span> downWardCount, <span class="type">int</span> arraySize, <span class="type">float</span>[] buffer)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.readCurve_3D(categoryID, curveName, arrayIndex, startDepth, upwardCount, downWardCount, arraySize, buffer);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">readCurve3D</span><span class="params">(<span class="type">int</span> categoryID, String curveName, <span class="type">int</span> arrayIndex, <span class="type">double</span> startDepth, <span class="type">double</span> depthLevel, <span class="type">int</span> upwardCount, <span class="type">int</span> downWardCount, <span class="type">int</span> arraySize, <span class="type">float</span>[] buffer)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.readCurve_3D(categoryID, curveName, arrayIndex, startDepth, depthLevel, upwardCount, downWardCount, arraySize, buffer, (ReadMode)<span class="literal">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">writeCurve3D</span><span class="params">(<span class="type">int</span> categoryID, String curveName, <span class="type">int</span> arrayIndex, <span class="type">double</span> startDepth, <span class="type">int</span> dataCount, <span class="type">int</span> arraySize, <span class="type">float</span>[] buffer)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.writeCurve_3D(categoryID, curveName, arrayIndex, startDepth, dataCount, arraySize, buffer);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">writeBulkCurve3D</span><span class="params">(<span class="type">int</span> categoryID, String curveName, <span class="type">double</span> startDepth, <span class="type">int</span> dataCount, <span class="type">int</span> xCount, <span class="type">int</span> yCount, <span class="type">float</span>[] buffer)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (categoryID &gt;= <span class="number">1</span> &amp;&amp; dataCount &gt;= <span class="number">1</span> &amp;&amp; buffer != <span class="literal">null</span> &amp;&amp; curveName != <span class="literal">null</span> &amp;&amp; !curveName.trim().isEmpty()) &#123;</span><br><span class="line">            <span class="type">ReferCategoryStruct</span> <span class="variable">categoryStruct</span> <span class="operator">=</span> ReferCategoryContainer.getInstance().getSpecifiedElement(categoryID);</span><br><span class="line">            <span class="keyword">if</span> (categoryStruct == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">curve_name</span> <span class="operator">=</span> curveName.trim();</span><br><span class="line">                <span class="type">int</span> <span class="variable">retCode</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">                <span class="type">ReferCurveStruct</span> <span class="variable">curveStruct</span> <span class="operator">=</span> categoryStruct.getSpecifiedCurveElement(curve_name);</span><br><span class="line">                <span class="type">LogCurve3D</span> <span class="variable">curve</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">                <span class="type">int</span> i;</span><br><span class="line">                <span class="type">int</span> retCode;</span><br><span class="line">                <span class="type">int</span> offset;</span><br><span class="line">                <span class="keyword">if</span> (curveStruct != <span class="literal">null</span>) &#123;</span><br><span class="line">                    curve = (LogCurve3D)curveStruct.curve;</span><br><span class="line">                    <span class="type">float</span>[][][] data = <span class="keyword">new</span> <span class="title class_">float</span>[dataCount][yCount][xCount];</span><br><span class="line">                    <span class="type">int</span> <span class="variable">offset</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">for</span>(offset = <span class="number">0</span>; offset &lt; dataCount; ++offset) &#123;</span><br><span class="line">                        <span class="type">int</span> <span class="variable">offset</span> <span class="operator">=</span> offset * yCount * xCount;</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; yCount; ++i) &#123;</span><br><span class="line">                            System.arraycopy(buffer, offset + i * xCount, data[offset][i], <span class="number">0</span>, xCount);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    retCode = curve.writeDataWithoutBuffer(startDepth, dataCount, data, (WriteMode)<span class="literal">null</span>);</span><br><span class="line">                    <span class="keyword">if</span> (retCode &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                        categoryStruct.isModified = <span class="literal">true</span>;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">return</span> retCode;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="type">LogCategory</span> <span class="variable">category</span> <span class="operator">=</span> categoryStruct.getCategory();</span><br><span class="line">                    <span class="keyword">if</span> (category == <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        curve = category.getLogCurve3D(curve_name);</span><br><span class="line">                        <span class="keyword">if</span> (curve == <span class="literal">null</span>) &#123;</span><br><span class="line">                            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            curveStruct = <span class="keyword">new</span> <span class="title class_">ReferCurveStruct</span>(curve_name, curve);</span><br><span class="line">                            categoryStruct.addCurveElement(curveStruct);</span><br><span class="line">                            <span class="type">float</span>[][][] data = <span class="keyword">new</span> <span class="title class_">float</span>[dataCount][yCount][xCount];</span><br><span class="line">                            <span class="type">int</span> <span class="variable">offset</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; dataCount; ++i) &#123;</span><br><span class="line">                                offset = i * yCount * xCount;</span><br><span class="line"></span><br><span class="line">                                <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; yCount; ++j) &#123;</span><br><span class="line">                                    System.arraycopy(buffer, offset + j * xCount, data[i][j], <span class="number">0</span>, xCount);</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            retCode = curve.writeDataWithoutBuffer(startDepth, dataCount, data, (WriteMode)<span class="literal">null</span>);</span><br><span class="line">                            <span class="keyword">if</span> (retCode == <span class="number">0</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                                categoryStruct.isModified = <span class="literal">true</span>;</span><br><span class="line">                                <span class="keyword">return</span> retCode;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">writeBulkCurve3D</span><span class="params">(<span class="type">int</span> categoryID, String curveName, <span class="type">double</span> startDepth, <span class="type">int</span> dataCount, <span class="type">int</span> xCount, <span class="type">int</span> yCount, <span class="type">float</span>[][][] buffer)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (categoryID &gt;= <span class="number">1</span> &amp;&amp; dataCount &gt;= <span class="number">1</span> &amp;&amp; buffer != <span class="literal">null</span> &amp;&amp; curveName != <span class="literal">null</span> &amp;&amp; !curveName.trim().isEmpty()) &#123;</span><br><span class="line">            <span class="type">ReferCategoryStruct</span> <span class="variable">categoryStruct</span> <span class="operator">=</span> ReferCategoryContainer.getInstance().getSpecifiedElement(categoryID);</span><br><span class="line">            <span class="keyword">if</span> (categoryStruct == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">curve_name</span> <span class="operator">=</span> curveName.trim();</span><br><span class="line">                <span class="type">int</span> <span class="variable">retCode</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">                <span class="type">ReferCurveStruct</span> <span class="variable">curveStruct</span> <span class="operator">=</span> categoryStruct.getSpecifiedCurveElement(curve_name);</span><br><span class="line">                <span class="type">LogCurve3D</span> <span class="variable">curve</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">                <span class="type">int</span> retCode;</span><br><span class="line">                <span class="keyword">if</span> (curveStruct != <span class="literal">null</span>) &#123;</span><br><span class="line">                    curve = (LogCurve3D)curveStruct.curve;</span><br><span class="line">                    retCode = curve.writeDataWithoutBuffer(startDepth, dataCount, buffer, (WriteMode)<span class="literal">null</span>);</span><br><span class="line">                    <span class="keyword">if</span> (retCode &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                        categoryStruct.isModified = <span class="literal">true</span>;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">return</span> retCode;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="type">LogCategory</span> <span class="variable">category</span> <span class="operator">=</span> categoryStruct.getCategory();</span><br><span class="line">                    <span class="keyword">if</span> (category == <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        curve = category.getLogCurve3D(curve_name);</span><br><span class="line">                        <span class="keyword">if</span> (curve == <span class="literal">null</span>) &#123;</span><br><span class="line">                            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            curveStruct = <span class="keyword">new</span> <span class="title class_">ReferCurveStruct</span>(curve_name, curve);</span><br><span class="line">                            categoryStruct.addCurveElement(curveStruct);</span><br><span class="line">                            retCode = curve.writeDataWithoutBuffer(startDepth, dataCount, buffer, (WriteMode)<span class="literal">null</span>);</span><br><span class="line">                            <span class="keyword">if</span> (retCode == <span class="number">0</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                                categoryStruct.isModified = <span class="literal">true</span>;</span><br><span class="line">                                <span class="keyword">return</span> retCode;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getCurveStartDepth</span><span class="params">(<span class="type">int</span> categoryID, String curveName)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (categoryID &gt;= <span class="number">1</span> &amp;&amp; curveName != <span class="literal">null</span> &amp;&amp; !curveName.trim().isEmpty()) &#123;</span><br><span class="line">            <span class="type">ReferCategoryStruct</span> <span class="variable">categoryStruct</span> <span class="operator">=</span> ReferCategoryContainer.getInstance().getSpecifiedElement(categoryID);</span><br><span class="line">            <span class="keyword">if</span> (categoryStruct == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> -<span class="number">99999.0</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">curve_name</span> <span class="operator">=</span> curveName.trim();</span><br><span class="line">                <span class="type">ReferCurveStruct</span> <span class="variable">curveStruct</span> <span class="operator">=</span> categoryStruct.getSpecifiedCurveElement(curve_name);</span><br><span class="line">                <span class="keyword">if</span> (curveStruct != <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> curveStruct.curve.getStartDepth();</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="type">LogCategory</span> <span class="variable">category</span> <span class="operator">=</span> categoryStruct.getCategory();</span><br><span class="line">                    <span class="keyword">if</span> (category == <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> -<span class="number">99999.0</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="type">LogCurve</span> <span class="variable">curve</span> <span class="operator">=</span> category.getLogCurve(curve_name);</span><br><span class="line">                        <span class="keyword">if</span> (curve == <span class="literal">null</span>) &#123;</span><br><span class="line">                            <span class="keyword">return</span> -<span class="number">99999.0</span>;</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            curveStruct = <span class="keyword">new</span> <span class="title class_">ReferCurveStruct</span>(curve_name, curve);</span><br><span class="line">                            categoryStruct.addCurveElement(curveStruct);</span><br><span class="line">                            <span class="keyword">return</span> curve.getStartDepth();</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">99999.0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getCurveEndDepth</span><span class="params">(<span class="type">int</span> categoryID, String curveName)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (categoryID &gt;= <span class="number">1</span> &amp;&amp; curveName != <span class="literal">null</span> &amp;&amp; !curveName.trim().isEmpty()) &#123;</span><br><span class="line">            <span class="type">ReferCategoryStruct</span> <span class="variable">categoryStruct</span> <span class="operator">=</span> ReferCategoryContainer.getInstance().getSpecifiedElement(categoryID);</span><br><span class="line">            <span class="keyword">if</span> (categoryStruct == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> -<span class="number">99999.0</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">curve_name</span> <span class="operator">=</span> curveName.trim();</span><br><span class="line">                <span class="type">ReferCurveStruct</span> <span class="variable">curveStruct</span> <span class="operator">=</span> categoryStruct.getSpecifiedCurveElement(curve_name);</span><br><span class="line">                <span class="keyword">if</span> (curveStruct != <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> curveStruct.curve.getEndDepth();</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="type">LogCategory</span> <span class="variable">category</span> <span class="operator">=</span> categoryStruct.getCategory();</span><br><span class="line">                    <span class="keyword">if</span> (category == <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> -<span class="number">99999.0</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="type">LogCurve</span> <span class="variable">curve</span> <span class="operator">=</span> category.getLogCurve(curve_name);</span><br><span class="line">                        <span class="keyword">if</span> (curve == <span class="literal">null</span>) &#123;</span><br><span class="line">                            <span class="keyword">return</span> -<span class="number">99999.0</span>;</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            curveStruct = <span class="keyword">new</span> <span class="title class_">ReferCurveStruct</span>(curve_name, curve);</span><br><span class="line">                            categoryStruct.addCurveElement(curveStruct);</span><br><span class="line">                            <span class="keyword">return</span> curve.getEndDepth();</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">99999.0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getCurveDepthLevel</span><span class="params">(<span class="type">int</span> categoryID, String curveName)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (categoryID &gt;= <span class="number">1</span> &amp;&amp; curveName != <span class="literal">null</span> &amp;&amp; !curveName.trim().isEmpty()) &#123;</span><br><span class="line">            <span class="type">ReferCategoryStruct</span> <span class="variable">categoryStruct</span> <span class="operator">=</span> ReferCategoryContainer.getInstance().getSpecifiedElement(categoryID);</span><br><span class="line">            <span class="keyword">if</span> (categoryStruct == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> -<span class="number">99999.0</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">curve_name</span> <span class="operator">=</span> curveName.trim();</span><br><span class="line">                <span class="type">ReferCurveStruct</span> <span class="variable">curveStruct</span> <span class="operator">=</span> categoryStruct.getSpecifiedCurveElement(curve_name);</span><br><span class="line">                <span class="keyword">if</span> (curveStruct != <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> curveStruct.curve.getDepthLevel();</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="type">LogCategory</span> <span class="variable">category</span> <span class="operator">=</span> categoryStruct.getCategory();</span><br><span class="line">                    <span class="keyword">if</span> (category == <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> -<span class="number">99999.0</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="type">LogCurve</span> <span class="variable">curve</span> <span class="operator">=</span> category.getLogCurve(curve_name);</span><br><span class="line">                        <span class="keyword">if</span> (curve == <span class="literal">null</span>) &#123;</span><br><span class="line">                            <span class="keyword">return</span> -<span class="number">99999.0</span>;</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            curveStruct = <span class="keyword">new</span> <span class="title class_">ReferCurveStruct</span>(curve_name, curve);</span><br><span class="line">                            categoryStruct.addCurveElement(curveStruct);</span><br><span class="line">                            <span class="keyword">return</span> curve.getDepthLevel();</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">99999.0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getCurveXMin</span><span class="params">(<span class="type">int</span> categoryID, String curveName)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (categoryID &gt;= <span class="number">1</span> &amp;&amp; curveName != <span class="literal">null</span> &amp;&amp; !curveName.trim().isEmpty()) &#123;</span><br><span class="line">            <span class="type">ReferCategoryStruct</span> <span class="variable">categoryStruct</span> <span class="operator">=</span> ReferCategoryContainer.getInstance().getSpecifiedElement(categoryID);</span><br><span class="line">            <span class="keyword">if</span> (categoryStruct == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> -<span class="number">99999.0</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">curve_name</span> <span class="operator">=</span> curveName.trim();</span><br><span class="line">                <span class="type">ReferCurveStruct</span> <span class="variable">curveStruct</span> <span class="operator">=</span> categoryStruct.getSpecifiedCurveElement(curve_name);</span><br><span class="line">                <span class="keyword">if</span> (curveStruct != <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> ((LogCurve3D)curveStruct.curve).getXMin();</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="type">LogCategory</span> <span class="variable">category</span> <span class="operator">=</span> categoryStruct.getCategory();</span><br><span class="line">                    <span class="keyword">if</span> (category == <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> -<span class="number">99999.0</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="type">LogCurve3D</span> <span class="variable">curve</span> <span class="operator">=</span> category.getLogCurve3D(curve_name);</span><br><span class="line">                        <span class="keyword">if</span> (curve == <span class="literal">null</span>) &#123;</span><br><span class="line">                            <span class="keyword">return</span> -<span class="number">99999.0</span>;</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            curveStruct = <span class="keyword">new</span> <span class="title class_">ReferCurveStruct</span>(curve_name, curve);</span><br><span class="line">                            categoryStruct.addCurveElement(curveStruct);</span><br><span class="line">                            <span class="keyword">return</span> curve.getXMin();</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">99999.0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getCurveXMax</span><span class="params">(<span class="type">int</span> categoryID, String curveName)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (categoryID &gt;= <span class="number">1</span> &amp;&amp; curveName != <span class="literal">null</span> &amp;&amp; !curveName.trim().isEmpty()) &#123;</span><br><span class="line">            <span class="type">ReferCategoryStruct</span> <span class="variable">categoryStruct</span> <span class="operator">=</span> ReferCategoryContainer.getInstance().getSpecifiedElement(categoryID);</span><br><span class="line">            <span class="keyword">if</span> (categoryStruct == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> -<span class="number">99999.0</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">curve_name</span> <span class="operator">=</span> curveName.trim();</span><br><span class="line">                <span class="type">ReferCurveStruct</span> <span class="variable">curveStruct</span> <span class="operator">=</span> categoryStruct.getSpecifiedCurveElement(curve_name);</span><br><span class="line">                <span class="keyword">if</span> (curveStruct != <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> ((LogCurve3D)curveStruct.curve).getXMax();</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="type">LogCategory</span> <span class="variable">category</span> <span class="operator">=</span> categoryStruct.getCategory();</span><br><span class="line">                    <span class="keyword">if</span> (category == <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> -<span class="number">99999.0</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="type">LogCurve3D</span> <span class="variable">curve</span> <span class="operator">=</span> category.getLogCurve3D(curve_name);</span><br><span class="line">                        <span class="keyword">if</span> (curve == <span class="literal">null</span>) &#123;</span><br><span class="line">                            <span class="keyword">return</span> -<span class="number">99999.0</span>;</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            curveStruct = <span class="keyword">new</span> <span class="title class_">ReferCurveStruct</span>(curve_name, curve);</span><br><span class="line">                            categoryStruct.addCurveElement(curveStruct);</span><br><span class="line">                            <span class="keyword">return</span> curve.getXMax();</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">99999.0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getCurveXLevel</span><span class="params">(<span class="type">int</span> categoryID, String curveName)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (categoryID &gt;= <span class="number">1</span> &amp;&amp; curveName != <span class="literal">null</span> &amp;&amp; !curveName.trim().isEmpty()) &#123;</span><br><span class="line">            <span class="type">ReferCategoryStruct</span> <span class="variable">categoryStruct</span> <span class="operator">=</span> ReferCategoryContainer.getInstance().getSpecifiedElement(categoryID);</span><br><span class="line">            <span class="keyword">if</span> (categoryStruct == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> -<span class="number">99999.0</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">curve_name</span> <span class="operator">=</span> curveName.trim();</span><br><span class="line">                <span class="type">ReferCurveStruct</span> <span class="variable">curveStruct</span> <span class="operator">=</span> categoryStruct.getSpecifiedCurveElement(curve_name);</span><br><span class="line">                <span class="keyword">if</span> (curveStruct != <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> ((LogCurve3D)curveStruct.curve).getXLevel();</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="type">LogCategory</span> <span class="variable">category</span> <span class="operator">=</span> categoryStruct.getCategory();</span><br><span class="line">                    <span class="keyword">if</span> (category == <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> -<span class="number">99999.0</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="type">LogCurve3D</span> <span class="variable">curve</span> <span class="operator">=</span> category.getLogCurve3D(curve_name);</span><br><span class="line">                        <span class="keyword">if</span> (curve == <span class="literal">null</span>) &#123;</span><br><span class="line">                            <span class="keyword">return</span> -<span class="number">99999.0</span>;</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            curveStruct = <span class="keyword">new</span> <span class="title class_">ReferCurveStruct</span>(curve_name, curve);</span><br><span class="line">                            categoryStruct.addCurveElement(curveStruct);</span><br><span class="line">                            <span class="keyword">return</span> curve.getXLevel();</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">99999.0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getCurveXCount</span><span class="params">(<span class="type">int</span> categoryID, String curveName)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (categoryID &gt;= <span class="number">1</span> &amp;&amp; curveName != <span class="literal">null</span> &amp;&amp; !curveName.trim().isEmpty()) &#123;</span><br><span class="line">            <span class="type">ReferCategoryStruct</span> <span class="variable">categoryStruct</span> <span class="operator">=</span> ReferCategoryContainer.getInstance().getSpecifiedElement(categoryID);</span><br><span class="line">            <span class="keyword">if</span> (categoryStruct == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> -<span class="number">99999</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">curve_name</span> <span class="operator">=</span> curveName.trim();</span><br><span class="line">                <span class="type">ReferCurveStruct</span> <span class="variable">curveStruct</span> <span class="operator">=</span> categoryStruct.getSpecifiedCurveElement(curve_name);</span><br><span class="line">                <span class="keyword">if</span> (curveStruct != <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> ((LogCurve3D)curveStruct.curve).getXCount();</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="type">LogCategory</span> <span class="variable">category</span> <span class="operator">=</span> categoryStruct.getCategory();</span><br><span class="line">                    <span class="keyword">if</span> (category == <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> -<span class="number">99999</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="type">LogCurve3D</span> <span class="variable">curve</span> <span class="operator">=</span> category.getLogCurve3D(curve_name);</span><br><span class="line">                        <span class="keyword">if</span> (curve == <span class="literal">null</span>) &#123;</span><br><span class="line">                            <span class="keyword">return</span> -<span class="number">99999</span>;</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            curveStruct = <span class="keyword">new</span> <span class="title class_">ReferCurveStruct</span>(curve_name, curve);</span><br><span class="line">                            categoryStruct.addCurveElement(curveStruct);</span><br><span class="line">                            <span class="keyword">return</span> curve.getXCount();</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">99999</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getCurveXUnit</span><span class="params">(<span class="type">int</span> categoryID, String curveName)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (categoryID &gt;= <span class="number">1</span> &amp;&amp; curveName != <span class="literal">null</span> &amp;&amp; !curveName.trim().isEmpty()) &#123;</span><br><span class="line">            <span class="type">ReferCategoryStruct</span> <span class="variable">categoryStruct</span> <span class="operator">=</span> ReferCategoryContainer.getInstance().getSpecifiedElement(categoryID);</span><br><span class="line">            <span class="keyword">if</span> (categoryStruct == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">curve_name</span> <span class="operator">=</span> curveName.trim();</span><br><span class="line">                <span class="type">ReferCurveStruct</span> <span class="variable">curveStruct</span> <span class="operator">=</span> categoryStruct.getSpecifiedCurveElement(curve_name);</span><br><span class="line">                <span class="keyword">if</span> (curveStruct != <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> ((LogCurve3D)curveStruct.curve).getXUnit();</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="type">LogCategory</span> <span class="variable">category</span> <span class="operator">=</span> categoryStruct.getCategory();</span><br><span class="line">                    <span class="keyword">if</span> (category == <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="type">LogCurve3D</span> <span class="variable">curve</span> <span class="operator">=</span> category.getLogCurve3D(curve_name);</span><br><span class="line">                        <span class="keyword">if</span> (curve == <span class="literal">null</span>) &#123;</span><br><span class="line">                            <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            curveStruct = <span class="keyword">new</span> <span class="title class_">ReferCurveStruct</span>(curve_name, curve);</span><br><span class="line">                            categoryStruct.addCurveElement(curveStruct);</span><br><span class="line">                            <span class="keyword">return</span> curve.getXUnit();</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getCurveYMin</span><span class="params">(<span class="type">int</span> categoryID, String curveName)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (categoryID &gt;= <span class="number">1</span> &amp;&amp; curveName != <span class="literal">null</span> &amp;&amp; !curveName.trim().isEmpty()) &#123;</span><br><span class="line">            <span class="type">ReferCategoryStruct</span> <span class="variable">categoryStruct</span> <span class="operator">=</span> ReferCategoryContainer.getInstance().getSpecifiedElement(categoryID);</span><br><span class="line">            <span class="keyword">if</span> (categoryStruct == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> -<span class="number">99999.0</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">curve_name</span> <span class="operator">=</span> curveName.trim();</span><br><span class="line">                <span class="type">ReferCurveStruct</span> <span class="variable">curveStruct</span> <span class="operator">=</span> categoryStruct.getSpecifiedCurveElement(curve_name);</span><br><span class="line">                <span class="keyword">if</span> (curveStruct != <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> ((LogCurve3D)curveStruct.curve).getYMin();</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="type">LogCategory</span> <span class="variable">category</span> <span class="operator">=</span> categoryStruct.getCategory();</span><br><span class="line">                    <span class="keyword">if</span> (category == <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> -<span class="number">99999.0</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="type">LogCurve3D</span> <span class="variable">curve</span> <span class="operator">=</span> category.getLogCurve3D(curve_name);</span><br><span class="line">                        <span class="keyword">if</span> (curve == <span class="literal">null</span>) &#123;</span><br><span class="line">                            <span class="keyword">return</span> -<span class="number">99999.0</span>;</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            curveStruct = <span class="keyword">new</span> <span class="title class_">ReferCurveStruct</span>(curve_name, curve);</span><br><span class="line">                            categoryStruct.addCurveElement(curveStruct);</span><br><span class="line">                            <span class="keyword">return</span> curve.getYMin();</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">99999.0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getCurveYMax</span><span class="params">(<span class="type">int</span> categoryID, String curveName)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (categoryID &gt;= <span class="number">1</span> &amp;&amp; curveName != <span class="literal">null</span> &amp;&amp; !curveName.trim().isEmpty()) &#123;</span><br><span class="line">            <span class="type">ReferCategoryStruct</span> <span class="variable">categoryStruct</span> <span class="operator">=</span> ReferCategoryContainer.getInstance().getSpecifiedElement(categoryID);</span><br><span class="line">            <span class="keyword">if</span> (categoryStruct == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> -<span class="number">99999.0</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">curve_name</span> <span class="operator">=</span> curveName.trim();</span><br><span class="line">                <span class="type">ReferCurveStruct</span> <span class="variable">curveStruct</span> <span class="operator">=</span> categoryStruct.getSpecifiedCurveElement(curve_name);</span><br><span class="line">                <span class="keyword">if</span> (curveStruct != <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> ((LogCurve3D)curveStruct.curve).getYMax();</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="type">LogCategory</span> <span class="variable">category</span> <span class="operator">=</span> categoryStruct.getCategory();</span><br><span class="line">                    <span class="keyword">if</span> (category == <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> -<span class="number">99999.0</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="type">LogCurve3D</span> <span class="variable">curve</span> <span class="operator">=</span> category.getLogCurve3D(curve_name);</span><br><span class="line">                        <span class="keyword">if</span> (curve == <span class="literal">null</span>) &#123;</span><br><span class="line">                            <span class="keyword">return</span> -<span class="number">99999.0</span>;</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            curveStruct = <span class="keyword">new</span> <span class="title class_">ReferCurveStruct</span>(curve_name, curve);</span><br><span class="line">                            categoryStruct.addCurveElement(curveStruct);</span><br><span class="line">                            <span class="keyword">return</span> curve.getYMax();</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">99999.0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getCurveYLevel</span><span class="params">(<span class="type">int</span> categoryID, String curveName)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (categoryID &gt;= <span class="number">1</span> &amp;&amp; curveName != <span class="literal">null</span> &amp;&amp; !curveName.trim().isEmpty()) &#123;</span><br><span class="line">            <span class="type">ReferCategoryStruct</span> <span class="variable">categoryStruct</span> <span class="operator">=</span> ReferCategoryContainer.getInstance().getSpecifiedElement(categoryID);</span><br><span class="line">            <span class="keyword">if</span> (categoryStruct == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> -<span class="number">99999.0</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">curve_name</span> <span class="operator">=</span> curveName.trim();</span><br><span class="line">                <span class="type">ReferCurveStruct</span> <span class="variable">curveStruct</span> <span class="operator">=</span> categoryStruct.getSpecifiedCurveElement(curve_name);</span><br><span class="line">                <span class="keyword">if</span> (curveStruct != <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> ((LogCurve3D)curveStruct.curve).getYLevel();</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="type">LogCategory</span> <span class="variable">category</span> <span class="operator">=</span> categoryStruct.getCategory();</span><br><span class="line">                    <span class="keyword">if</span> (category == <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> -<span class="number">99999.0</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="type">LogCurve3D</span> <span class="variable">curve</span> <span class="operator">=</span> category.getLogCurve3D(curve_name);</span><br><span class="line">                        <span class="keyword">if</span> (curve == <span class="literal">null</span>) &#123;</span><br><span class="line">                            <span class="keyword">return</span> -<span class="number">99999.0</span>;</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            curveStruct = <span class="keyword">new</span> <span class="title class_">ReferCurveStruct</span>(curve_name, curve);</span><br><span class="line">                            categoryStruct.addCurveElement(curveStruct);</span><br><span class="line">                            <span class="keyword">return</span> curve.getYLevel();</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">99999.0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getCurveYCount</span><span class="params">(<span class="type">int</span> categoryID, String curveName)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (categoryID &gt;= <span class="number">1</span> &amp;&amp; curveName != <span class="literal">null</span> &amp;&amp; !curveName.trim().isEmpty()) &#123;</span><br><span class="line">            <span class="type">ReferCategoryStruct</span> <span class="variable">categoryStruct</span> <span class="operator">=</span> ReferCategoryContainer.getInstance().getSpecifiedElement(categoryID);</span><br><span class="line">            <span class="keyword">if</span> (categoryStruct == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> -<span class="number">99999</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">curve_name</span> <span class="operator">=</span> curveName.trim();</span><br><span class="line">                <span class="type">ReferCurveStruct</span> <span class="variable">curveStruct</span> <span class="operator">=</span> categoryStruct.getSpecifiedCurveElement(curve_name);</span><br><span class="line">                <span class="keyword">if</span> (curveStruct != <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> ((LogCurve3D)curveStruct.curve).getYCount();</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="type">LogCategory</span> <span class="variable">category</span> <span class="operator">=</span> categoryStruct.getCategory();</span><br><span class="line">                    <span class="keyword">if</span> (category == <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> -<span class="number">99999</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="type">LogCurve3D</span> <span class="variable">curve</span> <span class="operator">=</span> category.getLogCurve3D(curve_name);</span><br><span class="line">                        <span class="keyword">if</span> (curve == <span class="literal">null</span>) &#123;</span><br><span class="line">                            <span class="keyword">return</span> -<span class="number">99999</span>;</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            curveStruct = <span class="keyword">new</span> <span class="title class_">ReferCurveStruct</span>(curve_name, curve);</span><br><span class="line">                            categoryStruct.addCurveElement(curveStruct);</span><br><span class="line">                            <span class="keyword">return</span> curve.getYCount();</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">99999</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getCurveYUnit</span><span class="params">(<span class="type">int</span> categoryID, String curveName)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (categoryID &gt;= <span class="number">1</span> &amp;&amp; curveName != <span class="literal">null</span> &amp;&amp; !curveName.trim().isEmpty()) &#123;</span><br><span class="line">            <span class="type">ReferCategoryStruct</span> <span class="variable">categoryStruct</span> <span class="operator">=</span> ReferCategoryContainer.getInstance().getSpecifiedElement(categoryID);</span><br><span class="line">            <span class="keyword">if</span> (categoryStruct == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">curve_name</span> <span class="operator">=</span> curveName.trim();</span><br><span class="line">                <span class="type">ReferCurveStruct</span> <span class="variable">curveStruct</span> <span class="operator">=</span> categoryStruct.getSpecifiedCurveElement(curve_name);</span><br><span class="line">                <span class="keyword">if</span> (curveStruct != <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> ((LogCurve3D)curveStruct.curve).getYUnit();</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="type">LogCategory</span> <span class="variable">category</span> <span class="operator">=</span> categoryStruct.getCategory();</span><br><span class="line">                    <span class="keyword">if</span> (category == <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="type">LogCurve3D</span> <span class="variable">curve</span> <span class="operator">=</span> category.getLogCurve3D(curve_name);</span><br><span class="line">                        <span class="keyword">if</span> (curve == <span class="literal">null</span>) &#123;</span><br><span class="line">                            <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            curveStruct = <span class="keyword">new</span> <span class="title class_">ReferCurveStruct</span>(curve_name, curve);</span><br><span class="line">                            categoryStruct.addCurveElement(curveStruct);</span><br><span class="line">                            <span class="keyword">return</span> curve.getYUnit();</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">setCurveDepthLevel</span><span class="params">(<span class="type">int</span> categoryID, String curveName, <span class="type">double</span> newDepthLevel)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (categoryID &gt;= <span class="number">1</span> &amp;&amp; curveName != <span class="literal">null</span> &amp;&amp; !curveName.trim().isEmpty()) &#123;</span><br><span class="line">            <span class="type">ReferCategoryStruct</span> <span class="variable">categoryStruct</span> <span class="operator">=</span> ReferCategoryContainer.getInstance().getSpecifiedElement(categoryID);</span><br><span class="line">            <span class="keyword">if</span> (categoryStruct == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">LogCategory</span> <span class="variable">category</span> <span class="operator">=</span> categoryStruct.getCategory();</span><br><span class="line">                <span class="type">LogCurve</span> <span class="variable">curve</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">                <span class="type">String</span> <span class="variable">curve_name</span> <span class="operator">=</span> curveName.trim();</span><br><span class="line">                <span class="type">ReferCurveStruct</span> <span class="variable">curveStruct</span> <span class="operator">=</span> categoryStruct.getSpecifiedCurveElement(curve_name);</span><br><span class="line">                <span class="keyword">if</span> (curveStruct != <span class="literal">null</span>) &#123;</span><br><span class="line">                    curve = curveStruct.curve;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    curve = category.getLogCurve(curve_name);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (curve == <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="type">LogCurve</span> <span class="variable">newCurve</span> <span class="operator">=</span> <span class="built_in">this</span>.changeCurveDepthLevel(category, curve, newDepthLevel, category.getNewCurveSuffix());</span><br><span class="line">                    categoryStruct.removeCurveElement(curve_name);</span><br><span class="line">                    curveStruct = <span class="keyword">new</span> <span class="title class_">ReferCurveStruct</span>(curve_name, newCurve);</span><br><span class="line">                    categoryStruct.addCurveElement(curveStruct);</span><br><span class="line">                    categoryStruct.isModified = <span class="literal">true</span>;</span><br><span class="line">                    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">changeCurveDepthRange</span><span class="params">(<span class="type">int</span> categoryID, String curveName, <span class="type">double</span> newStartDepth, <span class="type">double</span> newEndDepth)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (categoryID &gt;= <span class="number">1</span> &amp;&amp; curveName != <span class="literal">null</span> &amp;&amp; !curveName.trim().isEmpty()) &#123;</span><br><span class="line">            <span class="type">ReferCategoryStruct</span> <span class="variable">categoryStruct</span> <span class="operator">=</span> ReferCategoryContainer.getInstance().getSpecifiedElement(categoryID);</span><br><span class="line">            <span class="keyword">if</span> (categoryStruct == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">LogCategory</span> <span class="variable">category</span> <span class="operator">=</span> categoryStruct.getCategory();</span><br><span class="line">                <span class="type">LogCurve</span> <span class="variable">curve</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">                <span class="type">String</span> <span class="variable">curve_name</span> <span class="operator">=</span> curveName.trim();</span><br><span class="line">                <span class="type">ReferCurveStruct</span> <span class="variable">curveStruct</span> <span class="operator">=</span> categoryStruct.getSpecifiedCurveElement(curve_name);</span><br><span class="line">                <span class="keyword">if</span> (curveStruct != <span class="literal">null</span>) &#123;</span><br><span class="line">                    curve = curveStruct.curve;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    curve = category.getLogCurve(curve_name);</span><br><span class="line">                    curveStruct = <span class="keyword">new</span> <span class="title class_">ReferCurveStruct</span>(curve_name, curve);</span><br><span class="line">                    categoryStruct.addCurveElement(curveStruct);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (curve == <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="type">int</span> <span class="variable">retCode</span> <span class="operator">=</span> curve.changeDepthRange(newStartDepth, newEndDepth, <span class="literal">true</span>);</span><br><span class="line">                    categoryStruct.isModified = <span class="literal">true</span>;</span><br><span class="line">                    <span class="type">return</span> <span class="variable">retCode</span> <span class="operator">=</span>= <span class="number">0</span> ? <span class="number">1</span> : <span class="number">0</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">deleteCurve</span><span class="params">(<span class="type">int</span> categoryID, String curveName)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (categoryID &gt;= <span class="number">1</span> &amp;&amp; curveName != <span class="literal">null</span> &amp;&amp; !curveName.trim().isEmpty()) &#123;</span><br><span class="line">            <span class="type">ReferCategoryStruct</span> <span class="variable">categoryStruct</span> <span class="operator">=</span> ReferCategoryContainer.getInstance().getSpecifiedElement(categoryID);</span><br><span class="line">            <span class="keyword">if</span> (categoryStruct == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">curve_name</span> <span class="operator">=</span> curveName.trim();</span><br><span class="line">                <span class="type">LogCategory</span> <span class="variable">category</span> <span class="operator">=</span> categoryStruct.getCategory();</span><br><span class="line">                <span class="type">int</span> <span class="variable">retCode</span> <span class="operator">=</span> category.deleteLogging(curve_name);</span><br><span class="line">                <span class="keyword">if</span> (retCode != <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    categoryStruct.removeCurveElement(curve_name);</span><br><span class="line">                    categoryStruct.isModified = <span class="literal">true</span>;</span><br><span class="line">                    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">deleteTable</span><span class="params">(<span class="type">int</span> categoryID, String tableName)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (categoryID &gt;= <span class="number">1</span> &amp;&amp; tableName != <span class="literal">null</span> &amp;&amp; !tableName.trim().isEmpty()) &#123;</span><br><span class="line">            <span class="type">ReferCategoryStruct</span> <span class="variable">categoryStruct</span> <span class="operator">=</span> ReferCategoryContainer.getInstance().getSpecifiedElement(categoryID);</span><br><span class="line">            <span class="keyword">if</span> (categoryStruct == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">table_name</span> <span class="operator">=</span> tableName.trim();</span><br><span class="line">                <span class="type">LogCategory</span> <span class="variable">category</span> <span class="operator">=</span> categoryStruct.getCategory();</span><br><span class="line">                <span class="type">int</span> <span class="variable">retCode</span> <span class="operator">=</span> category.deleteLogging(table_name);</span><br><span class="line">                <span class="keyword">if</span> (retCode != <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    categoryStruct.removeCurveElement(table_name);</span><br><span class="line">                    categoryStruct.isModified = <span class="literal">true</span>;</span><br><span class="line">                    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">copyCurve</span><span class="params">(<span class="type">int</span> categoryID, String srcCurveName, String desCurveName, <span class="type">int</span> isOverWritten)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (categoryID &gt;= <span class="number">1</span> &amp;&amp; srcCurveName != <span class="literal">null</span> &amp;&amp; !srcCurveName.trim().isEmpty() &amp;&amp; desCurveName != <span class="literal">null</span> &amp;&amp; !desCurveName.trim().isEmpty()) &#123;</span><br><span class="line">            <span class="type">ReferCategoryStruct</span> <span class="variable">categoryStruct</span> <span class="operator">=</span> ReferCategoryContainer.getInstance().getSpecifiedElement(categoryID);</span><br><span class="line">            <span class="keyword">if</span> (categoryStruct == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">LogCategory</span> <span class="variable">category</span> <span class="operator">=</span> categoryStruct.getCategory();</span><br><span class="line">                <span class="type">LogCurve</span> <span class="variable">srcCurve</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">                <span class="type">LogCurve</span> <span class="variable">desCurve</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">                <span class="type">String</span> <span class="variable">srcCurve_name</span> <span class="operator">=</span> srcCurveName.trim();</span><br><span class="line">                <span class="type">String</span> <span class="variable">desCurve_name</span> <span class="operator">=</span> desCurveName.trim();</span><br><span class="line">                <span class="type">ReferCurveStruct</span> <span class="variable">srcCurveStruct</span> <span class="operator">=</span> categoryStruct.getSpecifiedCurveElement(srcCurve_name);</span><br><span class="line">                <span class="keyword">if</span> (srcCurveStruct != <span class="literal">null</span>) &#123;</span><br><span class="line">                    srcCurve = srcCurveStruct.curve;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    srcCurve = category.getLogCurve(srcCurve_name);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="type">ReferCurveStruct</span> <span class="variable">desCurveStruct</span> <span class="operator">=</span> categoryStruct.getSpecifiedCurveElement(desCurve_name);</span><br><span class="line">                <span class="keyword">if</span> (desCurveStruct != <span class="literal">null</span>) &#123;</span><br><span class="line">                    desCurve = desCurveStruct.curve;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    desCurve = category.getLogCurve(desCurve_name);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (srcCurve == <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span> (desCurve != <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">if</span> (isOverWritten == <span class="number">0</span>) &#123;</span><br><span class="line">                            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        category.deleteLogging(desCurve_name);</span><br><span class="line">                        <span class="keyword">if</span> (desCurveStruct != <span class="literal">null</span>) &#123;</span><br><span class="line">                            categoryStruct.removeCurveElement(desCurveStruct);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="type">LogCurve</span> <span class="variable">newCurve</span> <span class="operator">=</span> <span class="built_in">this</span>.copyCurveAction(category, srcCurve, desCurve_name);</span><br><span class="line">                    desCurveStruct = <span class="keyword">new</span> <span class="title class_">ReferCurveStruct</span>(desCurve_name, newCurve);</span><br><span class="line">                    categoryStruct.addCurveElement(desCurveStruct);</span><br><span class="line">                    categoryStruct.isModified = <span class="literal">true</span>;</span><br><span class="line">                    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> CurveProperty <span class="title function_">getCurveProperty</span><span class="params">(<span class="type">int</span> categoryID, String curveName)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (categoryID &gt;= <span class="number">1</span> &amp;&amp; curveName != <span class="literal">null</span> &amp;&amp; !curveName.trim().isEmpty()) &#123;</span><br><span class="line">            <span class="type">ReferCategoryStruct</span> <span class="variable">categoryStruct</span> <span class="operator">=</span> ReferCategoryContainer.getInstance().getSpecifiedElement(categoryID);</span><br><span class="line">            <span class="keyword">if</span> (categoryStruct == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">CurveProperty</span> <span class="variable">curveProperty</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">                <span class="type">String</span> <span class="variable">curve_name</span> <span class="operator">=</span> curveName.trim();</span><br><span class="line">                <span class="type">ReferCurveStruct</span> <span class="variable">curveStruct</span> <span class="operator">=</span> categoryStruct.getSpecifiedCurveElement(curve_name);</span><br><span class="line">                <span class="keyword">if</span> (curveStruct != <span class="literal">null</span>) &#123;</span><br><span class="line">                    curveProperty = <span class="keyword">new</span> <span class="title class_">CurveProperty</span>();</span><br><span class="line">                    <span class="type">LoggingProperties</span> <span class="variable">properties</span> <span class="operator">=</span> curveStruct.curve.getLoggingProperties();</span><br><span class="line">                    curveProperty.curveName = properties.getLoggingName();</span><br><span class="line">                    curveProperty.arrayNum = properties.getArrayNum();</span><br><span class="line">                    curveProperty.timeSampleNum = properties.getTimeSampleNum();</span><br><span class="line">                    curveProperty.curveLeftScale = properties.getLeftScale();</span><br><span class="line">                    curveProperty.curveRightScale = properties.getRightScale();</span><br><span class="line">                    curveProperty.dataType = properties.getDataType();</span><br><span class="line">                    curveProperty.startDepth = properties.getStartDepth();</span><br><span class="line">                    curveProperty.endDepth = properties.getEndDepth();</span><br><span class="line">                    curveProperty.depthLevel = properties.getDepthLevel();</span><br><span class="line">                    curveProperty.curveUnit = properties.getCurveUnit();</span><br><span class="line">                    curveProperty.depthUnit = properties.getDepthUnit();</span><br><span class="line">                    curveProperty.timeSampleLevel = properties.getTimeSampleLevel();</span><br><span class="line">                    curveProperty.timeSampleUnit = properties.getTimeSampleUnit();</span><br><span class="line">                    curveProperty.timeSampleStartTime = properties.getTimeSampleStartTime();</span><br><span class="line">                    curveProperty.xMin = properties.getXMin();</span><br><span class="line">                    curveProperty.xMax = properties.getXMax();</span><br><span class="line">                    curveProperty.xLevel = properties.getXLevel();</span><br><span class="line">                    curveProperty.yMin = properties.getYMin();</span><br><span class="line">                    curveProperty.yMax = properties.getYMax();</span><br><span class="line">                    curveProperty.yLevel = properties.getYLevel();</span><br><span class="line">                    curveProperty.xCount = properties.getXCount();</span><br><span class="line">                    curveProperty.yCount = properties.getYCount();</span><br><span class="line">                    curveProperty.xUnit = properties.getXUnit();</span><br><span class="line">                    curveProperty.yUnit = properties.getYUnit();</span><br><span class="line">                    <span class="keyword">return</span> curveProperty;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="type">LogCategory</span> <span class="variable">category</span> <span class="operator">=</span> categoryStruct.getCategory();</span><br><span class="line">                    <span class="keyword">if</span> (category == <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="type">LogCurve</span> <span class="variable">curve</span> <span class="operator">=</span> category.getLogCurve(curve_name);</span><br><span class="line">                        <span class="keyword">if</span> (curve == <span class="literal">null</span>) &#123;</span><br><span class="line">                            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            curveStruct = <span class="keyword">new</span> <span class="title class_">ReferCurveStruct</span>(curve_name, curve);</span><br><span class="line">                            categoryStruct.addCurveElement(curveStruct);</span><br><span class="line">                            curveProperty = <span class="keyword">new</span> <span class="title class_">CurveProperty</span>();</span><br><span class="line">                            <span class="type">LoggingProperties</span> <span class="variable">properties</span> <span class="operator">=</span> curve.getLoggingProperties();</span><br><span class="line">                            curveProperty.curveName = properties.getLoggingName();</span><br><span class="line">                            curveProperty.arrayNum = properties.getArrayNum();</span><br><span class="line">                            curveProperty.timeSampleNum = properties.getTimeSampleNum();</span><br><span class="line">                            curveProperty.curveLeftScale = properties.getLeftScale();</span><br><span class="line">                            curveProperty.curveRightScale = properties.getRightScale();</span><br><span class="line">                            curveProperty.dataType = properties.getDataType();</span><br><span class="line">                            curveProperty.startDepth = properties.getStartDepth();</span><br><span class="line">                            curveProperty.endDepth = properties.getEndDepth();</span><br><span class="line">                            curveProperty.depthLevel = properties.getDepthLevel();</span><br><span class="line">                            curveProperty.curveUnit = properties.getCurveUnit();</span><br><span class="line">                            curveProperty.depthUnit = properties.getDepthUnit();</span><br><span class="line">                            curveProperty.timeSampleLevel = properties.getTimeSampleLevel();</span><br><span class="line">                            curveProperty.timeSampleUnit = properties.getTimeSampleUnit();</span><br><span class="line">                            curveProperty.timeSampleStartTime = properties.getTimeSampleStartTime();</span><br><span class="line">                            curveProperty.xMin = properties.getXMin();</span><br><span class="line">                            curveProperty.xMax = properties.getXMax();</span><br><span class="line">                            curveProperty.xLevel = properties.getXLevel();</span><br><span class="line">                            curveProperty.yMin = properties.getYMin();</span><br><span class="line">                            curveProperty.yMax = properties.getYMax();</span><br><span class="line">                            curveProperty.yLevel = properties.getYLevel();</span><br><span class="line">                            curveProperty.xCount = properties.getXCount();</span><br><span class="line">                            curveProperty.yCount = properties.getYCount();</span><br><span class="line">                            curveProperty.xUnit = properties.getXUnit();</span><br><span class="line">                            curveProperty.yUnit = properties.getYUnit();</span><br><span class="line">                            <span class="keyword">return</span> curveProperty;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getCurveDimension</span><span class="params">(<span class="type">int</span> categoryID, String curveName)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (categoryID &gt;= <span class="number">1</span> &amp;&amp; curveName != <span class="literal">null</span> &amp;&amp; !curveName.trim().isEmpty()) &#123;</span><br><span class="line">            <span class="type">ReferCategoryStruct</span> <span class="variable">categoryStruct</span> <span class="operator">=</span> ReferCategoryContainer.getInstance().getSpecifiedElement(categoryID);</span><br><span class="line">            <span class="keyword">if</span> (categoryStruct == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">curve_name</span> <span class="operator">=</span> curveName.trim();</span><br><span class="line">                <span class="type">ReferCurveStruct</span> <span class="variable">curveStruct</span> <span class="operator">=</span> categoryStruct.getSpecifiedCurveElement(curve_name);</span><br><span class="line">                <span class="keyword">if</span> (curveStruct != <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> curveStruct.curve.getDimension();</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="type">LogCategory</span> <span class="variable">category</span> <span class="operator">=</span> categoryStruct.getCategory();</span><br><span class="line">                    <span class="keyword">if</span> (category == <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="type">LogCurve</span> <span class="variable">curve</span> <span class="operator">=</span> category.getLogCurve(curve_name);</span><br><span class="line">                        <span class="keyword">if</span> (curve == <span class="literal">null</span>) &#123;</span><br><span class="line">                            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            curveStruct = <span class="keyword">new</span> <span class="title class_">ReferCurveStruct</span>(curve_name, curve);</span><br><span class="line">                            categoryStruct.addCurveElement(curveStruct);</span><br><span class="line">                            <span class="keyword">return</span> curve.getDimension();</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getCurveArrayNum</span><span class="params">(<span class="type">int</span> categoryID, String curveName)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (categoryID &gt;= <span class="number">1</span> &amp;&amp; curveName != <span class="literal">null</span> &amp;&amp; !curveName.trim().isEmpty()) &#123;</span><br><span class="line">            <span class="type">ReferCategoryStruct</span> <span class="variable">categoryStruct</span> <span class="operator">=</span> ReferCategoryContainer.getInstance().getSpecifiedElement(categoryID);</span><br><span class="line">            <span class="keyword">if</span> (categoryStruct == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">curve_name</span> <span class="operator">=</span> curveName.trim();</span><br><span class="line">                <span class="type">ReferCurveStruct</span> <span class="variable">curveStruct</span> <span class="operator">=</span> categoryStruct.getSpecifiedCurveElement(curve_name);</span><br><span class="line">                <span class="keyword">if</span> (curveStruct != <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> curveStruct.curve.getArrayNum();</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="type">LogCategory</span> <span class="variable">category</span> <span class="operator">=</span> categoryStruct.getCategory();</span><br><span class="line">                    <span class="keyword">if</span> (category == <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="type">LogCurve</span> <span class="variable">curve</span> <span class="operator">=</span> category.getLogCurve(curve_name);</span><br><span class="line">                        <span class="keyword">if</span> (curve == <span class="literal">null</span>) &#123;</span><br><span class="line">                            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            curveStruct = <span class="keyword">new</span> <span class="title class_">ReferCurveStruct</span>(curve_name, curve);</span><br><span class="line">                            categoryStruct.addCurveElement(curveStruct);</span><br><span class="line">                            <span class="keyword">return</span> curve.getArrayNum();</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getCurveArraySize</span><span class="params">(<span class="type">int</span> categoryID, String curveName)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (categoryID &gt;= <span class="number">1</span> &amp;&amp; curveName != <span class="literal">null</span> &amp;&amp; !curveName.trim().isEmpty()) &#123;</span><br><span class="line">            <span class="type">ReferCategoryStruct</span> <span class="variable">categoryStruct</span> <span class="operator">=</span> ReferCategoryContainer.getInstance().getSpecifiedElement(categoryID);</span><br><span class="line">            <span class="keyword">if</span> (categoryStruct == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">curve_name</span> <span class="operator">=</span> curveName.trim();</span><br><span class="line">                <span class="type">ReferCurveStruct</span> <span class="variable">curveStruct</span> <span class="operator">=</span> categoryStruct.getSpecifiedCurveElement(curve_name);</span><br><span class="line">                <span class="keyword">if</span> (curveStruct != <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> curveStruct.curve.getTimeSampleCount();</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="type">LogCategory</span> <span class="variable">category</span> <span class="operator">=</span> categoryStruct.getCategory();</span><br><span class="line">                    <span class="keyword">if</span> (category == <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="type">LogCurve</span> <span class="variable">curve</span> <span class="operator">=</span> category.getLogCurve(curve_name);</span><br><span class="line">                        <span class="keyword">if</span> (curve == <span class="literal">null</span>) &#123;</span><br><span class="line">                            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            curveStruct = <span class="keyword">new</span> <span class="title class_">ReferCurveStruct</span>(curve_name, curve);</span><br><span class="line">                            categoryStruct.addCurveElement(curveStruct);</span><br><span class="line">                            <span class="keyword">return</span> curve.getTimeSampleCount();</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">float</span> <span class="title function_">getCurveTimeSampleLevel</span><span class="params">(<span class="type">int</span> categoryID, String curveName)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (categoryID &gt;= <span class="number">1</span> &amp;&amp; curveName != <span class="literal">null</span> &amp;&amp; !curveName.trim().isEmpty()) &#123;</span><br><span class="line">            <span class="type">ReferCategoryStruct</span> <span class="variable">categoryStruct</span> <span class="operator">=</span> ReferCategoryContainer.getInstance().getSpecifiedElement(categoryID);</span><br><span class="line">            <span class="keyword">if</span> (categoryStruct == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0.0F</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">curve_name</span> <span class="operator">=</span> curveName.trim();</span><br><span class="line">                <span class="type">ReferCurveStruct</span> <span class="variable">curveStruct</span> <span class="operator">=</span> categoryStruct.getSpecifiedCurveElement(curve_name);</span><br><span class="line">                <span class="keyword">if</span> (curveStruct != <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> (<span class="type">float</span>)curveStruct.curve.getLoggingProperties().getTimeSampleLevel();</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="type">LogCategory</span> <span class="variable">category</span> <span class="operator">=</span> categoryStruct.getCategory();</span><br><span class="line">                    <span class="keyword">if</span> (category == <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="number">0.0F</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="type">LogCurve</span> <span class="variable">curve</span> <span class="operator">=</span> category.getLogCurve(curve_name);</span><br><span class="line">                        <span class="keyword">if</span> (curve == <span class="literal">null</span>) &#123;</span><br><span class="line">                            <span class="keyword">return</span> <span class="number">0.0F</span>;</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            curveStruct = <span class="keyword">new</span> <span class="title class_">ReferCurveStruct</span>(curve_name, curve);</span><br><span class="line">                            categoryStruct.addCurveElement(curveStruct);</span><br><span class="line">                            <span class="keyword">return</span> (<span class="type">float</span>)curve.getLoggingProperties().getTimeSampleLevel();</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0.0F</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getCurveUnit</span><span class="params">(<span class="type">int</span> categoryID, String curveName)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (categoryID &gt;= <span class="number">1</span> &amp;&amp; curveName != <span class="literal">null</span> &amp;&amp; !curveName.trim().isEmpty()) &#123;</span><br><span class="line">            <span class="type">ReferCategoryStruct</span> <span class="variable">categoryStruct</span> <span class="operator">=</span> ReferCategoryContainer.getInstance().getSpecifiedElement(categoryID);</span><br><span class="line">            <span class="keyword">if</span> (categoryStruct == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">curve_name</span> <span class="operator">=</span> curveName.trim();</span><br><span class="line">                <span class="type">ReferCurveStruct</span> <span class="variable">curveStruct</span> <span class="operator">=</span> categoryStruct.getSpecifiedCurveElement(curve_name);</span><br><span class="line">                <span class="keyword">if</span> (curveStruct != <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> curveStruct.curve.getCurveUnit();</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="type">LogCategory</span> <span class="variable">category</span> <span class="operator">=</span> categoryStruct.getCategory();</span><br><span class="line">                    <span class="keyword">if</span> (category == <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="type">LogCurve</span> <span class="variable">curve</span> <span class="operator">=</span> category.getLogCurve(curve_name);</span><br><span class="line">                        <span class="keyword">if</span> (curve == <span class="literal">null</span>) &#123;</span><br><span class="line">                            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            curveStruct = <span class="keyword">new</span> <span class="title class_">ReferCurveStruct</span>(curve_name, curve);</span><br><span class="line">                            categoryStruct.addCurveElement(curveStruct);</span><br><span class="line">                            <span class="keyword">return</span> curve.getCurveUnit();</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getCurveDepthUnit</span><span class="params">(<span class="type">int</span> categoryID, String curveName)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (categoryID &gt;= <span class="number">1</span> &amp;&amp; curveName != <span class="literal">null</span> &amp;&amp; !curveName.trim().isEmpty()) &#123;</span><br><span class="line">            <span class="type">ReferCategoryStruct</span> <span class="variable">categoryStruct</span> <span class="operator">=</span> ReferCategoryContainer.getInstance().getSpecifiedElement(categoryID);</span><br><span class="line">            <span class="keyword">if</span> (categoryStruct == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">curve_name</span> <span class="operator">=</span> curveName.trim();</span><br><span class="line">                <span class="type">ReferCurveStruct</span> <span class="variable">curveStruct</span> <span class="operator">=</span> categoryStruct.getSpecifiedCurveElement(curve_name);</span><br><span class="line">                <span class="keyword">if</span> (curveStruct != <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> curveStruct.curve.getDepthUnit();</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="type">LogCategory</span> <span class="variable">category</span> <span class="operator">=</span> categoryStruct.getCategory();</span><br><span class="line">                    <span class="keyword">if</span> (category == <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="type">LogCurve</span> <span class="variable">curve</span> <span class="operator">=</span> category.getLogCurve(curve_name);</span><br><span class="line">                        <span class="keyword">if</span> (curve == <span class="literal">null</span>) &#123;</span><br><span class="line">                            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            curveStruct = <span class="keyword">new</span> <span class="title class_">ReferCurveStruct</span>(curve_name, curve);</span><br><span class="line">                            categoryStruct.addCurveElement(curveStruct);</span><br><span class="line">                            <span class="keyword">return</span> curve.getDepthUnit();</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">flush</span><span class="params">(<span class="type">int</span> categoryID, String curveName)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (categoryID &gt;= <span class="number">1</span> &amp;&amp; curveName != <span class="literal">null</span> &amp;&amp; !curveName.trim().isEmpty()) &#123;</span><br><span class="line">            <span class="type">ReferCategoryStruct</span> <span class="variable">categoryStruct</span> <span class="operator">=</span> ReferCategoryContainer.getInstance().getSpecifiedElement(categoryID);</span><br><span class="line">            <span class="keyword">if</span> (categoryStruct != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="type">ReferCurveStruct</span> <span class="variable">curveStruct</span> <span class="operator">=</span> categoryStruct.getSpecifiedCurveElement(curveName.trim());</span><br><span class="line">                <span class="keyword">if</span> (curveStruct != <span class="literal">null</span> &amp;&amp; curveStruct.curve != <span class="literal">null</span>) &#123;</span><br><span class="line">                    curveStruct.curve.flush();</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">flushAll</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">ReferCurveStruct</span> <span class="variable">curveStruct</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">ReferCategoryStruct</span> <span class="variable">categoryStruct</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; ReferCategoryContainer.getInstance().size(); ++i) &#123;</span><br><span class="line">            categoryStruct = ReferCategoryContainer.getInstance().elemenAt(i);</span><br><span class="line">            <span class="keyword">if</span> (categoryStruct.isModified) &#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; categoryStruct.getCurveSize(); ++j) &#123;</span><br><span class="line">                    curveStruct = categoryStruct.curveElementAt(j);</span><br><span class="line">                    <span class="keyword">if</span> (curveStruct.curve != <span class="literal">null</span>) &#123;</span><br><span class="line">                        curveStruct.curve.flush();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setCurveInterpolation</span><span class="params">(<span class="type">int</span> categoryID, String curveName, <span class="type">int</span> mode)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (categoryID &gt;= <span class="number">1</span> &amp;&amp; curveName != <span class="literal">null</span> &amp;&amp; !curveName.trim().isEmpty()) &#123;</span><br><span class="line">            <span class="type">ReferCategoryStruct</span> <span class="variable">categoryStruct</span> <span class="operator">=</span> ReferCategoryContainer.getInstance().getSpecifiedElement(categoryID);</span><br><span class="line">            <span class="keyword">if</span> (categoryStruct != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">curve_name</span> <span class="operator">=</span> curveName.trim();</span><br><span class="line">                <span class="type">ReferCurveStruct</span> <span class="variable">curveStruct</span> <span class="operator">=</span> categoryStruct.getSpecifiedCurveElement(curve_name);</span><br><span class="line">                <span class="keyword">if</span> (curveStruct != <span class="literal">null</span>) &#123;</span><br><span class="line">                    curveStruct.setInterpolationMode((<span class="type">byte</span>)mode);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="type">LogCategory</span> <span class="variable">category</span> <span class="operator">=</span> categoryStruct.getCategory();</span><br><span class="line">                    <span class="keyword">if</span> (category != <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="type">LogCurve</span> <span class="variable">curve</span> <span class="operator">=</span> category.getLogCurve(curve_name);</span><br><span class="line">                        <span class="keyword">if</span> (curve != <span class="literal">null</span>) &#123;</span><br><span class="line">                            curveStruct = <span class="keyword">new</span> <span class="title class_">ReferCurveStruct</span>(curve_name, curve);</span><br><span class="line">                            curveStruct.setInterpolationMode((<span class="type">byte</span>)mode);</span><br><span class="line">                            categoryStruct.addCurveElement(curveStruct);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">createTable</span><span class="params">(<span class="type">int</span> categoryID, String tableTemplateName, String tableName, <span class="type">int</span> isOverwritten)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (categoryID &gt;= <span class="number">1</span> &amp;&amp; tableTemplateName != <span class="literal">null</span> &amp;&amp; !tableTemplateName.trim().isEmpty() &amp;&amp; tableName != <span class="literal">null</span> &amp;&amp; !tableName.trim().isEmpty()) &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">template_name</span> <span class="operator">=</span> tableTemplateName.trim() + <span class="string">&quot;.&quot;</span> + ResourceUtilities.getDefault().getResourceExt(<span class="number">1</span>);</span><br><span class="line">            <span class="type">String</span> <span class="variable">table_name</span> <span class="operator">=</span> tableName.trim();</span><br><span class="line">            <span class="type">ReferCategoryStruct</span> <span class="variable">categoryStruct</span> <span class="operator">=</span> ReferCategoryContainer.getInstance().getSpecifiedElement(categoryID);</span><br><span class="line">            <span class="keyword">if</span> (categoryStruct == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">ResourceObject</span> <span class="variable">resourceFile</span> <span class="operator">=</span> ResourceUtilities.getDefault().getPreservedResourceObject(<span class="number">1</span>, template_name);</span><br><span class="line">                <span class="type">TableTemplateXmlRw</span> <span class="variable">xmlRw</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TableTemplateXmlRw</span>();</span><br><span class="line">                <span class="type">TableFields</span> <span class="variable">tableFields</span> <span class="operator">=</span> xmlRw.readTableTemplate(<span class="keyword">new</span> <span class="title class_">ByteArrayInputStream</span>((<span class="type">byte</span>[])((<span class="type">byte</span>[])ResourceUtilities.getDefault().getResourceObjectContents(resourceFile))), resourceFile.getResourceType());</span><br><span class="line">                <span class="keyword">if</span> (tableFields == <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="type">LogCategory</span> <span class="variable">category</span> <span class="operator">=</span> categoryStruct.getCategory();</span><br><span class="line">                    <span class="keyword">if</span> (category.getLogging(table_name) != <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">if</span> (isOverwritten == <span class="number">0</span>) &#123;</span><br><span class="line">                            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        category.deleteLogging(table_name);</span><br><span class="line">                        categoryStruct.removeDocElement(table_name);</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="type">TableRecords</span> <span class="variable">tableRecords</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TableRecords</span>();</span><br><span class="line">                    tableRecords.init(<span class="number">0</span>, tableFields);</span><br><span class="line">                    <span class="type">LogTable</span> <span class="variable">table</span> <span class="operator">=</span> category.createTable(table_name, ResourceUtilities.getDefault().toString(resourceFile), (<span class="type">byte</span>)<span class="number">5</span>, tableRecords);</span><br><span class="line">                    <span class="keyword">if</span> (table == <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="type">ReferTableStruct</span> <span class="variable">tableStruct</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ReferTableStruct</span>(table_name, table);</span><br><span class="line">                        categoryStruct.addTableElement(tableStruct);</span><br><span class="line">                        categoryStruct.isModified = <span class="literal">true</span>;</span><br><span class="line">                        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getTableRowCount</span><span class="params">(<span class="type">int</span> categoryID, String tableName)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (categoryID &gt;= <span class="number">1</span> &amp;&amp; tableName != <span class="literal">null</span> &amp;&amp; !tableName.trim().isEmpty()) &#123;</span><br><span class="line">            <span class="type">ReferCategoryStruct</span> <span class="variable">categoryStruct</span> <span class="operator">=</span> ReferCategoryContainer.getInstance().getSpecifiedElement(categoryID);</span><br><span class="line">            <span class="keyword">if</span> (categoryStruct == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">table_name</span> <span class="operator">=</span> tableName.trim();</span><br><span class="line">                <span class="type">ReferTableStruct</span> <span class="variable">tableStruct</span> <span class="operator">=</span> categoryStruct.getSpecifiedTableElement(table_name);</span><br><span class="line">                <span class="keyword">if</span> (tableStruct != <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> tableStruct.table.getRowCount();</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="type">LogCategory</span> <span class="variable">category</span> <span class="operator">=</span> categoryStruct.getCategory();</span><br><span class="line">                    <span class="keyword">if</span> (category == <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="type">LogTable</span> <span class="variable">table</span> <span class="operator">=</span> category.getLogCommonTable(table_name);</span><br><span class="line">                        <span class="keyword">if</span> (table == <span class="literal">null</span>) &#123;</span><br><span class="line">                            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            tableStruct = <span class="keyword">new</span> <span class="title class_">ReferTableStruct</span>(table_name, table);</span><br><span class="line">                            categoryStruct.addTableElement(tableStruct);</span><br><span class="line">                            <span class="keyword">return</span> table.getRowCount();</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getCommonTableColumnName</span><span class="params">(<span class="type">int</span> categoryID, String tableName, <span class="type">int</span> columnIndex)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (categoryID &gt;= <span class="number">1</span> &amp;&amp; tableName != <span class="literal">null</span> &amp;&amp; !tableName.trim().isEmpty() &amp;&amp; columnIndex &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="type">ReferCategoryStruct</span> <span class="variable">categoryStruct</span> <span class="operator">=</span> ReferCategoryContainer.getInstance().getSpecifiedElement(categoryID);</span><br><span class="line">            <span class="keyword">if</span> (categoryStruct == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">table_name</span> <span class="operator">=</span> tableName.trim();</span><br><span class="line">                <span class="type">ReferTableStruct</span> <span class="variable">tableStruct</span> <span class="operator">=</span> categoryStruct.getSpecifiedTableElement(table_name);</span><br><span class="line">                <span class="keyword">if</span> (tableStruct != <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="type">LogTable</span> <span class="variable">table</span> <span class="operator">=</span> tableStruct.table;</span><br><span class="line">                    <span class="type">int</span> <span class="variable">columnCount</span> <span class="operator">=</span> table.getColumnCount();</span><br><span class="line">                    <span class="keyword">if</span> (columnIndex &gt; columnCount) &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="type">TableFields</span> <span class="variable">tableFields</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TableFields</span>();</span><br><span class="line">                        table.readTableFields(tableFields);</span><br><span class="line">                        <span class="keyword">return</span> tableFields.getName(columnIndex);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="type">LogCategory</span> <span class="variable">category</span> <span class="operator">=</span> categoryStruct.getCategory();</span><br><span class="line">                    <span class="keyword">if</span> (category == <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="type">LogTable</span> <span class="variable">table</span> <span class="operator">=</span> category.getLogCommonTable(table_name);</span><br><span class="line">                        <span class="keyword">if</span> (table == <span class="literal">null</span>) &#123;</span><br><span class="line">                            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            tableStruct = <span class="keyword">new</span> <span class="title class_">ReferTableStruct</span>(table_name, table);</span><br><span class="line">                            categoryStruct.addTableElement(tableStruct);</span><br><span class="line">                            <span class="type">int</span> <span class="variable">columnCount</span> <span class="operator">=</span> table.getColumnCount();</span><br><span class="line">                            <span class="keyword">if</span> (columnIndex &gt; columnCount) &#123;</span><br><span class="line">                                <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">                            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                                <span class="type">TableFields</span> <span class="variable">tableFields</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TableFields</span>();</span><br><span class="line">                                table.readTableFields(tableFields);</span><br><span class="line">                                <span class="keyword">return</span> tableFields.getName(columnIndex);</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getTableColumnCount</span><span class="params">(<span class="type">int</span> categoryID, String tableName)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (categoryID &gt;= <span class="number">1</span> &amp;&amp; tableName != <span class="literal">null</span> &amp;&amp; !tableName.trim().isEmpty()) &#123;</span><br><span class="line">            <span class="type">ReferCategoryStruct</span> <span class="variable">categoryStruct</span> <span class="operator">=</span> ReferCategoryContainer.getInstance().getSpecifiedElement(categoryID);</span><br><span class="line">            <span class="keyword">if</span> (categoryStruct == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">table_name</span> <span class="operator">=</span> tableName.trim();</span><br><span class="line">                <span class="type">ReferTableStruct</span> <span class="variable">tableStruct</span> <span class="operator">=</span> categoryStruct.getSpecifiedTableElement(table_name);</span><br><span class="line">                <span class="keyword">if</span> (tableStruct != <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> tableStruct.table.getColumnCount();</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="type">LogCategory</span> <span class="variable">category</span> <span class="operator">=</span> categoryStruct.getCategory();</span><br><span class="line">                    <span class="keyword">if</span> (category == <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="type">LogTable</span> <span class="variable">table</span> <span class="operator">=</span> category.getLogCommonTable(table_name);</span><br><span class="line">                        <span class="keyword">if</span> (table == <span class="literal">null</span>) &#123;</span><br><span class="line">                            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            tableStruct = <span class="keyword">new</span> <span class="title class_">ReferTableStruct</span>(table_name, table);</span><br><span class="line">                            categoryStruct.addTableElement(tableStruct);</span><br><span class="line">                            <span class="keyword">return</span> table.getColumnCount();</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">readTable</span><span class="params">(<span class="type">int</span> categoryID, String tableName, <span class="type">int</span> rowIndex, <span class="type">int</span> columnIndex)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (categoryID &gt;= <span class="number">1</span> &amp;&amp; rowIndex &gt;= <span class="number">1</span> &amp;&amp; columnIndex &gt;= <span class="number">1</span> &amp;&amp; tableName != <span class="literal">null</span> &amp;&amp; !tableName.trim().isEmpty()) &#123;</span><br><span class="line">            <span class="type">ReferCategoryStruct</span> <span class="variable">categoryStruct</span> <span class="operator">=</span> ReferCategoryContainer.getInstance().getSpecifiedElement(categoryID);</span><br><span class="line">            <span class="keyword">if</span> (categoryStruct == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                String[] buf = <span class="literal">null</span>;</span><br><span class="line">                <span class="type">int</span> <span class="variable">columnCount</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">                <span class="type">String</span> <span class="variable">table_name</span> <span class="operator">=</span> tableName.trim();</span><br><span class="line">                <span class="type">ReferTableStruct</span> <span class="variable">tableStruct</span> <span class="operator">=</span> categoryStruct.getSpecifiedTableElement(table_name);</span><br><span class="line">                <span class="type">int</span> columnCount;</span><br><span class="line">                <span class="keyword">if</span> (tableStruct != <span class="literal">null</span>) &#123;</span><br><span class="line">                    columnCount = tableStruct.table.getColumnCount();</span><br><span class="line">                    <span class="keyword">if</span> (columnIndex &gt; columnCount) &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        buf = <span class="keyword">new</span> <span class="title class_">String</span>[columnCount];</span><br><span class="line">                        <span class="type">int</span> <span class="variable">retCode</span> <span class="operator">=</span> <span class="built_in">this</span>.readTableData(tableStruct.table, rowIndex, buf);</span><br><span class="line">                        <span class="keyword">return</span> retCode &gt; <span class="number">0</span> ? buf[columnIndex - <span class="number">1</span>] : <span class="literal">null</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="type">LogCategory</span> <span class="variable">category</span> <span class="operator">=</span> categoryStruct.getCategory();</span><br><span class="line">                    <span class="keyword">if</span> (category == <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="type">LogTable</span> <span class="variable">table</span> <span class="operator">=</span> category.getLogCommonTable(table_name);</span><br><span class="line">                        <span class="keyword">if</span> (table == <span class="literal">null</span>) &#123;</span><br><span class="line">                            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            tableStruct = <span class="keyword">new</span> <span class="title class_">ReferTableStruct</span>(table_name, table);</span><br><span class="line">                            categoryStruct.addTableElement(tableStruct);</span><br><span class="line">                            columnCount = table.getColumnCount();</span><br><span class="line">                            <span class="keyword">if</span> (columnIndex &gt; columnCount) &#123;</span><br><span class="line">                                <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">                            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                                buf = <span class="keyword">new</span> <span class="title class_">String</span>[columnCount];</span><br><span class="line">                                <span class="type">int</span> <span class="variable">retCode</span> <span class="operator">=</span> <span class="built_in">this</span>.readTableData(tableStruct.table, rowIndex, buf);</span><br><span class="line">                                <span class="keyword">return</span> retCode &gt; <span class="number">0</span> ? buf[columnIndex - <span class="number">1</span>] : <span class="literal">null</span>;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">float</span> <span class="title function_">readTable_x</span><span class="params">(<span class="type">int</span> categoryID, String tableName, <span class="type">int</span> rowIndex, <span class="type">int</span> columnIndex)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (categoryID &gt;= <span class="number">1</span> &amp;&amp; rowIndex &gt;= <span class="number">1</span> &amp;&amp; columnIndex &gt;= <span class="number">1</span> &amp;&amp; tableName != <span class="literal">null</span> &amp;&amp; !tableName.trim().isEmpty()) &#123;</span><br><span class="line">            <span class="type">ReferCategoryStruct</span> <span class="variable">categoryStruct</span> <span class="operator">=</span> ReferCategoryContainer.getInstance().getSpecifiedElement(categoryID);</span><br><span class="line">            <span class="keyword">if</span> (categoryStruct == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> -<span class="number">99999.0F</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">float</span>[] buf = <span class="literal">null</span>;</span><br><span class="line">                <span class="type">int</span> <span class="variable">columnCount</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">                <span class="type">String</span> <span class="variable">table_name</span> <span class="operator">=</span> tableName.trim();</span><br><span class="line">                <span class="type">ReferTableStruct</span> <span class="variable">tableStruct</span> <span class="operator">=</span> categoryStruct.getSpecifiedTableElement(table_name);</span><br><span class="line">                <span class="type">float</span>[] buf;</span><br><span class="line">                <span class="type">int</span> columnCount;</span><br><span class="line">                <span class="keyword">if</span> (tableStruct != <span class="literal">null</span>) &#123;</span><br><span class="line">                    columnCount = tableStruct.table.getColumnCount();</span><br><span class="line">                    <span class="keyword">if</span> (columnIndex &gt; columnCount) &#123;</span><br><span class="line">                        <span class="keyword">return</span> -<span class="number">99999.0F</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        buf = <span class="keyword">new</span> <span class="title class_">float</span>[columnCount];</span><br><span class="line">                        <span class="type">int</span> <span class="variable">retCode</span> <span class="operator">=</span> <span class="built_in">this</span>.readTableData(tableStruct.table, rowIndex, buf);</span><br><span class="line">                        <span class="keyword">return</span> retCode &gt; <span class="number">0</span> ? buf[columnIndex - <span class="number">1</span>] : -<span class="number">99999.0F</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="type">LogCategory</span> <span class="variable">category</span> <span class="operator">=</span> categoryStruct.getCategory();</span><br><span class="line">                    <span class="keyword">if</span> (category == <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> -<span class="number">99999.0F</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="type">LogTable</span> <span class="variable">table</span> <span class="operator">=</span> category.getLogCommonTable(table_name);</span><br><span class="line">                        <span class="keyword">if</span> (table == <span class="literal">null</span>) &#123;</span><br><span class="line">                            <span class="keyword">return</span> -<span class="number">99999.0F</span>;</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            tableStruct = <span class="keyword">new</span> <span class="title class_">ReferTableStruct</span>(table_name, table);</span><br><span class="line">                            categoryStruct.addTableElement(tableStruct);</span><br><span class="line">                            columnCount = table.getColumnCount();</span><br><span class="line">                            <span class="keyword">if</span> (columnIndex &gt; columnCount) &#123;</span><br><span class="line">                                <span class="keyword">return</span> -<span class="number">99999.0F</span>;</span><br><span class="line">                            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                                buf = <span class="keyword">new</span> <span class="title class_">float</span>[columnCount];</span><br><span class="line">                                <span class="type">int</span> <span class="variable">retCode</span> <span class="operator">=</span> <span class="built_in">this</span>.readTableData(tableStruct.table, rowIndex, buf);</span><br><span class="line">                                <span class="keyword">return</span> retCode &gt; <span class="number">0</span> ? buf[columnIndex - <span class="number">1</span>] : -<span class="number">99999.0F</span>;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">99999.0F</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">readTable</span><span class="params">(<span class="type">int</span> categoryID, String tableName, <span class="type">int</span> rowIndex, <span class="type">float</span>[] buffer)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (categoryID &gt;= <span class="number">1</span> &amp;&amp; rowIndex &gt;= <span class="number">1</span> &amp;&amp; buffer != <span class="literal">null</span> &amp;&amp; tableName != <span class="literal">null</span> &amp;&amp; !tableName.trim().isEmpty()) &#123;</span><br><span class="line">            <span class="type">ReferCategoryStruct</span> <span class="variable">categoryStruct</span> <span class="operator">=</span> ReferCategoryContainer.getInstance().getSpecifiedElement(categoryID);</span><br><span class="line">            <span class="keyword">if</span> (categoryStruct == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">table_name</span> <span class="operator">=</span> tableName.trim();</span><br><span class="line">                <span class="type">ReferTableStruct</span> <span class="variable">tableStruct</span> <span class="operator">=</span> categoryStruct.getSpecifiedTableElement(table_name);</span><br><span class="line">                <span class="keyword">if</span> (tableStruct != <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="built_in">this</span>.readTableData(tableStruct.table, rowIndex, buffer);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="type">LogCategory</span> <span class="variable">category</span> <span class="operator">=</span> categoryStruct.getCategory();</span><br><span class="line">                    <span class="keyword">if</span> (category == <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="type">LogTable</span> <span class="variable">table</span> <span class="operator">=</span> category.getLogCommonTable(table_name);</span><br><span class="line">                        <span class="keyword">if</span> (table == <span class="literal">null</span>) &#123;</span><br><span class="line">                            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            tableStruct = <span class="keyword">new</span> <span class="title class_">ReferTableStruct</span>(table_name, table);</span><br><span class="line">                            categoryStruct.addTableElement(tableStruct);</span><br><span class="line">                            <span class="keyword">return</span> <span class="built_in">this</span>.readTableData(table, rowIndex, buffer);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">readTable</span><span class="params">(<span class="type">int</span> categoryID, String tableName, <span class="type">int</span> rowIndex, String[] buffer)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (categoryID &gt;= <span class="number">1</span> &amp;&amp; rowIndex &gt;= <span class="number">1</span> &amp;&amp; buffer != <span class="literal">null</span> &amp;&amp; tableName != <span class="literal">null</span> &amp;&amp; !tableName.trim().isEmpty()) &#123;</span><br><span class="line">            <span class="type">ReferCategoryStruct</span> <span class="variable">categoryStruct</span> <span class="operator">=</span> ReferCategoryContainer.getInstance().getSpecifiedElement(categoryID);</span><br><span class="line">            <span class="keyword">if</span> (categoryStruct == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">table_name</span> <span class="operator">=</span> tableName.trim();</span><br><span class="line">                <span class="type">ReferTableStruct</span> <span class="variable">tableStruct</span> <span class="operator">=</span> categoryStruct.getSpecifiedTableElement(table_name);</span><br><span class="line">                <span class="keyword">if</span> (tableStruct != <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="built_in">this</span>.readTableData(tableStruct.table, rowIndex, buffer);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="type">LogCategory</span> <span class="variable">category</span> <span class="operator">=</span> categoryStruct.getCategory();</span><br><span class="line">                    <span class="keyword">if</span> (category == <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="type">LogTable</span> <span class="variable">table</span> <span class="operator">=</span> category.getLogCommonTable(table_name);</span><br><span class="line">                        <span class="keyword">if</span> (table == <span class="literal">null</span>) &#123;</span><br><span class="line">                            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            tableStruct = <span class="keyword">new</span> <span class="title class_">ReferTableStruct</span>(table_name, table);</span><br><span class="line">                            categoryStruct.addTableElement(tableStruct);</span><br><span class="line">                            <span class="keyword">return</span> <span class="built_in">this</span>.readTableData(table, rowIndex, buffer);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">writeTable</span><span class="params">(<span class="type">int</span> categoryID, String tableName, <span class="type">int</span> rowIndex, <span class="type">float</span>[] buffer)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (categoryID &gt;= <span class="number">1</span> &amp;&amp; rowIndex &gt;= <span class="number">1</span> &amp;&amp; buffer != <span class="literal">null</span> &amp;&amp; tableName != <span class="literal">null</span> &amp;&amp; !tableName.trim().isEmpty()) &#123;</span><br><span class="line">            <span class="type">ReferCategoryStruct</span> <span class="variable">categoryStruct</span> <span class="operator">=</span> ReferCategoryContainer.getInstance().getSpecifiedElement(categoryID);</span><br><span class="line">            <span class="keyword">if</span> (categoryStruct == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">int</span> <span class="variable">retCount</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">                <span class="type">String</span> <span class="variable">table_name</span> <span class="operator">=</span> tableName.trim();</span><br><span class="line">                <span class="type">ReferTableStruct</span> <span class="variable">tableStruct</span> <span class="operator">=</span> categoryStruct.getSpecifiedTableElement(table_name);</span><br><span class="line">                <span class="type">int</span> retCount;</span><br><span class="line">                <span class="keyword">if</span> (tableStruct != <span class="literal">null</span>) &#123;</span><br><span class="line">                    retCount = <span class="built_in">this</span>.writeTableData(tableStruct.table, rowIndex, buffer);</span><br><span class="line">                    <span class="keyword">if</span> (retCount &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                        categoryStruct.isModified = <span class="literal">true</span>;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">return</span> retCount;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="type">LogCategory</span> <span class="variable">category</span> <span class="operator">=</span> categoryStruct.getCategory();</span><br><span class="line">                    <span class="keyword">if</span> (category == <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="type">LogTable</span> <span class="variable">table</span> <span class="operator">=</span> category.getLogCommonTable(table_name);</span><br><span class="line">                        <span class="keyword">if</span> (table == <span class="literal">null</span>) &#123;</span><br><span class="line">                            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            tableStruct = <span class="keyword">new</span> <span class="title class_">ReferTableStruct</span>(table_name, table);</span><br><span class="line">                            categoryStruct.addTableElement(tableStruct);</span><br><span class="line">                            retCount = <span class="built_in">this</span>.writeTableData(table, rowIndex, buffer);</span><br><span class="line">                            <span class="keyword">if</span> (retCount &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                                categoryStruct.isModified = <span class="literal">true</span>;</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">return</span> retCount;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">writeTable</span><span class="params">(<span class="type">int</span> categoryID, String tableName, <span class="type">int</span> rowIndex, <span class="type">int</span> columnIndex, <span class="type">float</span> buffer)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.writeTable(categoryID, tableName, rowIndex, columnIndex, Float.toString(buffer));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">writeTable</span><span class="params">(<span class="type">int</span> categoryID, String tableName, <span class="type">int</span> rowIndex, <span class="type">int</span> columnIndex, String buffer)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (categoryID &gt;= <span class="number">1</span> &amp;&amp; rowIndex &gt;= <span class="number">1</span> &amp;&amp; columnIndex &gt;= <span class="number">1</span> &amp;&amp; buffer != <span class="literal">null</span> &amp;&amp; tableName != <span class="literal">null</span> &amp;&amp; !tableName.trim().isEmpty()) &#123;</span><br><span class="line">            <span class="type">ReferCategoryStruct</span> <span class="variable">categoryStruct</span> <span class="operator">=</span> ReferCategoryContainer.getInstance().getSpecifiedElement(categoryID);</span><br><span class="line">            <span class="keyword">if</span> (categoryStruct == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">int</span> <span class="variable">retCount</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">                <span class="type">String</span> <span class="variable">table_name</span> <span class="operator">=</span> tableName.trim();</span><br><span class="line">                <span class="type">ReferTableStruct</span> <span class="variable">tableStruct</span> <span class="operator">=</span> categoryStruct.getSpecifiedTableElement(table_name);</span><br><span class="line">                <span class="type">int</span> retCount;</span><br><span class="line">                <span class="keyword">if</span> (tableStruct != <span class="literal">null</span>) &#123;</span><br><span class="line">                    retCount = <span class="built_in">this</span>.writeTableData(tableStruct.table, rowIndex, columnIndex, buffer);</span><br><span class="line">                    <span class="keyword">if</span> (retCount &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                        categoryStruct.isModified = <span class="literal">true</span>;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">return</span> retCount;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="type">LogCategory</span> <span class="variable">category</span> <span class="operator">=</span> categoryStruct.getCategory();</span><br><span class="line">                    <span class="keyword">if</span> (category == <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="type">LogTable</span> <span class="variable">table</span> <span class="operator">=</span> category.getLogCommonTable(table_name);</span><br><span class="line">                        <span class="keyword">if</span> (table == <span class="literal">null</span>) &#123;</span><br><span class="line">                            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            tableStruct = <span class="keyword">new</span> <span class="title class_">ReferTableStruct</span>(table_name, table);</span><br><span class="line">                            categoryStruct.addTableElement(tableStruct);</span><br><span class="line">                            retCount = <span class="built_in">this</span>.writeTableData(table, rowIndex, columnIndex, buffer);</span><br><span class="line">                            <span class="keyword">if</span> (retCount &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                                categoryStruct.isModified = <span class="literal">true</span>;</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">return</span> retCount;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">writeTable</span><span class="params">(<span class="type">int</span> categoryID, String tableName, <span class="type">int</span> rowIndex, String[] buffer)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (categoryID &gt;= <span class="number">1</span> &amp;&amp; rowIndex &gt;= <span class="number">1</span> &amp;&amp; buffer != <span class="literal">null</span> &amp;&amp; tableName != <span class="literal">null</span> &amp;&amp; !tableName.trim().isEmpty()) &#123;</span><br><span class="line">            <span class="type">ReferCategoryStruct</span> <span class="variable">categoryStruct</span> <span class="operator">=</span> ReferCategoryContainer.getInstance().getSpecifiedElement(categoryID);</span><br><span class="line">            <span class="keyword">if</span> (categoryStruct == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">int</span> <span class="variable">retCount</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">                <span class="type">String</span> <span class="variable">table_name</span> <span class="operator">=</span> tableName.trim();</span><br><span class="line">                <span class="type">ReferTableStruct</span> <span class="variable">tableStruct</span> <span class="operator">=</span> categoryStruct.getSpecifiedTableElement(table_name);</span><br><span class="line">                <span class="type">int</span> retCount;</span><br><span class="line">                <span class="keyword">if</span> (tableStruct != <span class="literal">null</span>) &#123;</span><br><span class="line">                    retCount = <span class="built_in">this</span>.writeTableData(tableStruct.table, rowIndex, buffer);</span><br><span class="line">                    <span class="keyword">if</span> (retCount &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                        categoryStruct.isModified = <span class="literal">true</span>;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">return</span> retCount;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="type">LogCategory</span> <span class="variable">category</span> <span class="operator">=</span> categoryStruct.getCategory();</span><br><span class="line">                    <span class="keyword">if</span> (category == <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="type">LogTable</span> <span class="variable">table</span> <span class="operator">=</span> category.getLogCommonTable(table_name);</span><br><span class="line">                        <span class="keyword">if</span> (table == <span class="literal">null</span>) &#123;</span><br><span class="line">                            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            tableStruct = <span class="keyword">new</span> <span class="title class_">ReferTableStruct</span>(table_name, table);</span><br><span class="line">                            categoryStruct.addTableElement(tableStruct);</span><br><span class="line">                            retCount = <span class="built_in">this</span>.writeTableData(table, rowIndex, buffer);</span><br><span class="line">                            <span class="keyword">if</span> (retCount &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                                categoryStruct.isModified = <span class="literal">true</span>;</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">return</span> retCount;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">copyTable</span><span class="params">(<span class="type">int</span> srcCategoryID, String srcTableName, <span class="type">int</span> desCategoryID, String desTableName, <span class="type">int</span> isOverwritten)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (srcCategoryID &gt;= <span class="number">1</span> &amp;&amp; desCategoryID &gt;= <span class="number">1</span> &amp;&amp; srcTableName != <span class="literal">null</span> &amp;&amp; !srcTableName.trim().isEmpty() &amp;&amp; desTableName != <span class="literal">null</span> &amp;&amp; !desTableName.trim().isEmpty()) &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">src_name</span> <span class="operator">=</span> srcTableName.trim();</span><br><span class="line">            <span class="type">String</span> <span class="variable">des_name</span> <span class="operator">=</span> desTableName.trim();</span><br><span class="line">            <span class="type">ReferCategoryStruct</span> <span class="variable">srcCategoryStruct</span> <span class="operator">=</span> ReferCategoryContainer.getInstance().getSpecifiedElement(srcCategoryID);</span><br><span class="line">            <span class="keyword">if</span> (srcCategoryStruct == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">ReferCategoryStruct</span> <span class="variable">desCategoryStruct</span> <span class="operator">=</span> ReferCategoryContainer.getInstance().getSpecifiedElement(desCategoryID);</span><br><span class="line">                <span class="keyword">if</span> (desCategoryStruct == <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="type">LogCategory</span> <span class="variable">srcCategory</span> <span class="operator">=</span> srcCategoryStruct.getCategory();</span><br><span class="line">                    <span class="type">LogCategory</span> <span class="variable">desCategory</span> <span class="operator">=</span> desCategoryStruct.getCategory();</span><br><span class="line">                    <span class="type">LogTable</span> <span class="variable">srcTable</span> <span class="operator">=</span> srcCategory.getLogCommonTable(src_name);</span><br><span class="line">                    <span class="keyword">if</span> (srcTable == <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="keyword">if</span> (desCategory.getLogCommonTable(des_name) != <span class="literal">null</span>) &#123;</span><br><span class="line">                            <span class="keyword">if</span> (isOverwritten == <span class="number">0</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            desCategory.deleteLogging(des_name);</span><br><span class="line">                            desCategoryStruct.removeTableElement(des_name);</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        <span class="type">int</span> <span class="variable">retCode</span> <span class="operator">=</span> desCategory.copyLoggingFrom(srcTable, <span class="string">&quot;&quot;</span>);</span><br><span class="line">                        <span class="keyword">if</span> (retCode != <span class="number">0</span>) &#123;</span><br><span class="line">                            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            desCategoryStruct.isModified = <span class="literal">true</span>;</span><br><span class="line">                            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">removeTableAllRecords</span><span class="params">(<span class="type">int</span> categoryID, String tableName)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (categoryID &gt;= <span class="number">1</span> &amp;&amp; tableName != <span class="literal">null</span> &amp;&amp; !tableName.trim().isEmpty()) &#123;</span><br><span class="line">            <span class="type">ReferCategoryStruct</span> <span class="variable">categoryStruct</span> <span class="operator">=</span> ReferCategoryContainer.getInstance().getSpecifiedElement(categoryID);</span><br><span class="line">            <span class="keyword">if</span> (categoryStruct != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">table_name</span> <span class="operator">=</span> tableName.trim();</span><br><span class="line">                <span class="type">ReferTableStruct</span> <span class="variable">tableStruct</span> <span class="operator">=</span> categoryStruct.getSpecifiedTableElement(table_name);</span><br><span class="line">                <span class="keyword">if</span> (tableStruct != <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="type">TableRecords</span> <span class="variable">tableRecords</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TableRecords</span>();</span><br><span class="line">                    tableStruct.table.readTableRecords(tableRecords);</span><br><span class="line">                    <span class="type">int</span> <span class="variable">recordsNum</span> <span class="operator">=</span> tableRecords.getRecordsNum();</span><br><span class="line">                    <span class="keyword">if</span> (recordsNum &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                        tableRecords.deleteTableRecords(<span class="number">0</span>, recordsNum);</span><br><span class="line">                        tableStruct.table.writeTableRecords(tableRecords);</span><br><span class="line">                        categoryStruct.isModified = <span class="literal">true</span>;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="type">LogCategory</span> <span class="variable">category</span> <span class="operator">=</span> categoryStruct.getCategory();</span><br><span class="line">                    <span class="keyword">if</span> (category != <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="type">LogTable</span> <span class="variable">table</span> <span class="operator">=</span> category.getLogCommonTable(table_name);</span><br><span class="line">                        <span class="keyword">if</span> (table != <span class="literal">null</span>) &#123;</span><br><span class="line">                            tableStruct = <span class="keyword">new</span> <span class="title class_">ReferTableStruct</span>(table_name, table);</span><br><span class="line">                            categoryStruct.addTableElement(tableStruct);</span><br><span class="line">                            <span class="type">TableRecords</span> <span class="variable">tableRecords</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TableRecords</span>();</span><br><span class="line">                            tableStruct.table.readTableRecords(tableRecords);</span><br><span class="line">                            <span class="type">int</span> <span class="variable">recordsNum</span> <span class="operator">=</span> tableRecords.getRecordsNum();</span><br><span class="line">                            <span class="keyword">if</span> (recordsNum &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                                tableRecords.deleteTableRecords(<span class="number">0</span>, recordsNum);</span><br><span class="line">                                tableStruct.table.writeTableRecords(tableRecords);</span><br><span class="line">                                categoryStruct.isModified = <span class="literal">true</span>;</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getDocSize</span><span class="params">(<span class="type">int</span> categoryID, String docName)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (categoryID &gt;= <span class="number">1</span> &amp;&amp; docName != <span class="literal">null</span> &amp;&amp; !docName.trim().isEmpty()) &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">doc_name</span> <span class="operator">=</span> docName.trim();</span><br><span class="line">            <span class="type">ReferCategoryStruct</span> <span class="variable">categoryStruct</span> <span class="operator">=</span> ReferCategoryContainer.getInstance().getSpecifiedElement(categoryID);</span><br><span class="line">            <span class="keyword">if</span> (categoryStruct == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">ReferDocStruct</span> <span class="variable">docStruct</span> <span class="operator">=</span> categoryStruct.getSpecifiedDocElement(doc_name);</span><br><span class="line">                <span class="keyword">if</span> (docStruct != <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> docStruct.doc.getLoggingProperties().getDocSize();</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="type">LogCategory</span> <span class="variable">category</span> <span class="operator">=</span> categoryStruct.getCategory();</span><br><span class="line">                    <span class="keyword">if</span> (category == <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="type">LogDocument</span> <span class="variable">doc</span> <span class="operator">=</span> category.getLogDoc(doc_name);</span><br><span class="line">                        <span class="keyword">if</span> (doc == <span class="literal">null</span>) &#123;</span><br><span class="line">                            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            docStruct = <span class="keyword">new</span> <span class="title class_">ReferDocStruct</span>(doc_name, doc);</span><br><span class="line">                            categoryStruct.addDocElement(docStruct);</span><br><span class="line">                            <span class="keyword">return</span> docStruct.doc.getLoggingProperties().getDocSize();</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">createDocument</span><span class="params">(<span class="type">int</span> categoryID, String docName, <span class="type">int</span> isOverwritten)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (categoryID &gt;= <span class="number">1</span> &amp;&amp; docName != <span class="literal">null</span> &amp;&amp; !docName.trim().isEmpty()) &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">doc_name</span> <span class="operator">=</span> docName.trim();</span><br><span class="line">            <span class="type">ReferCategoryStruct</span> <span class="variable">categoryStruct</span> <span class="operator">=</span> ReferCategoryContainer.getInstance().getSpecifiedElement(categoryID);</span><br><span class="line">            <span class="keyword">if</span> (categoryStruct == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">LogCategory</span> <span class="variable">category</span> <span class="operator">=</span> categoryStruct.getCategory();</span><br><span class="line">                <span class="keyword">if</span> (category.getLogDoc(doc_name) != <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (isOverwritten == <span class="number">0</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    category.deleteLogging(doc_name);</span><br><span class="line">                    categoryStruct.removeDocElement(doc_name);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="type">LogDocument</span> <span class="variable">doc</span> <span class="operator">=</span> category.createDocument(doc_name);</span><br><span class="line">                <span class="keyword">if</span> (doc == <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="type">ReferDocStruct</span> <span class="variable">docStruct</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ReferDocStruct</span>(doc_name, doc);</span><br><span class="line">                    categoryStruct.addDocElement(docStruct);</span><br><span class="line">                    categoryStruct.isModified = <span class="literal">true</span>;</span><br><span class="line">                    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">createDocument</span><span class="params">(<span class="type">int</span> categoryID, String docName, String srcFilePath, <span class="type">int</span> isOverwritten)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (categoryID &gt;= <span class="number">1</span> &amp;&amp; docName != <span class="literal">null</span> &amp;&amp; !docName.trim().isEmpty() &amp;&amp; srcFilePath != <span class="literal">null</span> &amp;&amp; !srcFilePath.trim().isEmpty()) &#123;</span><br><span class="line">            <span class="type">ReferCategoryStruct</span> <span class="variable">categoryStruct</span> <span class="operator">=</span> ReferCategoryContainer.getInstance().getSpecifiedElement(categoryID);</span><br><span class="line">            <span class="keyword">if</span> (categoryStruct == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">File</span> <span class="variable">srcFile</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(srcFilePath.trim());</span><br><span class="line">                <span class="keyword">if</span> (srcFile.exists() &amp;&amp; srcFile.isFile()) &#123;</span><br><span class="line">                    <span class="type">String</span> <span class="variable">doc_name</span> <span class="operator">=</span> docName.trim();</span><br><span class="line">                    <span class="type">LogCategory</span> <span class="variable">category</span> <span class="operator">=</span> categoryStruct.getCategory();</span><br><span class="line">                    <span class="keyword">if</span> (category == <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="keyword">if</span> (category.getLogDoc(doc_name) != <span class="literal">null</span>) &#123;</span><br><span class="line">                            <span class="keyword">if</span> (isOverwritten == <span class="number">0</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            category.deleteLogging(doc_name);</span><br><span class="line">                            categoryStruct.removeDocElement(doc_name);</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        <span class="type">boolean</span> <span class="variable">retCode</span> <span class="operator">=</span> category.createDocument(doc_name, srcFilePath);</span><br><span class="line">                        <span class="keyword">if</span> (!retCode) &#123;</span><br><span class="line">                            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            <span class="type">ReferDocStruct</span> <span class="variable">docStruct</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ReferDocStruct</span>(doc_name, category.getLogDoc(doc_name));</span><br><span class="line">                            categoryStruct.addDocElement(docStruct);</span><br><span class="line">                            categoryStruct.isModified = <span class="literal">true</span>;</span><br><span class="line">                            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">readDocument</span><span class="params">(<span class="type">int</span> categoryID, String docName, <span class="type">int</span> offset, <span class="type">int</span> byteSize, <span class="type">byte</span>[] buffer)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (categoryID &gt;= <span class="number">1</span> &amp;&amp; docName != <span class="literal">null</span> &amp;&amp; !docName.trim().isEmpty()) &#123;</span><br><span class="line">            <span class="type">ReferCategoryStruct</span> <span class="variable">categoryStruct</span> <span class="operator">=</span> ReferCategoryContainer.getInstance().getSpecifiedElement(categoryID);</span><br><span class="line">            <span class="keyword">if</span> (categoryStruct == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">doc_name</span> <span class="operator">=</span> docName.trim();</span><br><span class="line">                <span class="type">ReferDocStruct</span> <span class="variable">docStruct</span> <span class="operator">=</span> categoryStruct.getSpecifiedDocElement(doc_name);</span><br><span class="line">                <span class="keyword">if</span> (docStruct != <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> docStruct.doc.readDoc((<span class="type">long</span>)offset, byteSize, buffer);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="type">LogCategory</span> <span class="variable">category</span> <span class="operator">=</span> categoryStruct.getCategory();</span><br><span class="line">                    <span class="keyword">if</span> (category == <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="type">LogDocument</span> <span class="variable">document</span> <span class="operator">=</span> category.getLogDoc(doc_name);</span><br><span class="line">                        <span class="keyword">if</span> (document == <span class="literal">null</span>) &#123;</span><br><span class="line">                            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            docStruct = <span class="keyword">new</span> <span class="title class_">ReferDocStruct</span>(doc_name, document);</span><br><span class="line">                            categoryStruct.addDocElement(docStruct);</span><br><span class="line">                            <span class="keyword">return</span> document.readDoc((<span class="type">long</span>)offset, byteSize, buffer);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">readDocument</span><span class="params">(<span class="type">int</span> categoryID, String docName, String desFilePath)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (categoryID &gt;= <span class="number">1</span> &amp;&amp; docName != <span class="literal">null</span> &amp;&amp; !docName.trim().isEmpty() &amp;&amp; desFilePath != <span class="literal">null</span> &amp;&amp; !desFilePath.trim().isEmpty()) &#123;</span><br><span class="line">            <span class="type">ReferCategoryStruct</span> <span class="variable">categoryStruct</span> <span class="operator">=</span> ReferCategoryContainer.getInstance().getSpecifiedElement(categoryID);</span><br><span class="line">            <span class="keyword">if</span> (categoryStruct == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">doc_name</span> <span class="operator">=</span> docName.trim();</span><br><span class="line">                <span class="type">ReferDocStruct</span> <span class="variable">docStruct</span> <span class="operator">=</span> categoryStruct.getSpecifiedDocElement(doc_name);</span><br><span class="line">                <span class="keyword">if</span> (docStruct != <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> docStruct.doc.readDoc(desFilePath.trim());</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="type">LogCategory</span> <span class="variable">category</span> <span class="operator">=</span> categoryStruct.getCategory();</span><br><span class="line">                    <span class="keyword">if</span> (category == <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="type">LogDocument</span> <span class="variable">document</span> <span class="operator">=</span> category.getLogDoc(doc_name);</span><br><span class="line">                        <span class="keyword">if</span> (document == <span class="literal">null</span>) &#123;</span><br><span class="line">                            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            docStruct = <span class="keyword">new</span> <span class="title class_">ReferDocStruct</span>(doc_name, document);</span><br><span class="line">                            categoryStruct.addDocElement(docStruct);</span><br><span class="line">                            <span class="keyword">return</span> document.readDoc(desFilePath.trim());</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">writeDocument</span><span class="params">(<span class="type">int</span> categoryID, String docName, <span class="type">int</span> offset, <span class="type">int</span> byteSize, <span class="type">byte</span>[] buffer)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (categoryID &gt;= <span class="number">1</span> &amp;&amp; docName != <span class="literal">null</span> &amp;&amp; !docName.trim().isEmpty() &amp;&amp; buffer != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="type">ReferCategoryStruct</span> <span class="variable">categoryStruct</span> <span class="operator">=</span> ReferCategoryContainer.getInstance().getSpecifiedElement(categoryID);</span><br><span class="line">            <span class="keyword">if</span> (categoryStruct == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">doc_name</span> <span class="operator">=</span> docName.trim();</span><br><span class="line">                <span class="type">int</span> <span class="variable">retCode</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">                <span class="type">ReferDocStruct</span> <span class="variable">docStruct</span> <span class="operator">=</span> categoryStruct.getSpecifiedDocElement(doc_name);</span><br><span class="line">                <span class="type">int</span> retCode;</span><br><span class="line">                <span class="keyword">if</span> (docStruct != <span class="literal">null</span>) &#123;</span><br><span class="line">                    retCode = docStruct.doc.writeDoc((<span class="type">long</span>)offset, byteSize, buffer);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="type">LogCategory</span> <span class="variable">category</span> <span class="operator">=</span> categoryStruct.getCategory();</span><br><span class="line">                    <span class="keyword">if</span> (category == <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="type">LogDocument</span> <span class="variable">document</span> <span class="operator">=</span> category.getLogDoc(doc_name);</span><br><span class="line">                    <span class="keyword">if</span> (document == <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    docStruct = <span class="keyword">new</span> <span class="title class_">ReferDocStruct</span>(doc_name, document);</span><br><span class="line">                    categoryStruct.addDocElement(docStruct);</span><br><span class="line">                    retCode = document.writeDoc((<span class="type">long</span>)offset, byteSize, buffer);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (retCode &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                    categoryStruct.isModified = <span class="literal">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">return</span> retCode;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="title function_">writeTableData</span><span class="params">(LogTable table, <span class="type">int</span> rowIndex, <span class="type">float</span>[] buffer)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">rowCount</span> <span class="operator">=</span> table.getRowCount();</span><br><span class="line">        <span class="type">TableRecords</span> <span class="variable">records</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TableRecords</span>();</span><br><span class="line">        <span class="type">int</span> <span class="variable">retCode</span> <span class="operator">=</span> table.readTableRecords(<span class="number">0</span>, rowCount, records);</span><br><span class="line">        <span class="keyword">if</span> (retCode != <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="type">TableFields</span> <span class="variable">fields</span> <span class="operator">=</span> records.getTableFields();</span><br><span class="line">            <span class="type">int</span> <span class="variable">value</span> <span class="operator">=</span> rowIndex - rowCount;</span><br><span class="line">            <span class="keyword">if</span> (value &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="type">TableRecords</span> <span class="variable">newRecords</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TableRecords</span>();</span><br><span class="line">                newRecords.init(value, fields);</span><br><span class="line">                records.appendTableRecords(newRecords);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="type">int</span> <span class="variable">bufLength</span> <span class="operator">=</span> buffer.length;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; fields.getFieldNum() &amp;&amp; bufLength &gt;= i + <span class="number">1</span>; ++i) &#123;</span><br><span class="line">                <span class="keyword">switch</span> (fields.getDataType(i)) &#123;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                        records.setRecordByteData(rowIndex - <span class="number">1</span>, i, (<span class="type">byte</span>)((<span class="type">int</span>)buffer[i]));</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                        records.setRecordShortData(rowIndex - <span class="number">1</span>, i, (<span class="type">short</span>)((<span class="type">int</span>)buffer[i]));</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                        records.setRecordIntData(rowIndex - <span class="number">1</span>, i, (<span class="type">int</span>)buffer[i]);</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">                        records.setRecordLongData(rowIndex - <span class="number">1</span>, i, (<span class="type">long</span>)buffer[i]);</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">                        records.setRecordFloatData(rowIndex - <span class="number">1</span>, i, buffer[i]);</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">11</span>:</span><br><span class="line">                        records.setRecordDoubleData(rowIndex - <span class="number">1</span>, i, (<span class="type">double</span>)buffer[i]);</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">10</span>:</span><br><span class="line">                    <span class="keyword">default</span>:</span><br><span class="line">                        records.setRecordStringData(rowIndex - <span class="number">1</span>, i, Float.toString(buffer[i]));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            table.writeTableRecords(records);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="title function_">writeTableData</span><span class="params">(LogTable table, <span class="type">int</span> rowIndex, <span class="type">int</span> columnIndex, String buffer)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">rowCount</span> <span class="operator">=</span> table.getRowCount();</span><br><span class="line">        <span class="type">int</span> <span class="variable">columnCount</span> <span class="operator">=</span> table.getColumnCount();</span><br><span class="line">        <span class="keyword">if</span> (columnIndex &gt; columnCount) &#123;</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="type">TableRecords</span> <span class="variable">records</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TableRecords</span>();</span><br><span class="line">            <span class="type">int</span> <span class="variable">retCode</span> <span class="operator">=</span> table.readTableRecords(<span class="number">0</span>, rowCount, records);</span><br><span class="line">            <span class="keyword">if</span> (retCode != <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">TableFields</span> <span class="variable">fields</span> <span class="operator">=</span> records.getTableFields();</span><br><span class="line">                <span class="type">int</span> <span class="variable">value</span> <span class="operator">=</span> rowIndex - rowCount;</span><br><span class="line">                <span class="keyword">if</span> (value &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="type">TableRecords</span> <span class="variable">newRecords</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TableRecords</span>();</span><br><span class="line">                    newRecords.init(value, fields);</span><br><span class="line">                    records.appendTableRecords(newRecords);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">switch</span> (fields.getDataType(columnIndex - <span class="number">1</span>)) &#123;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                        <span class="keyword">try</span> &#123;</span><br><span class="line">                            records.setRecordByteData(rowIndex - <span class="number">1</span>, columnIndex - <span class="number">1</span>, Byte.parseByte(buffer));</span><br><span class="line">                        &#125; <span class="keyword">catch</span> (NumberFormatException var17) &#123;</span><br><span class="line">                            records.setRecordByteData(rowIndex - <span class="number">1</span>, columnIndex - <span class="number">1</span>, (<span class="type">byte</span>)-<span class="number">128</span>);</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                        <span class="keyword">try</span> &#123;</span><br><span class="line">                            records.setRecordShortData(rowIndex - <span class="number">1</span>, columnIndex - <span class="number">1</span>, Short.parseShort(buffer));</span><br><span class="line">                        &#125; <span class="keyword">catch</span> (NumberFormatException var16) &#123;</span><br><span class="line">                            records.setRecordShortData(rowIndex - <span class="number">1</span>, columnIndex - <span class="number">1</span>, (<span class="type">short</span>)-<span class="number">32767</span>);</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                        <span class="keyword">try</span> &#123;</span><br><span class="line">                            records.setRecordIntData(rowIndex - <span class="number">1</span>, columnIndex - <span class="number">1</span>, Integer.parseInt(buffer));</span><br><span class="line">                        &#125; <span class="keyword">catch</span> (NumberFormatException var15) &#123;</span><br><span class="line">                            records.setRecordIntData(rowIndex - <span class="number">1</span>, columnIndex - <span class="number">1</span>, -<span class="number">99999</span>);</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">                        <span class="keyword">try</span> &#123;</span><br><span class="line">                            records.setRecordLongData(rowIndex - <span class="number">1</span>, columnIndex - <span class="number">1</span>, Long.parseLong(buffer));</span><br><span class="line">                        &#125; <span class="keyword">catch</span> (NumberFormatException var14) &#123;</span><br><span class="line">                            records.setRecordLongData(rowIndex - <span class="number">1</span>, columnIndex - <span class="number">1</span>, -<span class="number">99999L</span>);</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">                        <span class="keyword">try</span> &#123;</span><br><span class="line">                            records.setRecordFloatData(rowIndex - <span class="number">1</span>, columnIndex - <span class="number">1</span>, Float.parseFloat(buffer));</span><br><span class="line">                        &#125; <span class="keyword">catch</span> (NumberFormatException var13) &#123;</span><br><span class="line">                            records.setRecordFloatData(rowIndex - <span class="number">1</span>, columnIndex - <span class="number">1</span>, -<span class="number">99999.0F</span>);</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">11</span>:</span><br><span class="line">                        <span class="keyword">try</span> &#123;</span><br><span class="line">                            records.setRecordDoubleData(rowIndex - <span class="number">1</span>, columnIndex - <span class="number">1</span>, Double.parseDouble(buffer));</span><br><span class="line">                        &#125; <span class="keyword">catch</span> (NumberFormatException var12) &#123;</span><br><span class="line">                            records.setRecordDoubleData(rowIndex - <span class="number">1</span>, columnIndex - <span class="number">1</span>, -<span class="number">99999.0</span>);</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">12</span>:</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">13</span>:</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">14</span>:</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">15</span>:</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">16</span>:</span><br><span class="line">                        records.setRecordStringData(rowIndex - <span class="number">1</span>, columnIndex - <span class="number">1</span>, buffer);</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">10</span>:</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                table.writeTableRecords(records);</span><br><span class="line">                <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="title function_">writeTableData</span><span class="params">(LogTable table, <span class="type">int</span> rowIndex, String[] buffer)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">rowCount</span> <span class="operator">=</span> table.getRowCount();</span><br><span class="line">        <span class="type">TableRecords</span> <span class="variable">records</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TableRecords</span>();</span><br><span class="line">        <span class="type">int</span> <span class="variable">retCode</span> <span class="operator">=</span> table.readTableRecords(<span class="number">0</span>, rowCount, records);</span><br><span class="line">        <span class="keyword">if</span> (retCode != <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="type">TableFields</span> <span class="variable">fields</span> <span class="operator">=</span> records.getTableFields();</span><br><span class="line">            <span class="type">int</span> <span class="variable">value</span> <span class="operator">=</span> rowIndex - rowCount;</span><br><span class="line">            <span class="keyword">if</span> (value &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="type">TableRecords</span> <span class="variable">newRecords</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TableRecords</span>();</span><br><span class="line">                newRecords.init(value, fields);</span><br><span class="line">                records.appendTableRecords(newRecords);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="type">int</span> <span class="variable">bufLength</span> <span class="operator">=</span> buffer.length;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; fields.getFieldNum() &amp;&amp; bufLength &gt;= i + <span class="number">1</span>; ++i) &#123;</span><br><span class="line">                <span class="keyword">switch</span> (fields.getDataType(i)) &#123;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                        <span class="keyword">try</span> &#123;</span><br><span class="line">                            records.setRecordByteData(rowIndex - <span class="number">1</span>, i, Byte.parseByte(buffer[i]));</span><br><span class="line">                        &#125; <span class="keyword">catch</span> (NumberFormatException var17) &#123;</span><br><span class="line">                            records.setRecordByteData(rowIndex - <span class="number">1</span>, i, (<span class="type">byte</span>)-<span class="number">128</span>);</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                        <span class="keyword">try</span> &#123;</span><br><span class="line">                            records.setRecordShortData(rowIndex - <span class="number">1</span>, i, Short.parseShort(buffer[i]));</span><br><span class="line">                        &#125; <span class="keyword">catch</span> (NumberFormatException var16) &#123;</span><br><span class="line">                            records.setRecordShortData(rowIndex - <span class="number">1</span>, i, (<span class="type">short</span>)-<span class="number">32767</span>);</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                        <span class="keyword">try</span> &#123;</span><br><span class="line">                            records.setRecordIntData(rowIndex - <span class="number">1</span>, i, Integer.parseInt(buffer[i]));</span><br><span class="line">                        &#125; <span class="keyword">catch</span> (NumberFormatException var15) &#123;</span><br><span class="line">                            records.setRecordIntData(rowIndex - <span class="number">1</span>, i, -<span class="number">99999</span>);</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">                        <span class="keyword">try</span> &#123;</span><br><span class="line">                            records.setRecordLongData(rowIndex - <span class="number">1</span>, i, Long.parseLong(buffer[i]));</span><br><span class="line">                        &#125; <span class="keyword">catch</span> (NumberFormatException var14) &#123;</span><br><span class="line">                            records.setRecordLongData(rowIndex - <span class="number">1</span>, i, -<span class="number">99999L</span>);</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">                        <span class="keyword">try</span> &#123;</span><br><span class="line">                            records.setRecordFloatData(rowIndex - <span class="number">1</span>, i, Float.parseFloat(buffer[i]));</span><br><span class="line">                        &#125; <span class="keyword">catch</span> (NumberFormatException var13) &#123;</span><br><span class="line">                            records.setRecordFloatData(rowIndex - <span class="number">1</span>, i, -<span class="number">99999.0F</span>);</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">11</span>:</span><br><span class="line">                        <span class="keyword">try</span> &#123;</span><br><span class="line">                            records.setRecordDoubleData(rowIndex - <span class="number">1</span>, i, Double.parseDouble(buffer[i]));</span><br><span class="line">                        &#125; <span class="keyword">catch</span> (NumberFormatException var12) &#123;</span><br><span class="line">                            records.setRecordDoubleData(rowIndex - <span class="number">1</span>, i, -<span class="number">99999.0</span>);</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">12</span>:</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">13</span>:</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">14</span>:</span><br><span class="line">                        records.setRecordStringData(rowIndex - <span class="number">1</span>, i, buffer[i]);</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">10</span>:</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">15</span>:</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">16</span>:</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            table.writeTableRecords(records);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="title function_">readTableData</span><span class="params">(LogTable table, <span class="type">int</span> rowIndex, <span class="type">float</span>[] buffer)</span> &#123;</span><br><span class="line">        <span class="type">TableRecords</span> <span class="variable">records</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TableRecords</span>();</span><br><span class="line">        <span class="type">int</span> <span class="variable">retCode</span> <span class="operator">=</span> table.readTableRecords(rowIndex - <span class="number">1</span>, <span class="number">1</span>, records);</span><br><span class="line">        <span class="keyword">if</span> (retCode != <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="type">TableFields</span> <span class="variable">fields</span> <span class="operator">=</span> records.getTableFields();</span><br><span class="line">            <span class="type">int</span> <span class="variable">bufLength</span> <span class="operator">=</span> buffer.length;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; fields.getFieldNum() &amp;&amp; bufLength &gt;= i + <span class="number">1</span>; ++i) &#123;</span><br><span class="line">                <span class="keyword">switch</span> (fields.getDataType(i)) &#123;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                        buffer[i] = (<span class="type">float</span>)records.getRecordByteData(<span class="number">0</span>, i);</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                        buffer[i] = (<span class="type">float</span>)records.getRecordShortData(<span class="number">0</span>, i);</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                        buffer[i] = (<span class="type">float</span>)records.getRecordIntData(<span class="number">0</span>, i);</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">                        buffer[i] = (<span class="type">float</span>)records.getRecordLongData(<span class="number">0</span>, i);</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">                        buffer[i] = records.getRecordFloatData(<span class="number">0</span>, i);</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">11</span>:</span><br><span class="line">                        buffer[i] = (<span class="type">float</span>)records.getRecordDoubleData(<span class="number">0</span>, i);</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">10</span>:</span><br><span class="line">                    <span class="keyword">default</span>:</span><br><span class="line">                        buffer[i] = -<span class="number">99999.0F</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="title function_">readTableData</span><span class="params">(LogTable table, <span class="type">int</span> rowIndex, String[] buffer)</span> &#123;</span><br><span class="line">        <span class="type">TableRecords</span> <span class="variable">records</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TableRecords</span>();</span><br><span class="line">        <span class="type">int</span> <span class="variable">retCode</span> <span class="operator">=</span> table.readTableRecords(rowIndex - <span class="number">1</span>, <span class="number">1</span>, records);</span><br><span class="line">        <span class="keyword">if</span> (retCode != <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="type">TableFields</span> <span class="variable">fields</span> <span class="operator">=</span> records.getTableFields();</span><br><span class="line">            <span class="type">int</span> <span class="variable">bufLength</span> <span class="operator">=</span> buffer.length;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; fields.getFieldNum() &amp;&amp; bufLength &gt;= i + <span class="number">1</span>; ++i) &#123;</span><br><span class="line">                <span class="keyword">switch</span> (fields.getDataType(i)) &#123;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                        buffer[i] = Byte.toString(records.getRecordByteData(<span class="number">0</span>, i));</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                        buffer[i] = Short.toString(records.getRecordShortData(<span class="number">0</span>, i));</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                        buffer[i] = Integer.toString(records.getRecordIntData(<span class="number">0</span>, i));</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">                        buffer[i] = Long.toString(records.getRecordLongData(<span class="number">0</span>, i));</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">                        buffer[i] = Float.toString(records.getRecordFloatData(<span class="number">0</span>, i));</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">11</span>:</span><br><span class="line">                        buffer[i] = Double.toString(records.getRecordDoubleData(<span class="number">0</span>, i));</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">10</span>:</span><br><span class="line">                    <span class="keyword">default</span>:</span><br><span class="line">                        buffer[i] = records.getRecordStringData(<span class="number">0</span>, i);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">addWellNotification</span><span class="params">(LogWell well, <span class="type">int</span> notifyType)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">wsPath</span> <span class="operator">=</span> (<span class="keyword">new</span> <span class="title class_">DataPath</span>(well.getLogWorkSpace())).toString();</span><br><span class="line">        <span class="type">NotificationStruct</span> <span class="variable">infoStruct</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">wellName</span> <span class="operator">=</span> well.getWellName();</span><br><span class="line">        <span class="type">WellNotifiedInfo</span> <span class="variable">wellInfo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">WellNotifiedInfo</span>(wellName, notifyType);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="built_in">this</span>.wellNotificationList.size(); ++i) &#123;</span><br><span class="line">            infoStruct = (NotificationStruct)<span class="built_in">this</span>.wellNotificationList.get(i);</span><br><span class="line">            <span class="keyword">if</span> (infoStruct.getDataPath().equalsIgnoreCase(wsPath) &amp;&amp; !infoStruct.contains(wellName)) &#123;</span><br><span class="line">                infoStruct.addNotifiedInfo(wellInfo);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        infoStruct = <span class="keyword">new</span> <span class="title class_">NotificationStruct</span>(wsPath);</span><br><span class="line">        infoStruct.addNotifiedInfo(wellInfo);</span><br><span class="line">        <span class="built_in">this</span>.wellNotificationList.add(infoStruct);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">addCategoryNotification</span><span class="params">(ReferCategoryStruct categoryStruct, <span class="type">int</span> notifyType)</span> &#123;</span><br><span class="line">        categoryStruct.isModified = <span class="literal">false</span>;</span><br><span class="line">        <span class="type">LogCategory</span> <span class="variable">category</span> <span class="operator">=</span> categoryStruct.getCategory();</span><br><span class="line">        <span class="type">String</span> <span class="variable">wellPath</span> <span class="operator">=</span> (<span class="keyword">new</span> <span class="title class_">DataPath</span>(category.getLogWell())).toString();</span><br><span class="line">        <span class="type">NotificationStruct</span> <span class="variable">infoStruct</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">categoryName</span> <span class="operator">=</span> category.getCategoryName();</span><br><span class="line">        <span class="type">CategoryNotifiedInfo</span> <span class="variable">categoryInfo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CategoryNotifiedInfo</span>(categoryName, notifyType);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="built_in">this</span>.categoryNotificationList.size(); ++i) &#123;</span><br><span class="line">            infoStruct = (NotificationStruct)<span class="built_in">this</span>.categoryNotificationList.get(i);</span><br><span class="line">            <span class="keyword">if</span> (infoStruct.getDataPath().equalsIgnoreCase(wellPath) &amp;&amp; !infoStruct.contains(categoryName)) &#123;</span><br><span class="line">                infoStruct.addNotifiedInfo(categoryInfo);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        infoStruct = <span class="keyword">new</span> <span class="title class_">NotificationStruct</span>(wellPath);</span><br><span class="line">        infoStruct.addNotifiedInfo(categoryInfo);</span><br><span class="line">        <span class="built_in">this</span>.categoryNotificationList.add(infoStruct);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> LogCurve <span class="title function_">copyCurveAction</span><span class="params">(LogCategory category, LogCurve srcCurve, String desCurveName)</span> &#123;</span><br><span class="line">        <span class="type">LoggingProperties</span> <span class="variable">properties</span> <span class="operator">=</span> srcCurve.getLoggingProperties();</span><br><span class="line">        <span class="type">byte</span> <span class="variable">curveType</span> <span class="operator">=</span> properties.getLoggingType();</span><br><span class="line">        <span class="type">double</span> <span class="variable">startDep</span> <span class="operator">=</span> properties.getStartDepth();</span><br><span class="line">        <span class="type">double</span> <span class="variable">depthLevel</span> <span class="operator">=</span> properties.getDepthLevel();</span><br><span class="line">        <span class="type">int</span> <span class="variable">dataCount</span> <span class="operator">=</span> (<span class="type">int</span>)((properties.getEndDepth() - startDep) / depthLevel + <span class="number">1.5</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">readCount</span> <span class="operator">=</span> <span class="built_in">this</span>.computReadRowCount(curveType, properties);</span><br><span class="line">        <span class="type">int</span> <span class="variable">readingNum</span> <span class="operator">=</span> readCount &gt; dataCount ? dataCount : readCount;</span><br><span class="line">        <span class="type">int</span> <span class="variable">indexToRead</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">double</span> <span class="variable">readDep</span> <span class="operator">=</span> startDep;</span><br><span class="line">        <span class="type">LogCurve</span> <span class="variable">newCurve</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">switch</span> (curveType) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                <span class="type">Curve1D</span> <span class="variable">curve1D</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Curve1D</span>();</span><br><span class="line">                curve1D.getInfoFromLoggingProperties(properties);</span><br><span class="line">                curve1D.setCurveName(desCurveName);</span><br><span class="line">                newCurve = (LogCurve1D)category.createCurve(curve1D);</span><br><span class="line">                <span class="type">double</span>[] data1D = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">for</span>(<span class="type">LogCurve1D</span> <span class="variable">oldCurve1D</span> <span class="operator">=</span> (LogCurve1D)srcCurve; indexToRead &lt; dataCount; readDep += (<span class="type">double</span>)readingNum * depthLevel) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (dataCount - indexToRead &lt; readingNum) &#123;</span><br><span class="line">                        readingNum = dataCount - indexToRead;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="type">double</span>[] data1D = <span class="keyword">new</span> <span class="title class_">double</span>[readingNum];</span><br><span class="line">                    oldCurve1D.readData(readDep, readingNum, data1D, (ReadMode)<span class="literal">null</span>);</span><br><span class="line">                    ((LogCurve1D)newCurve).writeData(readDep, readingNum, data1D, (WriteMode)<span class="literal">null</span>);</span><br><span class="line">                    indexToRead += readingNum;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                ((LogCurve)newCurve).flush();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                <span class="type">Curve2D</span> <span class="variable">curve2D</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Curve2D</span>();</span><br><span class="line">                curve2D.getInfoFromLoggingProperties(properties);</span><br><span class="line">                curve2D.setCurveName(desCurveName);</span><br><span class="line">                newCurve = (LogCurve2D)category.createCurve(curve2D);</span><br><span class="line">                <span class="type">double</span>[][] data2D = (<span class="type">double</span>[][])<span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">for</span>(<span class="type">LogCurve2D</span> <span class="variable">oldCurve2D</span> <span class="operator">=</span> (LogCurve2D)srcCurve; indexToRead &lt; dataCount; readDep += (<span class="type">double</span>)readingNum * depthLevel) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (dataCount - indexToRead &lt; readingNum) &#123;</span><br><span class="line">                        readingNum = dataCount - indexToRead;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    data2D = <span class="keyword">new</span> <span class="title class_">double</span>[readingNum][properties.getTimeSampleNum()];</span><br><span class="line">                    oldCurve2D.readData(readDep, readingNum, data2D, (ReadMode)<span class="literal">null</span>);</span><br><span class="line">                    ((LogCurve2D)newCurve).writeData(readDep, readingNum, data2D, (WriteMode)<span class="literal">null</span>);</span><br><span class="line">                    indexToRead += readingNum;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                ((LogCurve)newCurve).flush();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                <span class="type">Curve3D</span> <span class="variable">curve3D</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Curve3D</span>();</span><br><span class="line">                curve3D.getInfoFromLoggingProperties(properties);</span><br><span class="line">                curve3D.setCurveName(desCurveName);</span><br><span class="line">                newCurve = (LogCurve3D)category.createCurve(curve3D);</span><br><span class="line">                <span class="type">double</span>[][][] data3D = (<span class="type">double</span>[][][])<span class="literal">null</span>;</span><br><span class="line">                <span class="type">double</span>[][] data = (<span class="type">double</span>[][])<span class="literal">null</span>;</span><br><span class="line">                <span class="type">int</span> <span class="variable">X2Nps</span> <span class="operator">=</span> properties.getArrayNum();</span><br><span class="line">                <span class="type">int</span> <span class="variable">X3Npw</span> <span class="operator">=</span> properties.getTimeSampleNum();</span><br><span class="line"></span><br><span class="line">                <span class="keyword">for</span>(<span class="type">LogCurve3D</span> <span class="variable">oldCurve3D</span> <span class="operator">=</span> (LogCurve3D)srcCurve; indexToRead &lt; dataCount; readDep += (<span class="type">double</span>)readingNum * depthLevel) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (dataCount - indexToRead &lt; readingNum) &#123;</span><br><span class="line">                        readingNum = dataCount - indexToRead;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    data3D = <span class="keyword">new</span> <span class="title class_">double</span>[readingNum][X2Nps][X3Npw];</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; X2Nps; ++i) &#123;</span><br><span class="line">                        data = <span class="keyword">new</span> <span class="title class_">double</span>[readingNum][X3Npw];</span><br><span class="line">                        oldCurve3D.readData(readDep, readingNum, i, data, (ReadMode)<span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; readingNum; ++j) &#123;</span><br><span class="line">                            System.arraycopy(data[j], <span class="number">0</span>, data3D[j][i], <span class="number">0</span>, X3Npw);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    ((LogCurve3D)newCurve).writeDataWithoutBuffer(readDep, readingNum, data3D, (WriteMode)<span class="literal">null</span>);</span><br><span class="line">                    indexToRead += readingNum;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                ((LogCurve)newCurve).flush();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> (LogCurve)newCurve;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">dispatchNotification</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">MessageCommunicationClient</span> <span class="variable">client</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MessageCommunicationClient</span>();</span><br><span class="line">        <span class="keyword">if</span> (client.connectToServer()) &#123;</span><br><span class="line">            <span class="type">NotificationMessage</span> <span class="variable">message</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">this</span>.wellNotificationList.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                message = <span class="keyword">new</span> <span class="title class_">NotificationMessage</span>();</span><br><span class="line">                message.setCommmand(<span class="number">2</span>);</span><br><span class="line">                message.setNotificationList(<span class="built_in">this</span>.wellNotificationList);</span><br><span class="line">                client.sendMessage(message);</span><br><span class="line">                <span class="built_in">this</span>.wellNotificationList.clear();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="type">ReferCategoryStruct</span> <span class="variable">categoryStruct</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; ReferCategoryContainer.getInstance().size(); ++i) &#123;</span><br><span class="line">                categoryStruct = ReferCategoryContainer.getInstance().elemenAt(i);</span><br><span class="line">                <span class="keyword">if</span> (categoryStruct.isModified) &#123;</span><br><span class="line">                    <span class="built_in">this</span>.addCategoryNotification(ReferCategoryContainer.getInstance().elemenAt(i), <span class="number">2</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">this</span>.categoryNotificationList.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                message = <span class="keyword">new</span> <span class="title class_">NotificationMessage</span>();</span><br><span class="line">                message.setCommmand(<span class="number">3</span>);</span><br><span class="line">                message.setNotificationList(<span class="built_in">this</span>.categoryNotificationList);</span><br><span class="line">                client.sendMessage(message);</span><br><span class="line">                <span class="built_in">this</span>.categoryNotificationList.clear();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            message = <span class="keyword">new</span> <span class="title class_">NotificationMessage</span>();</span><br><span class="line">            message.setCommmand(<span class="number">1</span>);</span><br><span class="line">            client.sendMessage(message);</span><br><span class="line">            <span class="keyword">if</span> (client != <span class="literal">null</span>) &#123;</span><br><span class="line">                client.disconnect();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="title function_">writeCurve_3D</span><span class="params">(<span class="type">int</span> categoryID, String curveName, <span class="type">int</span> arrayIndex, <span class="type">double</span> startDepth, <span class="type">int</span> dataCount, <span class="type">int</span> arraySize, <span class="type">float</span>[] buffer)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (categoryID &gt;= <span class="number">1</span> &amp;&amp; dataCount &gt;= <span class="number">1</span> &amp;&amp; buffer != <span class="literal">null</span> &amp;&amp; curveName != <span class="literal">null</span> &amp;&amp; !curveName.trim().isEmpty()) &#123;</span><br><span class="line">            <span class="type">ReferCategoryStruct</span> <span class="variable">categoryStruct</span> <span class="operator">=</span> ReferCategoryContainer.getInstance().getSpecifiedElement(categoryID);</span><br><span class="line">            <span class="keyword">if</span> (categoryStruct == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">curve_name</span> <span class="operator">=</span> curveName.trim();</span><br><span class="line">                <span class="type">int</span> <span class="variable">retCode</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">                <span class="type">ReferCurveStruct</span> <span class="variable">curveStruct</span> <span class="operator">=</span> categoryStruct.getSpecifiedCurveElement(curve_name);</span><br><span class="line">                <span class="type">LogCurve3D</span> <span class="variable">curve</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">                <span class="type">int</span> retCode;</span><br><span class="line">                <span class="keyword">if</span> (curveStruct != <span class="literal">null</span>) &#123;</span><br><span class="line">                    curve = (LogCurve3D)curveStruct.curve;</span><br><span class="line">                    <span class="type">float</span>[][] data = <span class="keyword">new</span> <span class="title class_">float</span>[dataCount][arraySize];</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; dataCount; ++i) &#123;</span><br><span class="line">                        System.arraycopy(buffer, i * arraySize, data[i], <span class="number">0</span>, arraySize);</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    retCode = curve.writeData(startDepth, arrayIndex, dataCount, data, (WriteMode)<span class="literal">null</span>);</span><br><span class="line">                    <span class="keyword">if</span> (retCode &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                        categoryStruct.isModified = <span class="literal">true</span>;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">return</span> retCode;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="type">LogCategory</span> <span class="variable">category</span> <span class="operator">=</span> categoryStruct.getCategory();</span><br><span class="line">                    <span class="keyword">if</span> (category == <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        curve = category.getLogCurve3D(curve_name);</span><br><span class="line">                        <span class="keyword">if</span> (curve == <span class="literal">null</span>) &#123;</span><br><span class="line">                            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            curveStruct = <span class="keyword">new</span> <span class="title class_">ReferCurveStruct</span>(curve_name, curve);</span><br><span class="line">                            categoryStruct.addCurveElement(curveStruct);</span><br><span class="line">                            <span class="type">float</span>[][] data = <span class="keyword">new</span> <span class="title class_">float</span>[dataCount][arraySize];</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; dataCount; ++i) &#123;</span><br><span class="line">                                System.arraycopy(buffer, i * arraySize, data[i], <span class="number">0</span>, arraySize);</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            retCode = curve.writeData(startDepth, arrayIndex, dataCount, data, (WriteMode)<span class="literal">null</span>);</span><br><span class="line">                            <span class="keyword">if</span> (retCode == <span class="number">0</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                                categoryStruct.isModified = <span class="literal">true</span>;</span><br><span class="line">                                <span class="keyword">return</span> retCode;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="title function_">readCurve_3D</span><span class="params">(<span class="type">int</span> categoryID, String curveName, <span class="type">int</span> arrayIndex, <span class="type">double</span> startDepth, <span class="type">double</span> depthLevel, <span class="type">int</span> upwardCount, <span class="type">int</span> downWardCount, <span class="type">int</span> arraySize, <span class="type">float</span>[] buffer, ReadMode readMode)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (categoryID &gt;= <span class="number">1</span> &amp;&amp; upwardCount &gt;= <span class="number">0</span> &amp;&amp; downWardCount &gt;= <span class="number">0</span> &amp;&amp; buffer != <span class="literal">null</span> &amp;&amp; curveName != <span class="literal">null</span> &amp;&amp; !curveName.trim().isEmpty()) &#123;</span><br><span class="line">            <span class="type">ReferCategoryStruct</span> <span class="variable">categoryStruct</span> <span class="operator">=</span> ReferCategoryContainer.getInstance().getSpecifiedElement(categoryID);</span><br><span class="line">            <span class="keyword">if</span> (categoryStruct == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">curve_name</span> <span class="operator">=</span> curveName.trim();</span><br><span class="line">                <span class="type">int</span> <span class="variable">dataCount</span> <span class="operator">=</span> upwardCount + downWardCount + <span class="number">1</span>;</span><br><span class="line">                <span class="type">ReferCurveStruct</span> <span class="variable">curveStruct</span> <span class="operator">=</span> categoryStruct.getSpecifiedCurveElement(curve_name);</span><br><span class="line">                <span class="type">LogCurve3D</span> <span class="variable">curve</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">                <span class="type">int</span> retCode;</span><br><span class="line">                <span class="keyword">if</span> (curveStruct != <span class="literal">null</span>) &#123;</span><br><span class="line">                    curve = (LogCurve3D)curveStruct.curve;</span><br><span class="line">                    <span class="type">float</span>[][] data = <span class="keyword">new</span> <span class="title class_">float</span>[dataCount][arraySize];</span><br><span class="line">                    <span class="type">int</span> <span class="variable">retCode</span> <span class="operator">=</span> curve.readData(startDepth, depthLevel, upwardCount, downWardCount, arrayIndex, data, readMode);</span><br><span class="line">                    <span class="keyword">if</span> (retCode &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                        <span class="keyword">for</span>(retCode = <span class="number">0</span>; retCode &lt; retCode; ++retCode) &#123;</span><br><span class="line">                            System.arraycopy(data[retCode], <span class="number">0</span>, buffer, retCode * arraySize, arraySize);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">return</span> retCode;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="type">LogCategory</span> <span class="variable">category</span> <span class="operator">=</span> categoryStruct.getCategory();</span><br><span class="line">                    <span class="keyword">if</span> (category == <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        curve = category.getLogCurve3D(curve_name);</span><br><span class="line">                        <span class="keyword">if</span> (curve == <span class="literal">null</span>) &#123;</span><br><span class="line">                            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            curveStruct = <span class="keyword">new</span> <span class="title class_">ReferCurveStruct</span>(curve_name, curve);</span><br><span class="line">                            categoryStruct.addCurveElement(curveStruct);</span><br><span class="line">                            <span class="type">float</span>[][] data = <span class="keyword">new</span> <span class="title class_">float</span>[dataCount][arraySize];</span><br><span class="line">                            retCode = curve.readData(startDepth, depthLevel, upwardCount, downWardCount, arrayIndex, data, readMode);</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; retCode; ++i) &#123;</span><br><span class="line">                                System.arraycopy(data[i], <span class="number">0</span>, buffer, i * arraySize, arraySize);</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">return</span> retCode;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="title function_">readCurve_3D</span><span class="params">(<span class="type">int</span> categoryID, String curveName, <span class="type">int</span> arrayIndex, <span class="type">double</span> startDepth, <span class="type">int</span> upwardCount, <span class="type">int</span> downWardCount, <span class="type">int</span> arraySize, <span class="type">float</span>[] buffer)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (categoryID &gt;= <span class="number">1</span> &amp;&amp; upwardCount &gt;= <span class="number">0</span> &amp;&amp; downWardCount &gt;= <span class="number">0</span> &amp;&amp; buffer != <span class="literal">null</span> &amp;&amp; curveName != <span class="literal">null</span> &amp;&amp; !curveName.trim().isEmpty()) &#123;</span><br><span class="line">            <span class="type">ReferCategoryStruct</span> <span class="variable">categoryStruct</span> <span class="operator">=</span> ReferCategoryContainer.getInstance().getSpecifiedElement(categoryID);</span><br><span class="line">            <span class="keyword">if</span> (categoryStruct == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">curve_name</span> <span class="operator">=</span> curveName.trim();</span><br><span class="line">                <span class="type">int</span> <span class="variable">dataCount</span> <span class="operator">=</span> upwardCount + downWardCount + <span class="number">1</span>;</span><br><span class="line">                <span class="type">ReferCurveStruct</span> <span class="variable">curveStruct</span> <span class="operator">=</span> categoryStruct.getSpecifiedCurveElement(curve_name);</span><br><span class="line">                <span class="type">LogCurve3D</span> <span class="variable">curve</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">                <span class="type">int</span> retCode;</span><br><span class="line">                <span class="keyword">if</span> (curveStruct != <span class="literal">null</span>) &#123;</span><br><span class="line">                    curve = (LogCurve3D)curveStruct.curve;</span><br><span class="line">                    <span class="type">float</span>[][] data = <span class="keyword">new</span> <span class="title class_">float</span>[dataCount][arraySize];</span><br><span class="line">                    <span class="type">int</span> <span class="variable">retCode</span> <span class="operator">=</span> curve.readData(startDepth, upwardCount, downWardCount, arrayIndex, data, (ReadMode)<span class="literal">null</span>);</span><br><span class="line">                    <span class="keyword">if</span> (retCode &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                        <span class="keyword">for</span>(retCode = <span class="number">0</span>; retCode &lt; retCode; ++retCode) &#123;</span><br><span class="line">                            System.arraycopy(data[retCode], <span class="number">0</span>, buffer, retCode * arraySize, arraySize);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">return</span> retCode;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="type">LogCategory</span> <span class="variable">category</span> <span class="operator">=</span> categoryStruct.getCategory();</span><br><span class="line">                    <span class="keyword">if</span> (category == <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        curve = category.getLogCurve3D(curve_name);</span><br><span class="line">                        <span class="keyword">if</span> (curve == <span class="literal">null</span>) &#123;</span><br><span class="line">                            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            curveStruct = <span class="keyword">new</span> <span class="title class_">ReferCurveStruct</span>(curve_name, curve);</span><br><span class="line">                            categoryStruct.addCurveElement(curveStruct);</span><br><span class="line">                            <span class="type">float</span>[][] data = <span class="keyword">new</span> <span class="title class_">float</span>[dataCount][arraySize];</span><br><span class="line">                            retCode = curve.readData(startDepth, upwardCount, downWardCount, arrayIndex, data, (ReadMode)<span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; retCode; ++i) &#123;</span><br><span class="line">                                System.arraycopy(data[i], <span class="number">0</span>, buffer, i * arraySize, arraySize);</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">return</span> retCode;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="title function_">readCurve_3D</span><span class="params">(<span class="type">int</span> categoryID, String curveName, <span class="type">int</span> arrayIndex, <span class="type">double</span> startDepth, <span class="type">double</span> depthLevel, <span class="type">int</span> dataCount, <span class="type">int</span> arraySize, <span class="type">float</span>[] buffer, ReadMode readMode)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (categoryID &gt;= <span class="number">1</span> &amp;&amp; dataCount &gt;= <span class="number">1</span> &amp;&amp; buffer != <span class="literal">null</span> &amp;&amp; curveName != <span class="literal">null</span> &amp;&amp; !curveName.trim().isEmpty()) &#123;</span><br><span class="line">            <span class="type">ReferCategoryStruct</span> <span class="variable">categoryStruct</span> <span class="operator">=</span> ReferCategoryContainer.getInstance().getSpecifiedElement(categoryID);</span><br><span class="line">            <span class="keyword">if</span> (categoryStruct == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">curve_name</span> <span class="operator">=</span> curveName.trim();</span><br><span class="line">                <span class="type">ReferCurveStruct</span> <span class="variable">curveStruct</span> <span class="operator">=</span> categoryStruct.getSpecifiedCurveElement(curve_name);</span><br><span class="line">                <span class="type">LogCurve3D</span> <span class="variable">curve</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">                <span class="type">int</span> retCode;</span><br><span class="line">                <span class="keyword">if</span> (curveStruct != <span class="literal">null</span>) &#123;</span><br><span class="line">                    curve = (LogCurve3D)curveStruct.curve;</span><br><span class="line">                    <span class="type">float</span>[][] data = <span class="keyword">new</span> <span class="title class_">float</span>[dataCount][arraySize];</span><br><span class="line">                    <span class="type">int</span> <span class="variable">retCode</span> <span class="operator">=</span> curve.readData(startDepth, depthLevel, dataCount, arrayIndex, data, readMode);</span><br><span class="line">                    <span class="keyword">if</span> (retCode &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                        <span class="keyword">for</span>(retCode = <span class="number">0</span>; retCode &lt; retCode; ++retCode) &#123;</span><br><span class="line">                            System.arraycopy(data[retCode], <span class="number">0</span>, buffer, retCode * arraySize, arraySize);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">return</span> retCode;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="type">LogCategory</span> <span class="variable">category</span> <span class="operator">=</span> categoryStruct.getCategory();</span><br><span class="line">                    <span class="keyword">if</span> (category == <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        curve = category.getLogCurve3D(curve_name);</span><br><span class="line">                        <span class="keyword">if</span> (curve == <span class="literal">null</span>) &#123;</span><br><span class="line">                            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            curveStruct = <span class="keyword">new</span> <span class="title class_">ReferCurveStruct</span>(curve_name, curve);</span><br><span class="line">                            categoryStruct.addCurveElement(curveStruct);</span><br><span class="line">                            <span class="type">float</span>[][] data = <span class="keyword">new</span> <span class="title class_">float</span>[dataCount][arraySize];</span><br><span class="line">                            retCode = curve.readData(startDepth, depthLevel, dataCount, arrayIndex, data, readMode);</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; retCode; ++i) &#123;</span><br><span class="line">                                System.arraycopy(data[i], <span class="number">0</span>, buffer, i * arraySize, arraySize);</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">return</span> retCode;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="title function_">readCurve_3D</span><span class="params">(<span class="type">int</span> categoryID, String curveName, <span class="type">int</span> arrayIndex, <span class="type">double</span> startDepth, <span class="type">int</span> dataCount, <span class="type">int</span> arraySize, <span class="type">float</span>[] buffer)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (categoryID &gt;= <span class="number">1</span> &amp;&amp; dataCount &gt;= <span class="number">1</span> &amp;&amp; buffer != <span class="literal">null</span> &amp;&amp; curveName != <span class="literal">null</span> &amp;&amp; !curveName.trim().isEmpty()) &#123;</span><br><span class="line">            <span class="type">ReferCategoryStruct</span> <span class="variable">categoryStruct</span> <span class="operator">=</span> ReferCategoryContainer.getInstance().getSpecifiedElement(categoryID);</span><br><span class="line">            <span class="keyword">if</span> (categoryStruct == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">curve_name</span> <span class="operator">=</span> curveName.trim();</span><br><span class="line">                <span class="type">ReferCurveStruct</span> <span class="variable">curveStruct</span> <span class="operator">=</span> categoryStruct.getSpecifiedCurveElement(curve_name);</span><br><span class="line">                <span class="type">LogCurve3D</span> <span class="variable">curve</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">                <span class="type">int</span> retCode;</span><br><span class="line">                <span class="keyword">if</span> (curveStruct != <span class="literal">null</span>) &#123;</span><br><span class="line">                    curve = (LogCurve3D)curveStruct.curve;</span><br><span class="line">                    <span class="type">float</span>[][] data = <span class="keyword">new</span> <span class="title class_">float</span>[dataCount][arraySize];</span><br><span class="line">                    <span class="type">int</span> <span class="variable">retCode</span> <span class="operator">=</span> curve.readData(startDepth, dataCount, arrayIndex, data, (ReadMode)<span class="literal">null</span>);</span><br><span class="line">                    <span class="keyword">if</span> (retCode &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                        <span class="keyword">for</span>(retCode = <span class="number">0</span>; retCode &lt; retCode; ++retCode) &#123;</span><br><span class="line">                            System.arraycopy(data[retCode], <span class="number">0</span>, buffer, retCode * arraySize, arraySize);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">return</span> retCode;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="type">LogCategory</span> <span class="variable">category</span> <span class="operator">=</span> categoryStruct.getCategory();</span><br><span class="line">                    <span class="keyword">if</span> (category == <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        curve = category.getLogCurve3D(curve_name);</span><br><span class="line">                        <span class="keyword">if</span> (curve == <span class="literal">null</span>) &#123;</span><br><span class="line">                            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            curveStruct = <span class="keyword">new</span> <span class="title class_">ReferCurveStruct</span>(curve_name, curve);</span><br><span class="line">                            categoryStruct.addCurveElement(curveStruct);</span><br><span class="line">                            <span class="type">float</span>[][] data = <span class="keyword">new</span> <span class="title class_">float</span>[dataCount][arraySize];</span><br><span class="line">                            retCode = curve.readData(startDepth, dataCount, arrayIndex, data, (ReadMode)<span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; retCode; ++i) &#123;</span><br><span class="line">                                System.arraycopy(data[i], <span class="number">0</span>, buffer, i * arraySize, arraySize);</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">return</span> retCode;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="title function_">writeCurve_2D</span><span class="params">(<span class="type">int</span> categoryID, String curveName, <span class="type">double</span> startDepth, <span class="type">int</span> dataCount, <span class="type">int</span> arraySize, <span class="type">float</span>[] buffer)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (categoryID &gt;= <span class="number">1</span> &amp;&amp; dataCount &gt;= <span class="number">1</span> &amp;&amp; buffer != <span class="literal">null</span> &amp;&amp; curveName != <span class="literal">null</span> &amp;&amp; !curveName.trim().isEmpty()) &#123;</span><br><span class="line">            <span class="type">ReferCategoryStruct</span> <span class="variable">categoryStruct</span> <span class="operator">=</span> ReferCategoryContainer.getInstance().getSpecifiedElement(categoryID);</span><br><span class="line">            <span class="keyword">if</span> (categoryStruct == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">curve_name</span> <span class="operator">=</span> curveName.trim();</span><br><span class="line">                <span class="type">int</span> <span class="variable">retCode</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">                <span class="type">ReferCurveStruct</span> <span class="variable">curveStruct</span> <span class="operator">=</span> categoryStruct.getSpecifiedCurveElement(curve_name);</span><br><span class="line">                <span class="type">LogCurve2D</span> <span class="variable">curve</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">                <span class="type">int</span> retCode;</span><br><span class="line">                <span class="keyword">if</span> (curveStruct != <span class="literal">null</span>) &#123;</span><br><span class="line">                    curve = (LogCurve2D)curveStruct.curve;</span><br><span class="line">                    <span class="type">float</span>[][] data = <span class="keyword">new</span> <span class="title class_">float</span>[dataCount][arraySize];</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; dataCount; ++i) &#123;</span><br><span class="line">                        System.arraycopy(buffer, i * arraySize, data[i], <span class="number">0</span>, arraySize);</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    retCode = curve.writeData(startDepth, dataCount, data, (WriteMode)<span class="literal">null</span>);</span><br><span class="line">                    <span class="keyword">if</span> (retCode &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                        categoryStruct.isModified = <span class="literal">true</span>;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">return</span> retCode;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="type">LogCategory</span> <span class="variable">category</span> <span class="operator">=</span> categoryStruct.getCategory();</span><br><span class="line">                    <span class="keyword">if</span> (category == <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        curve = category.getLogCurve2D(curve_name);</span><br><span class="line">                        <span class="keyword">if</span> (curve == <span class="literal">null</span>) &#123;</span><br><span class="line">                            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            curveStruct = <span class="keyword">new</span> <span class="title class_">ReferCurveStruct</span>(curve_name, curve);</span><br><span class="line">                            categoryStruct.addCurveElement(curveStruct);</span><br><span class="line">                            <span class="type">float</span>[][] data = <span class="keyword">new</span> <span class="title class_">float</span>[dataCount][arraySize];</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; dataCount; ++i) &#123;</span><br><span class="line">                                System.arraycopy(buffer, i * arraySize, data[i], <span class="number">0</span>, arraySize);</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            retCode = curve.writeData(startDepth, dataCount, data, (WriteMode)<span class="literal">null</span>);</span><br><span class="line">                            <span class="keyword">if</span> (retCode &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                                categoryStruct.isModified = <span class="literal">true</span>;</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">return</span> retCode;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="title function_">readCurve_2D</span><span class="params">(<span class="type">int</span> categoryID, String curveName, <span class="type">double</span> startDepth, <span class="type">int</span> upwardCount, <span class="type">int</span> downWardCount, <span class="type">int</span> arraySize, <span class="type">float</span>[] buffer)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (categoryID &gt;= <span class="number">1</span> &amp;&amp; upwardCount &gt;= <span class="number">0</span> &amp;&amp; downWardCount &gt;= <span class="number">0</span> &amp;&amp; buffer != <span class="literal">null</span> &amp;&amp; curveName != <span class="literal">null</span> &amp;&amp; !curveName.trim().isEmpty()) &#123;</span><br><span class="line">            <span class="type">ReferCategoryStruct</span> <span class="variable">categoryStruct</span> <span class="operator">=</span> ReferCategoryContainer.getInstance().getSpecifiedElement(categoryID);</span><br><span class="line">            <span class="keyword">if</span> (categoryStruct == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">curve_name</span> <span class="operator">=</span> curveName.trim();</span><br><span class="line">                <span class="type">int</span> <span class="variable">dataCount</span> <span class="operator">=</span> upwardCount + downWardCount + <span class="number">1</span>;</span><br><span class="line">                <span class="type">ReferCurveStruct</span> <span class="variable">curveStruct</span> <span class="operator">=</span> categoryStruct.getSpecifiedCurveElement(curve_name);</span><br><span class="line">                <span class="type">LogCurve2D</span> <span class="variable">curve</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">                <span class="type">int</span> retCode;</span><br><span class="line">                <span class="keyword">if</span> (curveStruct != <span class="literal">null</span>) &#123;</span><br><span class="line">                    curve = (LogCurve2D)curveStruct.curve;</span><br><span class="line">                    <span class="type">float</span>[][] data = <span class="keyword">new</span> <span class="title class_">float</span>[dataCount][arraySize];</span><br><span class="line">                    <span class="type">int</span> <span class="variable">retCode</span> <span class="operator">=</span> curve.readData(startDepth, upwardCount, downWardCount, data, (ReadMode)<span class="literal">null</span>);</span><br><span class="line">                    <span class="keyword">if</span> (retCode &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                        <span class="keyword">for</span>(retCode = <span class="number">0</span>; retCode &lt; retCode; ++retCode) &#123;</span><br><span class="line">                            System.arraycopy(data[retCode], <span class="number">0</span>, buffer, retCode * arraySize, arraySize);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">return</span> retCode;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="type">LogCategory</span> <span class="variable">category</span> <span class="operator">=</span> categoryStruct.getCategory();</span><br><span class="line">                    <span class="keyword">if</span> (category == <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        curve = category.getLogCurve2D(curve_name);</span><br><span class="line">                        <span class="keyword">if</span> (curve == <span class="literal">null</span>) &#123;</span><br><span class="line">                            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            curveStruct = <span class="keyword">new</span> <span class="title class_">ReferCurveStruct</span>(curve_name, curve);</span><br><span class="line">                            categoryStruct.addCurveElement(curveStruct);</span><br><span class="line">                            <span class="type">float</span>[][] data = <span class="keyword">new</span> <span class="title class_">float</span>[dataCount][arraySize];</span><br><span class="line">                            retCode = curve.readData(startDepth, upwardCount, downWardCount, data, (ReadMode)<span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; retCode; ++i) &#123;</span><br><span class="line">                                System.arraycopy(data[i], <span class="number">0</span>, buffer, i * arraySize, arraySize);</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">return</span> retCode;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="title function_">readCurve_2D</span><span class="params">(<span class="type">int</span> categoryID, String curveName, <span class="type">double</span> startDepth, <span class="type">int</span> dataCount, <span class="type">int</span> arraySize, <span class="type">short</span>[] buffer)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (categoryID &gt;= <span class="number">1</span> &amp;&amp; dataCount &gt;= <span class="number">1</span> &amp;&amp; buffer != <span class="literal">null</span> &amp;&amp; curveName != <span class="literal">null</span> &amp;&amp; !curveName.trim().isEmpty()) &#123;</span><br><span class="line">            <span class="type">ReferCategoryStruct</span> <span class="variable">categoryStruct</span> <span class="operator">=</span> ReferCategoryContainer.getInstance().getSpecifiedElement(categoryID);</span><br><span class="line">            <span class="keyword">if</span> (categoryStruct == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">curve_name</span> <span class="operator">=</span> curveName.trim();</span><br><span class="line">                <span class="type">LogCurve2D</span> <span class="variable">curve</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">                <span class="type">ReferCurveStruct</span> <span class="variable">curveStruct</span> <span class="operator">=</span> categoryStruct.getSpecifiedCurveElement(curve_name);</span><br><span class="line">                <span class="type">int</span> retCode;</span><br><span class="line">                <span class="keyword">if</span> (curveStruct != <span class="literal">null</span>) &#123;</span><br><span class="line">                    curve = (LogCurve2D)curveStruct.curve;</span><br><span class="line">                    <span class="type">short</span>[][] data = <span class="keyword">new</span> <span class="title class_">short</span>[dataCount][arraySize];</span><br><span class="line">                    <span class="type">int</span> <span class="variable">retCode</span> <span class="operator">=</span> curve.readData(startDepth, dataCount, data, (ReadMode)<span class="literal">null</span>);</span><br><span class="line">                    <span class="keyword">if</span> (retCode &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                        <span class="keyword">for</span>(retCode = <span class="number">0</span>; retCode &lt; retCode; ++retCode) &#123;</span><br><span class="line">                            System.arraycopy(data[retCode], <span class="number">0</span>, buffer, retCode * arraySize, arraySize);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">return</span> retCode;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="type">LogCategory</span> <span class="variable">category</span> <span class="operator">=</span> categoryStruct.getCategory();</span><br><span class="line">                    <span class="keyword">if</span> (category == <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        curve = category.getLogCurve2D(curve_name);</span><br><span class="line">                        <span class="keyword">if</span> (curve == <span class="literal">null</span>) &#123;</span><br><span class="line">                            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            curveStruct = <span class="keyword">new</span> <span class="title class_">ReferCurveStruct</span>(curve_name, curve);</span><br><span class="line">                            categoryStruct.addCurveElement(curveStruct);</span><br><span class="line">                            <span class="type">float</span>[][] data = <span class="keyword">new</span> <span class="title class_">float</span>[dataCount][arraySize];</span><br><span class="line">                            retCode = curve.readData(startDepth, dataCount, data, (ReadMode)<span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; retCode; ++i) &#123;</span><br><span class="line">                                System.arraycopy(data[i], <span class="number">0</span>, buffer, i * arraySize, arraySize);</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">return</span> retCode;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="title function_">readCurve_2D</span><span class="params">(<span class="type">int</span> categoryID, String curveName, <span class="type">double</span> startDepth, <span class="type">int</span> dataCount, <span class="type">int</span> arraySize, <span class="type">float</span>[] buffer)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (categoryID &gt;= <span class="number">1</span> &amp;&amp; dataCount &gt;= <span class="number">1</span> &amp;&amp; buffer != <span class="literal">null</span> &amp;&amp; curveName != <span class="literal">null</span> &amp;&amp; !curveName.trim().isEmpty()) &#123;</span><br><span class="line">            <span class="type">ReferCategoryStruct</span> <span class="variable">categoryStruct</span> <span class="operator">=</span> ReferCategoryContainer.getInstance().getSpecifiedElement(categoryID);</span><br><span class="line">            <span class="keyword">if</span> (categoryStruct == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">curve_name</span> <span class="operator">=</span> curveName.trim();</span><br><span class="line">                <span class="type">LogCurve2D</span> <span class="variable">curve</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">                <span class="type">ReferCurveStruct</span> <span class="variable">curveStruct</span> <span class="operator">=</span> categoryStruct.getSpecifiedCurveElement(curve_name);</span><br><span class="line">                <span class="type">int</span> retCode;</span><br><span class="line">                <span class="keyword">if</span> (curveStruct != <span class="literal">null</span>) &#123;</span><br><span class="line">                    curve = (LogCurve2D)curveStruct.curve;</span><br><span class="line">                    <span class="type">float</span>[][] data = <span class="keyword">new</span> <span class="title class_">float</span>[dataCount][arraySize];</span><br><span class="line">                    <span class="type">int</span> <span class="variable">retCode</span> <span class="operator">=</span> curve.readData(startDepth, dataCount, data, (ReadMode)<span class="literal">null</span>);</span><br><span class="line">                    <span class="keyword">if</span> (retCode &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                        <span class="keyword">for</span>(retCode = <span class="number">0</span>; retCode &lt; retCode; ++retCode) &#123;</span><br><span class="line">                            System.arraycopy(data[retCode], <span class="number">0</span>, buffer, retCode * arraySize, arraySize);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">return</span> retCode;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="type">LogCategory</span> <span class="variable">category</span> <span class="operator">=</span> categoryStruct.getCategory();</span><br><span class="line">                    <span class="keyword">if</span> (category == <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        curve = category.getLogCurve2D(curve_name);</span><br><span class="line">                        <span class="keyword">if</span> (curve == <span class="literal">null</span>) &#123;</span><br><span class="line">                            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            curveStruct = <span class="keyword">new</span> <span class="title class_">ReferCurveStruct</span>(curve_name, curve);</span><br><span class="line">                            categoryStruct.addCurveElement(curveStruct);</span><br><span class="line">                            <span class="type">float</span>[][] data = <span class="keyword">new</span> <span class="title class_">float</span>[dataCount][arraySize];</span><br><span class="line">                            retCode = curve.readData(startDepth, dataCount, data, (ReadMode)<span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; retCode; ++i) &#123;</span><br><span class="line">                                System.arraycopy(data[i], <span class="number">0</span>, buffer, i * arraySize, arraySize);</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">return</span> retCode;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="title function_">writeCurve_1D</span><span class="params">(<span class="type">int</span> categoryID, String curveName, <span class="type">double</span> startDepth, <span class="type">int</span> dataCount, <span class="type">float</span>[] buffer)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (categoryID &gt;= <span class="number">1</span> &amp;&amp; dataCount &gt;= <span class="number">1</span> &amp;&amp; buffer != <span class="literal">null</span> &amp;&amp; curveName != <span class="literal">null</span> &amp;&amp; !curveName.trim().isEmpty()) &#123;</span><br><span class="line">            <span class="type">ReferCategoryStruct</span> <span class="variable">categoryStruct</span> <span class="operator">=</span> ReferCategoryContainer.getInstance().getSpecifiedElement(categoryID);</span><br><span class="line">            <span class="keyword">if</span> (categoryStruct == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">int</span> <span class="variable">retCount</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">                <span class="type">String</span> <span class="variable">curve_name</span> <span class="operator">=</span> curveName.trim();</span><br><span class="line">                <span class="type">ReferCurveStruct</span> <span class="variable">curveStruct</span> <span class="operator">=</span> categoryStruct.getSpecifiedCurveElement(curve_name);</span><br><span class="line">                <span class="type">int</span> retCount;</span><br><span class="line">                <span class="keyword">if</span> (curveStruct != <span class="literal">null</span>) &#123;</span><br><span class="line">                    retCount = ((LogCurve1D)curveStruct.curve).writeData(startDepth, dataCount, buffer, (WriteMode)<span class="literal">null</span>);</span><br><span class="line">                    <span class="keyword">if</span> (retCount &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                        categoryStruct.isModified = <span class="literal">true</span>;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">return</span> retCount;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="type">LogCategory</span> <span class="variable">category</span> <span class="operator">=</span> categoryStruct.getCategory();</span><br><span class="line">                    <span class="keyword">if</span> (category == <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="type">LogCurve1D</span> <span class="variable">curve</span> <span class="operator">=</span> category.getLogCurve1D(curve_name);</span><br><span class="line">                        <span class="keyword">if</span> (curve == <span class="literal">null</span>) &#123;</span><br><span class="line">                            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            curveStruct = <span class="keyword">new</span> <span class="title class_">ReferCurveStruct</span>(curve_name, curve);</span><br><span class="line">                            categoryStruct.addCurveElement(curveStruct);</span><br><span class="line">                            retCount = curve.writeData(startDepth, dataCount, buffer, (WriteMode)<span class="literal">null</span>);</span><br><span class="line">                            <span class="keyword">if</span> (retCount &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                                categoryStruct.isModified = <span class="literal">true</span>;</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">return</span> retCount;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="title function_">readCurve_1D</span><span class="params">(<span class="type">int</span> categoryID, String curveName, <span class="type">double</span> startDepth, <span class="type">int</span> upwardCount, <span class="type">int</span> downWardCount, <span class="type">float</span>[] buffer)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (categoryID &gt;= <span class="number">1</span> &amp;&amp; upwardCount &gt;= <span class="number">0</span> &amp;&amp; downWardCount &gt;= <span class="number">0</span> &amp;&amp; buffer != <span class="literal">null</span> &amp;&amp; curveName != <span class="literal">null</span> &amp;&amp; !curveName.trim().isEmpty()) &#123;</span><br><span class="line">            <span class="type">ReferCategoryStruct</span> <span class="variable">categoryStruct</span> <span class="operator">=</span> ReferCategoryContainer.getInstance().getSpecifiedElement(categoryID);</span><br><span class="line">            <span class="keyword">if</span> (categoryStruct == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">curve_name</span> <span class="operator">=</span> curveName.trim();</span><br><span class="line">                <span class="type">ReferCurveStruct</span> <span class="variable">curveStruct</span> <span class="operator">=</span> categoryStruct.getSpecifiedCurveElement(curve_name);</span><br><span class="line">                <span class="keyword">if</span> (curveStruct != <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> ((LogCurve1D)curveStruct.curve).readData(startDepth, upwardCount, downWardCount, buffer, (ReadMode)<span class="literal">null</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="type">LogCategory</span> <span class="variable">category</span> <span class="operator">=</span> categoryStruct.getCategory();</span><br><span class="line">                    <span class="keyword">if</span> (category == <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="type">LogCurve1D</span> <span class="variable">curve</span> <span class="operator">=</span> category.getLogCurve1D(curve_name);</span><br><span class="line">                        <span class="keyword">if</span> (curve == <span class="literal">null</span>) &#123;</span><br><span class="line">                            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            curveStruct = <span class="keyword">new</span> <span class="title class_">ReferCurveStruct</span>(curve_name, curve);</span><br><span class="line">                            categoryStruct.addCurveElement(curveStruct);</span><br><span class="line">                            <span class="keyword">return</span> curve.readData(startDepth, upwardCount, downWardCount, buffer, (ReadMode)<span class="literal">null</span>);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="title function_">readCurve_1D</span><span class="params">(<span class="type">int</span> categoryID, String curveName, <span class="type">double</span> startDepth, <span class="type">int</span> dataCount, <span class="type">float</span>[] buffer)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (categoryID &gt;= <span class="number">1</span> &amp;&amp; dataCount &gt;= <span class="number">1</span> &amp;&amp; buffer != <span class="literal">null</span> &amp;&amp; curveName != <span class="literal">null</span> &amp;&amp; !curveName.trim().isEmpty()) &#123;</span><br><span class="line">            <span class="type">ReferCategoryStruct</span> <span class="variable">categoryStruct</span> <span class="operator">=</span> ReferCategoryContainer.getInstance().getSpecifiedElement(categoryID);</span><br><span class="line">            <span class="keyword">if</span> (categoryStruct == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">curve_name</span> <span class="operator">=</span> curveName.trim();</span><br><span class="line">                <span class="type">ReferCurveStruct</span> <span class="variable">curveStruct</span> <span class="operator">=</span> categoryStruct.getSpecifiedCurveElement(curve_name);</span><br><span class="line">                <span class="keyword">if</span> (curveStruct != <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> ((LogCurve1D)curveStruct.curve).readData(startDepth, dataCount, buffer, (ReadMode)<span class="literal">null</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="type">LogCategory</span> <span class="variable">category</span> <span class="operator">=</span> categoryStruct.getCategory();</span><br><span class="line">                    <span class="keyword">if</span> (category == <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="type">LogCurve1D</span> <span class="variable">curve</span> <span class="operator">=</span> category.getLogCurve1D(curve_name);</span><br><span class="line">                        <span class="keyword">if</span> (curve == <span class="literal">null</span>) &#123;</span><br><span class="line">                            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            curveStruct = <span class="keyword">new</span> <span class="title class_">ReferCurveStruct</span>(curve_name, curve);</span><br><span class="line">                            categoryStruct.addCurveElement(curveStruct);</span><br><span class="line">                            <span class="keyword">return</span> curve.readData(startDepth, dataCount, buffer, (ReadMode)<span class="literal">null</span>);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="title function_">isCategoryExisted</span><span class="params">(DataPath dataPath)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">catetgoryPath</span> <span class="operator">=</span> dataPath.toString(<span class="number">4</span>, <span class="literal">false</span>);</span><br><span class="line">        <span class="keyword">if</span> (ReferCategoryContainer.getInstance().getSpecifiedElement(catetgoryPath) != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">wellPath</span> <span class="operator">=</span> dataPath.toString(<span class="number">3</span>, <span class="literal">false</span>);</span><br><span class="line">            <span class="type">File</span> <span class="variable">file</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(wellPath);</span><br><span class="line">            <span class="keyword">if</span> (file.exists() &amp;&amp; file.isDirectory()) &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">identifierFilePath</span> <span class="operator">=</span> wellPath + File.separator + <span class="string">&quot;wellproperties.xml&quot;</span>;</span><br><span class="line">                file = <span class="keyword">new</span> <span class="title class_">File</span>(identifierFilePath);</span><br><span class="line">                <span class="keyword">if</span> (!file.exists()) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    file = <span class="keyword">new</span> <span class="title class_">File</span>(catetgoryPath + <span class="string">&quot;.cifp&quot;</span>);</span><br><span class="line">                    <span class="keyword">return</span> !file.exists() ? <span class="number">0</span> : <span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> CurveXD <span class="title function_">buildCurveXD</span><span class="params">(String curveName, <span class="type">int</span> arrayNum, <span class="type">int</span> arraySize, <span class="type">double</span> startDepth, <span class="type">int</span> sampleCount, <span class="type">double</span> depthLevel, <span class="type">int</span> dataType, String curveUnit, String depthUnit)</span> &#123;</span><br><span class="line">        <span class="type">CurveXD</span> <span class="variable">curveXD</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">if</span> (arrayNum == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (arraySize == <span class="number">1</span>) &#123;</span><br><span class="line">                curveXD = <span class="keyword">new</span> <span class="title class_">Curve1D</span>();</span><br><span class="line">                ((CurveXD)curveXD).setCurveType((<span class="type">byte</span>)<span class="number">1</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                curveXD = <span class="keyword">new</span> <span class="title class_">Curve2D</span>();</span><br><span class="line">                ((Curve2D)curveXD).setTimeSampleNum(arraySize);</span><br><span class="line">                ((CurveXD)curveXD).setCurveType((<span class="type">byte</span>)<span class="number">2</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            curveXD = <span class="keyword">new</span> <span class="title class_">Curve3D</span>();</span><br><span class="line">            ((Curve3D)curveXD).setArrayNum(arrayNum);</span><br><span class="line">            ((Curve3D)curveXD).setTimeSampleNum(arraySize);</span><br><span class="line">            ((CurveXD)curveXD).setCurveType((<span class="type">byte</span>)<span class="number">3</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        ((CurveXD)curveXD).setCurveName(curveName);</span><br><span class="line">        ((CurveXD)curveXD).setStartDepth(startDepth);</span><br><span class="line">        ((CurveXD)curveXD).setEndDepth(startDepth + depthLevel * (<span class="type">double</span>)(sampleCount - <span class="number">1</span>));</span><br><span class="line">        ((CurveXD)curveXD).setDepthLevel(depthLevel);</span><br><span class="line">        ((CurveXD)curveXD).setDataType((<span class="type">byte</span>)dataType);</span><br><span class="line">        ((CurveXD)curveXD).setDepthUnit(depthUnit);</span><br><span class="line">        ((CurveXD)curveXD).setCurveUnit(curveUnit);</span><br><span class="line">        <span class="keyword">return</span> (CurveXD)curveXD;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="title function_">createRemoteCategory</span><span class="params">(DataPath dataPath, String userName, String userPassword)</span> &#123;</span><br><span class="line">        <span class="type">LogDataSource</span> <span class="variable">dataSource</span> <span class="operator">=</span> dataPath.getCurrentDataFormat().buildDataSource();</span><br><span class="line">        <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> <span class="string">&quot;%%%&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">connectPara</span> <span class="operator">=</span> dataPath.getDataSourceName() + str + userName + str + userPassword;</span><br><span class="line">        <span class="keyword">if</span> (!dataSource.connect(connectPara)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="type">LogWorkSpace</span> <span class="variable">ws</span> <span class="operator">=</span> dataSource.getLogWorkSpace(dataPath.getWorkSpaceName());</span><br><span class="line">            <span class="keyword">if</span> (ws == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">LogWell</span> <span class="variable">well</span> <span class="operator">=</span> ws.getLogWell(dataPath.getWellName());</span><br><span class="line">                <span class="keyword">if</span> (well == <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="type">String</span> <span class="variable">categoryName</span> <span class="operator">=</span> dataPath.getCategoryName();</span><br><span class="line">                    <span class="keyword">if</span> (well.getLogCategory(categoryName) != <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="type">CategoryProperties</span> <span class="variable">properties</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CategoryProperties</span>();</span><br><span class="line">                        properties.setCategoryName(categoryName);</span><br><span class="line">                        <span class="type">LogCategory</span> <span class="variable">category</span> <span class="operator">=</span> well.createCategory(properties);</span><br><span class="line">                        <span class="keyword">if</span> (category == <span class="literal">null</span>) &#123;</span><br><span class="line">                            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            <span class="type">int</span> <span class="variable">categoryID</span> <span class="operator">=</span> <span class="built_in">this</span>.getID();</span><br><span class="line">                            <span class="type">ReferCategoryStruct</span> <span class="variable">categoryStruct</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ReferCategoryStruct</span>(dataPath.toString(<span class="number">4</span>, <span class="literal">true</span>), category, categoryID);</span><br><span class="line">                            ReferCategoryContainer.getInstance().addElement(categoryStruct);</span><br><span class="line">                            <span class="built_in">this</span>.addCategoryNotification(categoryStruct, <span class="number">0</span>);</span><br><span class="line">                            <span class="keyword">return</span> categoryID;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="title function_">createLocalWell</span><span class="params">(DataPath dataPath)</span> &#123;</span><br><span class="line">        <span class="type">LogDataSource</span> <span class="variable">dataSource</span> <span class="operator">=</span> dataPath.getCurrentDataFormat().buildDataSource();</span><br><span class="line">        <span class="keyword">if</span> (!dataSource.connect(dataPath.getDataSourceName())) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="type">LogWorkSpace</span> <span class="variable">workSpace</span> <span class="operator">=</span> dataSource.getLogWorkSpace(dataPath.getWorkSpaceName());</span><br><span class="line">            <span class="keyword">if</span> (workSpace == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">wellName</span> <span class="operator">=</span> dataPath.getWellName();</span><br><span class="line">                <span class="type">LogWell</span> <span class="variable">well</span> <span class="operator">=</span> workSpace.getLogWell(wellName);</span><br><span class="line">                <span class="keyword">if</span> (well != <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    well = workSpace.createWell(wellName);</span><br><span class="line">                    <span class="keyword">if</span> (well == <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="built_in">this</span>.addWellNotification(well, <span class="number">0</span>);</span><br><span class="line">                        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="title function_">createLocalCategory</span><span class="params">(DataPath dataPath, <span class="type">int</span> isOverwritten)</span> &#123;</span><br><span class="line">        <span class="type">LogDataSource</span> <span class="variable">dataSource</span> <span class="operator">=</span> dataPath.getCurrentDataFormat().buildDataSource();</span><br><span class="line">        <span class="keyword">if</span> (!dataSource.connect(dataPath.getDataSourceName())) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="type">LogWorkSpace</span> <span class="variable">workSpace</span> <span class="operator">=</span> dataSource.getLogWorkSpace(dataPath.getWorkSpaceName());</span><br><span class="line">            <span class="keyword">if</span> (workSpace == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">wellName</span> <span class="operator">=</span> dataPath.getWellName();</span><br><span class="line">                <span class="type">LogWell</span> <span class="variable">well</span> <span class="operator">=</span> workSpace.getLogWell(wellName);</span><br><span class="line">                <span class="keyword">if</span> (well == <span class="literal">null</span>) &#123;</span><br><span class="line">                    well = workSpace.createWell(wellName);</span><br><span class="line">                    <span class="keyword">if</span> (well == <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="type">String</span> <span class="variable">categoryName</span> <span class="operator">=</span> dataPath.getCategoryName();</span><br><span class="line">                <span class="type">LogCategory</span> <span class="variable">logCategory</span> <span class="operator">=</span> well.getLogCategory(categoryName);</span><br><span class="line">                <span class="keyword">if</span> (logCategory != <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (isOverwritten == <span class="number">0</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span> (!well.deleteCategory(categoryName)) &#123;</span><br><span class="line">                        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="type">ReferCategoryStruct</span> <span class="variable">categoryStruct</span> <span class="operator">=</span> ReferCategoryContainer.getInstance().getSpecifiedElement(dataPath.toString(<span class="number">4</span>, <span class="literal">true</span>));</span><br><span class="line">                    <span class="keyword">if</span> (categoryStruct == <span class="literal">null</span>) &#123;</span><br><span class="line">                        categoryStruct = <span class="keyword">new</span> <span class="title class_">ReferCategoryStruct</span>(dataPath.toString(<span class="number">4</span>, <span class="literal">true</span>), logCategory, <span class="built_in">this</span>.getID());</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        ReferCategoryContainer.getInstance().removeElement(categoryStruct.getCategoryID());</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="built_in">this</span>.addCategoryNotification(categoryStruct, <span class="number">1</span>);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="type">CategoryProperties</span> <span class="variable">properties</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CategoryProperties</span>();</span><br><span class="line">                properties.setCategoryName(categoryName);</span><br><span class="line">                <span class="type">LogCategory</span> <span class="variable">category</span> <span class="operator">=</span> well.createCategory(properties);</span><br><span class="line">                <span class="keyword">if</span> (category == <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="type">int</span> <span class="variable">categoryID</span> <span class="operator">=</span> <span class="built_in">this</span>.getID();</span><br><span class="line">                    <span class="type">ReferCategoryStruct</span> <span class="variable">categoryStruct</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ReferCategoryStruct</span>(dataPath.toString(<span class="number">4</span>, <span class="literal">true</span>), category, categoryID);</span><br><span class="line">                    ReferCategoryContainer.getInstance().addElement(categoryStruct);</span><br><span class="line">                    <span class="built_in">this</span>.addCategoryNotification(categoryStruct, <span class="number">0</span>);</span><br><span class="line">                    <span class="keyword">return</span> categoryID;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="title function_">getCategoryID</span><span class="params">(DataPath dataPath)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">categoryPath</span> <span class="operator">=</span> dataPath.toString(<span class="number">4</span>, <span class="literal">true</span>);</span><br><span class="line">        <span class="type">ReferCategoryStruct</span> <span class="variable">categoryStruct</span> <span class="operator">=</span> ReferCategoryContainer.getInstance().getSpecifiedElement(categoryPath);</span><br><span class="line">        <span class="keyword">if</span> (categoryStruct != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> categoryStruct.getCategoryID();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="type">LogDataSource</span> <span class="variable">dataSource</span> <span class="operator">=</span> dataPath.getCurrentDataFormat().buildDataSource();</span><br><span class="line">            <span class="keyword">if</span> (!dataSource.connect(dataPath.getDataSourceName())) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">LogWorkSpace</span> <span class="variable">workSpace</span> <span class="operator">=</span> dataSource.getLogWorkSpace(dataPath.getWorkSpaceName());</span><br><span class="line">                <span class="keyword">if</span> (workSpace == <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="type">LogWell</span> <span class="variable">well</span> <span class="operator">=</span> workSpace.getLogWell(dataPath.getWellName());</span><br><span class="line">                    <span class="keyword">if</span> (well == <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="type">LogCategory</span> <span class="variable">category</span> <span class="operator">=</span> well.getLogCategory(dataPath.getCategoryName());</span><br><span class="line">                        <span class="keyword">if</span> (category == <span class="literal">null</span>) &#123;</span><br><span class="line">                            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            <span class="type">int</span> <span class="variable">id</span> <span class="operator">=</span> <span class="built_in">this</span>.getID();</span><br><span class="line">                            ReferCategoryContainer.getInstance().addElement(<span class="keyword">new</span> <span class="title class_">ReferCategoryStruct</span>(categoryPath, category, id));</span><br><span class="line">                            <span class="keyword">if</span> (DataEngine.getDefault().getMainDataSource() == <span class="literal">null</span>) &#123;</span><br><span class="line">                                DataEngine.getDefault().setMainDataSource(dataSource);</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">return</span> id;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="title function_">getID</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">categoryID</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">id</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">        <span class="type">boolean</span> flag;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            flag = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; ReferCategoryContainer.getInstance().size(); ++i) &#123;</span><br><span class="line">                <span class="type">int</span> <span class="variable">id</span> <span class="operator">=</span> ReferCategoryContainer.getInstance().elemenAt(i).getCategoryID();</span><br><span class="line">                <span class="keyword">if</span> (categoryID == id) &#123;</span><br><span class="line">                    flag = <span class="literal">true</span>;</span><br><span class="line">                    ++categoryID;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">while</span>(flag);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> categoryID;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="title function_">computReadRowCount</span><span class="params">(<span class="type">byte</span> curveType, LoggingProperties logPros)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">allowMaxSize</span> <span class="operator">=</span> <span class="number">262144</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">size</span> <span class="operator">=</span> Global.sizeof(logPros.getDataType());</span><br><span class="line">        <span class="keyword">switch</span> (curveType) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                <span class="keyword">return</span> allowMaxSize / size;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                <span class="keyword">return</span> allowMaxSize / size / logPros.getTimeSampleNum();</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                <span class="keyword">return</span> allowMaxSize / size / logPros.getArrayNum() / logPros.getTimeSampleNum();</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> LogCurve <span class="title function_">changeCurveDepthLevel</span><span class="params">(LogCategory category, LogCurve srcCurve, <span class="type">double</span> newDepLevel, String newCurveSuffix)</span> &#123;</span><br><span class="line">        <span class="type">LoggingProperties</span> <span class="variable">properties</span> <span class="operator">=</span> srcCurve.getLoggingProperties();</span><br><span class="line">        <span class="type">byte</span> <span class="variable">curveType</span> <span class="operator">=</span> properties.getLoggingType();</span><br><span class="line">        <span class="type">double</span> <span class="variable">startDep</span> <span class="operator">=</span> properties.getStartDepth();</span><br><span class="line">        <span class="type">int</span> <span class="variable">dataCount</span> <span class="operator">=</span> (<span class="type">int</span>)((properties.getEndDepth() - startDep) / newDepLevel + <span class="number">1.5</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">newCurveName</span> <span class="operator">=</span> properties.getLoggingName() + newCurveSuffix;</span><br><span class="line">        <span class="type">int</span> <span class="variable">readCount</span> <span class="operator">=</span> <span class="built_in">this</span>.computReadRowCount(curveType, properties);</span><br><span class="line">        <span class="type">int</span> <span class="variable">readingNum</span> <span class="operator">=</span> readCount &gt; dataCount ? dataCount : readCount;</span><br><span class="line">        <span class="type">int</span> <span class="variable">indexToRead</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">double</span> <span class="variable">readDep</span> <span class="operator">=</span> startDep;</span><br><span class="line">        <span class="type">LogCurve</span> <span class="variable">newCurve</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">switch</span> (curveType) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                <span class="type">Curve1D</span> <span class="variable">curve1D</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Curve1D</span>();</span><br><span class="line">                curve1D.getInfoFromLoggingProperties(properties);</span><br><span class="line">                curve1D.setCurveName(newCurveName);</span><br><span class="line">                curve1D.setDepthLevel(newDepLevel);</span><br><span class="line">                newCurve = (LogCurve1D)category.createCurve(curve1D);</span><br><span class="line">                <span class="type">double</span>[] data1D = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">for</span>(<span class="type">LogCurve1D</span> <span class="variable">oldCurve1D</span> <span class="operator">=</span> (LogCurve1D)srcCurve; indexToRead &lt; dataCount; readDep += (<span class="type">double</span>)readingNum * newDepLevel) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (dataCount - indexToRead &lt; readingNum) &#123;</span><br><span class="line">                        readingNum = dataCount - indexToRead;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="type">double</span>[] data1D = <span class="keyword">new</span> <span class="title class_">double</span>[readingNum];</span><br><span class="line">                    oldCurve1D.readData(readDep, newDepLevel, readingNum, data1D, (ReadMode)<span class="literal">null</span>);</span><br><span class="line">                    ((LogCurve1D)newCurve).writeData(readDep, readingNum, data1D, (WriteMode)<span class="literal">null</span>);</span><br><span class="line">                    indexToRead += readingNum;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                ((LogCurve)newCurve).flush();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                <span class="type">Curve2D</span> <span class="variable">curve2D</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Curve2D</span>();</span><br><span class="line">                curve2D.getInfoFromLoggingProperties(properties);</span><br><span class="line">                curve2D.setCurveName(newCurveName);</span><br><span class="line">                curve2D.setDepthLevel(newDepLevel);</span><br><span class="line">                newCurve = (LogCurve2D)category.createCurve(curve2D);</span><br><span class="line">                <span class="type">double</span>[][] data2D = (<span class="type">double</span>[][])<span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">for</span>(<span class="type">LogCurve2D</span> <span class="variable">oldCurve2D</span> <span class="operator">=</span> (LogCurve2D)srcCurve; indexToRead &lt; dataCount; readDep += (<span class="type">double</span>)readingNum * newDepLevel) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (dataCount - indexToRead &lt; readingNum) &#123;</span><br><span class="line">                        readingNum = dataCount - indexToRead;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    data2D = <span class="keyword">new</span> <span class="title class_">double</span>[readingNum][properties.getTimeSampleNum()];</span><br><span class="line">                    oldCurve2D.readData(readDep, newDepLevel, readingNum, data2D, (ReadMode)<span class="literal">null</span>);</span><br><span class="line">                    ((LogCurve2D)newCurve).writeData(readDep, readingNum, data2D, (WriteMode)<span class="literal">null</span>);</span><br><span class="line">                    indexToRead += readingNum;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                ((LogCurve)newCurve).flush();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                <span class="type">Curve3D</span> <span class="variable">curve3D</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Curve3D</span>();</span><br><span class="line">                curve3D.getInfoFromLoggingProperties(properties);</span><br><span class="line">                curve3D.setCurveName(newCurveName);</span><br><span class="line">                curve3D.setDepthLevel(newDepLevel);</span><br><span class="line">                newCurve = (LogCurve3D)category.createCurve(curve3D);</span><br><span class="line">                <span class="type">double</span>[][][] data3D = (<span class="type">double</span>[][][])<span class="literal">null</span>;</span><br><span class="line">                <span class="type">double</span>[][] data = (<span class="type">double</span>[][])<span class="literal">null</span>;</span><br><span class="line">                <span class="type">int</span> <span class="variable">X2Nps</span> <span class="operator">=</span> properties.getArrayNum();</span><br><span class="line">                <span class="type">int</span> <span class="variable">X3Npw</span> <span class="operator">=</span> properties.getTimeSampleNum();</span><br><span class="line"></span><br><span class="line">                <span class="keyword">for</span>(<span class="type">LogCurve3D</span> <span class="variable">oldCurve3D</span> <span class="operator">=</span> (LogCurve3D)srcCurve; indexToRead &lt; dataCount; readDep += (<span class="type">double</span>)readingNum * newDepLevel) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (dataCount - indexToRead &lt; readingNum) &#123;</span><br><span class="line">                        readingNum = dataCount - indexToRead;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    data3D = <span class="keyword">new</span> <span class="title class_">double</span>[readingNum][X2Nps][X3Npw];</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; X2Nps; ++i) &#123;</span><br><span class="line">                        data = <span class="keyword">new</span> <span class="title class_">double</span>[readingNum][X3Npw];</span><br><span class="line">                        oldCurve3D.readData(readDep, readingNum, i, data, (ReadMode)<span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; readingNum; ++j) &#123;</span><br><span class="line">                            System.arraycopy(data[j], <span class="number">0</span>, data3D[j][i], <span class="number">0</span>, X3Npw);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    ((LogCurve3D)newCurve).writeDataWithoutBuffer(readDep, readingNum, data3D, (WriteMode)<span class="literal">null</span>);</span><br><span class="line">                    indexToRead += readingNum;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                ((LogCurve)newCurve).flush();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">oldName</span> <span class="operator">=</span> srcCurve.getName();</span><br><span class="line">        category.deleteLogging(oldName);</span><br><span class="line">        ((LogCurve)newCurve).rename(oldName);</span><br><span class="line">        <span class="keyword">return</span> (LogCurve)newCurve;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="DataServiceIntegratedIO-java"><a href="#DataServiceIntegratedIO-java" class="headerlink" title="DataServiceIntegratedIO.java"></a>DataServiceIntegratedIO.java</h2><h3 id="简略方法-2"><a href="#简略方法-2" class="headerlink" title="简略方法"></a>简略方法</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">flushData</span><span class="params">()</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">dataChangedNotification</span><span class="params">()</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getProcessState</span><span class="params">()</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">setNextDepthRangeDepths</span><span class="params">()</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getDEP</span><span class="params">()</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getDEPO</span><span class="params">()</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getSDEP</span><span class="params">()</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getEDEP</span><span class="params">()</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getSTDEP</span><span class="params">()</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getENDEP</span><span class="params">()</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getRLEV</span><span class="params">()</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getRLEVO</span><span class="params">()</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">getParameterValues</span><span class="params">(<span class="type">float</span>[] values)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getInDataCount</span><span class="params">()</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getOutDataCount</span><span class="params">()</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getDepthSegmentCount</span><span class="params">()</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getInputCurveValue</span><span class="params">(<span class="type">int</span> index, <span class="type">double</span> startDepth, <span class="type">int</span> dataCount, <span class="type">float</span>[] values)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getInputCurveValues</span><span class="params">(<span class="type">double</span> currentDep, <span class="type">float</span>[] values)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setOutputCurveValues</span><span class="params">(<span class="type">double</span> currentDep, <span class="type">float</span>[] values)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setInArrayCurve</span><span class="params">(String str)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setOutArrayCurve</span><span class="params">(String str)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setOutputCurveUnit</span><span class="params">(String str)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setZero</span><span class="params">(<span class="type">int</span> bzero)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">setOutputCifpPath</span><span class="params">(String cifpPath)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setInterpolation</span><span class="params">(<span class="type">int</span> mode)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setInputDepthLevel</span><span class="params">(<span class="type">double</span> depLevel)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setOutputDepthLevel</span><span class="params">(<span class="type">double</span> depLevel)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">readInpFile</span><span class="params">()</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setInputCurveNames</span><span class="params">(String[] curveNames)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setOutputCurveNames</span><span class="params">(String[] curveNames)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setParameterNames</span><span class="params">(String[] curveNames)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setParameterDefaultValues</span><span class="params">(<span class="type">float</span>[] values)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">getErrorMessage</span><span class="params">()</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">setInpFilePath</span><span class="params">(String inpPath)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getCifpCount</span><span class="params">()</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">getCifpPath</span><span class="params">(<span class="type">int</span> index)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">setCifpPath</span><span class="params">(String cifpPath)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> CurveProperty <span class="title function_">getInputCurveProperty</span><span class="params">(<span class="type">int</span> index)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">getRedirectionInputCurveName</span><span class="params">(<span class="type">int</span> index)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">getRedirectionOutputCurveName</span><span class="params">(<span class="type">int</span> index)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getInputCurveExistFlag</span><span class="params">(<span class="type">int</span> index)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">getInputCurveValue</span><span class="params">(<span class="type">double</span> depth, <span class="type">int</span> index, <span class="type">float</span>[] values)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">setOutputCurveValue</span><span class="params">(<span class="type">int</span> index, <span class="type">double</span> startDepth, <span class="type">int</span> dataCount, <span class="type">float</span>[] values)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setOutputCurveValue</span><span class="params">(<span class="type">double</span> depth, <span class="type">int</span> index, <span class="type">float</span>[] values)</span></span><br></pre></td></tr></table></figure><h3 id="类源码-2"><a href="#类源码-2" class="headerlink" title="类源码"></a>类源码</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br><span class="line">824</span><br><span class="line">825</span><br><span class="line">826</span><br><span class="line">827</span><br><span class="line">828</span><br><span class="line">829</span><br><span class="line">830</span><br><span class="line">831</span><br><span class="line">832</span><br><span class="line">833</span><br><span class="line">834</span><br><span class="line">835</span><br><span class="line">836</span><br><span class="line">837</span><br><span class="line">838</span><br><span class="line">839</span><br><span class="line">840</span><br><span class="line">841</span><br><span class="line">842</span><br><span class="line">843</span><br><span class="line">844</span><br><span class="line">845</span><br><span class="line">846</span><br><span class="line">847</span><br><span class="line">848</span><br><span class="line">849</span><br><span class="line">850</span><br><span class="line">851</span><br><span class="line">852</span><br><span class="line">853</span><br><span class="line">854</span><br><span class="line">855</span><br><span class="line">856</span><br><span class="line">857</span><br><span class="line">858</span><br><span class="line">859</span><br><span class="line">860</span><br><span class="line">861</span><br><span class="line">862</span><br><span class="line">863</span><br><span class="line">864</span><br><span class="line">865</span><br><span class="line">866</span><br><span class="line">867</span><br><span class="line">868</span><br><span class="line">869</span><br><span class="line">870</span><br><span class="line">871</span><br><span class="line">872</span><br><span class="line">873</span><br><span class="line">874</span><br><span class="line">875</span><br><span class="line">876</span><br><span class="line">877</span><br><span class="line">878</span><br><span class="line">879</span><br><span class="line">880</span><br><span class="line">881</span><br><span class="line">882</span><br><span class="line">883</span><br><span class="line">884</span><br><span class="line">885</span><br><span class="line">886</span><br><span class="line">887</span><br><span class="line">888</span><br><span class="line">889</span><br><span class="line">890</span><br><span class="line">891</span><br><span class="line">892</span><br><span class="line">893</span><br><span class="line">894</span><br><span class="line">895</span><br><span class="line">896</span><br><span class="line">897</span><br><span class="line">898</span><br><span class="line">899</span><br><span class="line">900</span><br><span class="line">901</span><br><span class="line">902</span><br><span class="line">903</span><br><span class="line">904</span><br><span class="line">905</span><br><span class="line">906</span><br><span class="line">907</span><br><span class="line">908</span><br><span class="line">909</span><br><span class="line">910</span><br><span class="line">911</span><br><span class="line">912</span><br><span class="line">913</span><br><span class="line">914</span><br><span class="line">915</span><br><span class="line">916</span><br><span class="line">917</span><br><span class="line">918</span><br><span class="line">919</span><br><span class="line">920</span><br><span class="line">921</span><br><span class="line">922</span><br><span class="line">923</span><br><span class="line">924</span><br><span class="line">925</span><br><span class="line">926</span><br><span class="line">927</span><br><span class="line">928</span><br><span class="line">929</span><br><span class="line">930</span><br><span class="line">931</span><br><span class="line">932</span><br><span class="line">933</span><br><span class="line">934</span><br><span class="line">935</span><br><span class="line">936</span><br><span class="line">937</span><br><span class="line">938</span><br><span class="line">939</span><br><span class="line">940</span><br><span class="line">941</span><br><span class="line">942</span><br><span class="line">943</span><br><span class="line">944</span><br><span class="line">945</span><br><span class="line">946</span><br><span class="line">947</span><br><span class="line">948</span><br><span class="line">949</span><br><span class="line">950</span><br><span class="line">951</span><br><span class="line">952</span><br><span class="line">953</span><br><span class="line">954</span><br><span class="line">955</span><br><span class="line">956</span><br><span class="line">957</span><br><span class="line">958</span><br><span class="line">959</span><br><span class="line">960</span><br><span class="line">961</span><br><span class="line">962</span><br><span class="line">963</span><br><span class="line">964</span><br><span class="line">965</span><br><span class="line">966</span><br><span class="line">967</span><br><span class="line">968</span><br><span class="line">969</span><br><span class="line">970</span><br><span class="line">971</span><br><span class="line">972</span><br><span class="line">973</span><br><span class="line">974</span><br><span class="line">975</span><br><span class="line">976</span><br><span class="line">977</span><br><span class="line">978</span><br><span class="line">979</span><br><span class="line">980</span><br><span class="line">981</span><br><span class="line">982</span><br><span class="line">983</span><br><span class="line">984</span><br><span class="line">985</span><br><span class="line">986</span><br><span class="line">987</span><br><span class="line">988</span><br><span class="line">989</span><br><span class="line">990</span><br><span class="line">991</span><br><span class="line">992</span><br><span class="line">993</span><br><span class="line">994</span><br><span class="line">995</span><br><span class="line">996</span><br><span class="line">997</span><br><span class="line">998</span><br><span class="line">999</span><br><span class="line">1000</span><br><span class="line">1001</span><br><span class="line">1002</span><br><span class="line">1003</span><br><span class="line">1004</span><br><span class="line">1005</span><br><span class="line">1006</span><br><span class="line">1007</span><br><span class="line">1008</span><br><span class="line">1009</span><br><span class="line">1010</span><br><span class="line">1011</span><br><span class="line">1012</span><br><span class="line">1013</span><br><span class="line">1014</span><br><span class="line">1015</span><br><span class="line">1016</span><br><span class="line">1017</span><br><span class="line">1018</span><br><span class="line">1019</span><br><span class="line">1020</span><br><span class="line">1021</span><br><span class="line">1022</span><br><span class="line">1023</span><br><span class="line">1024</span><br><span class="line">1025</span><br><span class="line">1026</span><br><span class="line">1027</span><br><span class="line">1028</span><br><span class="line">1029</span><br><span class="line">1030</span><br><span class="line">1031</span><br><span class="line">1032</span><br><span class="line">1033</span><br><span class="line">1034</span><br><span class="line">1035</span><br><span class="line">1036</span><br><span class="line">1037</span><br><span class="line">1038</span><br><span class="line">1039</span><br><span class="line">1040</span><br><span class="line">1041</span><br><span class="line">1042</span><br><span class="line">1043</span><br><span class="line">1044</span><br><span class="line">1045</span><br><span class="line">1046</span><br><span class="line">1047</span><br><span class="line">1048</span><br><span class="line">1049</span><br><span class="line">1050</span><br><span class="line">1051</span><br><span class="line">1052</span><br><span class="line">1053</span><br><span class="line">1054</span><br><span class="line">1055</span><br><span class="line">1056</span><br><span class="line">1057</span><br><span class="line">1058</span><br><span class="line">1059</span><br><span class="line">1060</span><br><span class="line">1061</span><br><span class="line">1062</span><br><span class="line">1063</span><br><span class="line">1064</span><br><span class="line">1065</span><br><span class="line">1066</span><br><span class="line">1067</span><br><span class="line">1068</span><br><span class="line">1069</span><br><span class="line">1070</span><br><span class="line">1071</span><br><span class="line">1072</span><br><span class="line">1073</span><br><span class="line">1074</span><br><span class="line">1075</span><br><span class="line">1076</span><br><span class="line">1077</span><br><span class="line">1078</span><br><span class="line">1079</span><br><span class="line">1080</span><br><span class="line">1081</span><br><span class="line">1082</span><br><span class="line">1083</span><br><span class="line">1084</span><br><span class="line">1085</span><br><span class="line">1086</span><br><span class="line">1087</span><br><span class="line">1088</span><br><span class="line">1089</span><br><span class="line">1090</span><br><span class="line">1091</span><br><span class="line">1092</span><br><span class="line">1093</span><br><span class="line">1094</span><br><span class="line">1095</span><br><span class="line">1096</span><br><span class="line">1097</span><br><span class="line">1098</span><br><span class="line">1099</span><br><span class="line">1100</span><br><span class="line">1101</span><br><span class="line">1102</span><br><span class="line">1103</span><br><span class="line">1104</span><br><span class="line">1105</span><br><span class="line">1106</span><br><span class="line">1107</span><br><span class="line">1108</span><br><span class="line">1109</span><br><span class="line">1110</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Source code recreated from a .class file by IntelliJ IDEA</span></span><br><span class="line"><span class="comment">// (powered by FernFlower decompiler)</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> cif.dataservice.io;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cif.baseutil.CifpFileCardWrapper;</span><br><span class="line"><span class="keyword">import</span> cif.baseutil.InpFileWrapper;</span><br><span class="line"><span class="keyword">import</span> cif.dataengine.DataPath;</span><br><span class="line"><span class="keyword">import</span> cif.dataengine.io.CategoryProperties;</span><br><span class="line"><span class="keyword">import</span> cif.dataengine.io.Curve1D;</span><br><span class="line"><span class="keyword">import</span> cif.dataengine.io.Curve2D;</span><br><span class="line"><span class="keyword">import</span> cif.dataengine.io.Curve3D;</span><br><span class="line"><span class="keyword">import</span> cif.dataengine.io.CurveXD;</span><br><span class="line"><span class="keyword">import</span> cif.dataengine.io.LogCategory;</span><br><span class="line"><span class="keyword">import</span> cif.dataengine.io.LogCurve;</span><br><span class="line"><span class="keyword">import</span> cif.dataengine.io.LogCurve1D;</span><br><span class="line"><span class="keyword">import</span> cif.dataengine.io.LogCurve2D;</span><br><span class="line"><span class="keyword">import</span> cif.dataengine.io.LogCurve3D;</span><br><span class="line"><span class="keyword">import</span> cif.dataengine.io.LogDataSource;</span><br><span class="line"><span class="keyword">import</span> cif.dataengine.io.LogWell;</span><br><span class="line"><span class="keyword">import</span> cif.dataengine.io.LogWorkSpace;</span><br><span class="line"><span class="keyword">import</span> cif.dataengine.io.LoggingProperties;</span><br><span class="line"><span class="keyword">import</span> cif.dataengine.io.ReadMode;</span><br><span class="line"><span class="keyword">import</span> cif.dataengine.io.WriteMode;</span><br><span class="line"><span class="keyword">import</span> cif.dataservice.CategoryNotifiedInfo;</span><br><span class="line"><span class="keyword">import</span> cif.dataservice.NotificationMessage;</span><br><span class="line"><span class="keyword">import</span> cif.dataservice.NotificationStruct;</span><br><span class="line"><span class="keyword">import</span> cif.dataservice.client.MessageCommunicationClient;</span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.LinkedHashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.ResourceBundle;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DataServiceIntegratedIO</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">InpFileWrapper</span> <span class="variable">inpFileWrapper</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">StringBuffer</span> <span class="variable">errorMsg</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuffer</span>();</span><br><span class="line">    <span class="keyword">private</span> <span class="type">String</span> <span class="variable">inpFilePath</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">private</span> LogCategory[] inputCategorys = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">private</span> LogCategory[] outputCategorys = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">private</span> CurveItem[][] inputCurveItems = (CurveItem[][])<span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">private</span> CurveItem[][] outputCurveItems = (CurveItem[][])<span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">double</span>[] depthLevels = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> <span class="variable">isModifiedInLevel</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">double</span>[] depoLevels = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> <span class="variable">isModifiedOutLevel</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">private</span> String[] inputCurveNames = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">private</span> String[] outputCurveNames = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">private</span> String[] parameterNames = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">private</span> String[] parameterDefaultValues = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">inputCurveCount</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">outputCurveCount</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> <span class="variable">isCleaningData</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">double</span> dep;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">double</span> depo;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> ArrayList&lt;ArrayCurveSetItem&gt; inputArrayCurveSets = <span class="keyword">new</span> <span class="title class_">ArrayList</span>();</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> ArrayList&lt;ArrayCurveSetItem&gt; outputArrayCurveSets = <span class="keyword">new</span> <span class="title class_">ArrayList</span>();</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> ArrayList&lt;NotificationStruct&gt; categoryNotificationList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>();</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> LinkedHashMap&lt;String, ModifiedOutputProperty&gt; outputCurvePropertyHashMap = <span class="keyword">new</span> <span class="title class_">LinkedHashMap</span>();</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">currentZoneIndex</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">currentCategoryIndex</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">inDataCount</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">outDataCount</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">ReadMode</span> <span class="variable">readMode</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ReadMode</span>();</span><br><span class="line">    <span class="keyword">private</span> <span class="type">double</span> <span class="variable">customDepLevel</span> <span class="operator">=</span> <span class="number">99999.0</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">double</span> <span class="variable">customDepoLevel</span> <span class="operator">=</span> <span class="number">99999.0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">DataServiceIntegratedIO</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.inpFileWrapper = <span class="keyword">new</span> <span class="title class_">InpFileWrapper</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">flushData</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">LogCurve</span> <span class="variable">curve</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        CurveItem[][] var2 = <span class="built_in">this</span>.outputCurveItems;</span><br><span class="line">        <span class="type">int</span> <span class="variable">var3</span> <span class="operator">=</span> var2.length;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> var4;</span><br><span class="line">        <span class="keyword">for</span>(var4 = <span class="number">0</span>; var4 &lt; var3; ++var4) &#123;</span><br><span class="line">            CurveItem[] outputCurveItem = var2[var4];</span><br><span class="line">            CurveItem[] var6 = outputCurveItem;</span><br><span class="line">            <span class="type">int</span> <span class="variable">var7</span> <span class="operator">=</span> outputCurveItem.length;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">var8</span> <span class="operator">=</span> <span class="number">0</span>; var8 &lt; var7; ++var8) &#123;</span><br><span class="line">                <span class="type">CurveItem</span> <span class="variable">outputCurveItem1</span> <span class="operator">=</span> var6[var8];</span><br><span class="line">                curve = outputCurveItem1.getCurve();</span><br><span class="line">                <span class="keyword">if</span> (curve != <span class="literal">null</span>) &#123;</span><br><span class="line">                    curve.flush();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        LogCategory[] var10 = <span class="built_in">this</span>.inputCategorys;</span><br><span class="line">        var3 = var10.length;</span><br><span class="line"></span><br><span class="line">        LogCategory outputCategory;</span><br><span class="line">        <span class="keyword">for</span>(var4 = <span class="number">0</span>; var4 &lt; var3; ++var4) &#123;</span><br><span class="line">            outputCategory = var10[var4];</span><br><span class="line">            outputCategory.close();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        var10 = <span class="built_in">this</span>.outputCategorys;</span><br><span class="line">        var3 = var10.length;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(var4 = <span class="number">0</span>; var4 &lt; var3; ++var4) &#123;</span><br><span class="line">            outputCategory = var10[var4];</span><br><span class="line">            outputCategory.close();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">dataChangedNotification</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">MessageCommunicationClient</span> <span class="variable">client</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MessageCommunicationClient</span>();</span><br><span class="line">        <span class="keyword">if</span> (client.connectToServer()) &#123;</span><br><span class="line">            <span class="type">NotificationMessage</span> <span class="variable">message</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">this</span>.categoryNotificationList.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                message = <span class="keyword">new</span> <span class="title class_">NotificationMessage</span>();</span><br><span class="line">                message.setCommmand(<span class="number">3</span>);</span><br><span class="line">                message.setNotificationList(<span class="built_in">this</span>.categoryNotificationList);</span><br><span class="line">                client.sendMessage(message);</span><br><span class="line">                message = <span class="keyword">new</span> <span class="title class_">NotificationMessage</span>();</span><br><span class="line">                message.setCommmand(<span class="number">1</span>);</span><br><span class="line">                client.sendMessage(message);</span><br><span class="line">                message = <span class="keyword">new</span> <span class="title class_">NotificationMessage</span>();</span><br><span class="line">                message.setCommmand(<span class="number">4</span>);</span><br><span class="line">                client.sendMessage(message);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            client.disconnect();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getProcessState</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">this</span>.currentCategoryIndex == <span class="built_in">this</span>.inputCategorys.length - <span class="number">1</span> &amp;&amp; <span class="built_in">this</span>.currentZoneIndex == <span class="built_in">this</span>.inpFileWrapper.getZoneCount(<span class="built_in">this</span>.currentCategoryIndex) - <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            ++<span class="built_in">this</span>.currentCategoryIndex;</span><br><span class="line">            <span class="built_in">this</span>.currentZoneIndex = <span class="number">0</span>;</span><br><span class="line">            <span class="built_in">this</span>.dep = <span class="built_in">this</span>.depo = <span class="built_in">this</span>.inpFileWrapper.getAllZoneStartDepth(<span class="built_in">this</span>.currentCategoryIndex);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">setNextDepthRangeDepths</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">tempNum</span> <span class="operator">=</span> <span class="built_in">this</span>.currentZoneIndex;</span><br><span class="line">        ++tempNum;</span><br><span class="line">        <span class="keyword">if</span> (tempNum == <span class="built_in">this</span>.inpFileWrapper.getZoneCount(<span class="built_in">this</span>.currentCategoryIndex)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            ++<span class="built_in">this</span>.currentZoneIndex;</span><br><span class="line">            <span class="built_in">this</span>.dep = <span class="built_in">this</span>.depo = <span class="built_in">this</span>.inpFileWrapper.getZoneStartDepth(<span class="built_in">this</span>.currentCategoryIndex, <span class="built_in">this</span>.currentZoneIndex);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getDEP</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.dep;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getDEPO</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.depo;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getSDEP</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.inpFileWrapper.getZoneStartDepth(<span class="built_in">this</span>.currentCategoryIndex, <span class="built_in">this</span>.currentZoneIndex);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getEDEP</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.inpFileWrapper.getZoneEndDepth(<span class="built_in">this</span>.currentCategoryIndex, <span class="built_in">this</span>.currentZoneIndex);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getSTDEP</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.inpFileWrapper.getAllZoneStartDepth(<span class="built_in">this</span>.currentCategoryIndex);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getENDEP</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.inpFileWrapper.getAllZoneEndDepth(<span class="built_in">this</span>.currentCategoryIndex);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getRLEV</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.depthLevels[<span class="built_in">this</span>.currentCategoryIndex];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getRLEVO</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.depoLevels[<span class="built_in">this</span>.currentCategoryIndex];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">getParameterValues</span><span class="params">(<span class="type">float</span>[] values)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.inpFileWrapper.getParameterValues(<span class="built_in">this</span>.currentCategoryIndex, <span class="built_in">this</span>.currentZoneIndex, values);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getInDataCount</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">CurveItem</span> <span class="variable">item</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="built_in">this</span>.inputCurveCount; ++i) &#123;</span><br><span class="line">            item = <span class="built_in">this</span>.inputCurveItems[<span class="built_in">this</span>.currentCategoryIndex][i];</span><br><span class="line">            <span class="built_in">this</span>.inDataCount += item.getArrayNum() * item.getArraySize();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.inDataCount;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getOutDataCount</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">CurveItem</span> <span class="variable">item</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="built_in">this</span>.outputCurveCount; ++i) &#123;</span><br><span class="line">            item = <span class="built_in">this</span>.outputCurveItems[<span class="built_in">this</span>.currentCategoryIndex][i];</span><br><span class="line">            <span class="built_in">this</span>.outDataCount += item.getArrayNum() * item.getArraySize();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.outDataCount;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getDepthSegmentCount</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.inpFileWrapper.getZoneCount(<span class="built_in">this</span>.currentCategoryIndex);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getInputCurveValue</span><span class="params">(<span class="type">int</span> index, <span class="type">double</span> startDepth, <span class="type">int</span> dataCount, <span class="type">float</span>[] values)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">size</span> <span class="operator">=</span> <span class="built_in">this</span>.inputCurveItems[<span class="built_in">this</span>.currentCategoryIndex].length;</span><br><span class="line">        <span class="keyword">if</span> (index &gt;= <span class="number">0</span> &amp;&amp; index &lt; size) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">pos</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">            <span class="type">CurveItem</span> <span class="variable">curveItem</span> <span class="operator">=</span> <span class="built_in">this</span>.inputCurveItems[<span class="built_in">this</span>.currentCategoryIndex][index];</span><br><span class="line">            <span class="type">LogCurve</span> <span class="variable">curve</span> <span class="operator">=</span> curveItem.getCurve();</span><br><span class="line">            <span class="type">int</span> array2DSize;</span><br><span class="line">            <span class="type">int</span> array3DSize;</span><br><span class="line">            <span class="keyword">if</span> (curve == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">for</span>(array2DSize = <span class="number">0</span>; array2DSize &lt; curveItem.getArrayNum(); ++array2DSize) &#123;</span><br><span class="line">                    <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; dataCount; ++i) &#123;</span><br><span class="line">                        <span class="keyword">for</span>(array3DSize = <span class="number">0</span>; array3DSize &lt; curveItem.getArraySize(); ++array3DSize) &#123;</span><br><span class="line">                            values[pos++] = -<span class="number">99999.0F</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">return</span> pos;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">switch</span> (curve.getLoggingType()) &#123;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                        pos = ((LogCurve1D)curve).readData(startDepth, <span class="built_in">this</span>.depthLevels[<span class="built_in">this</span>.currentCategoryIndex], dataCount, values, <span class="built_in">this</span>.readMode);</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                        array2DSize = curveItem.getRealArraySize();</span><br><span class="line">                        <span class="type">float</span>[][] float2DBuffer = <span class="keyword">new</span> <span class="title class_">float</span>[dataCount][array2DSize];</span><br><span class="line">                        ((LogCurve2D)curve).readData(startDepth, <span class="built_in">this</span>.depthLevels[<span class="built_in">this</span>.currentCategoryIndex], dataCount, float2DBuffer, <span class="built_in">this</span>.readMode);</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">for</span>(array3DSize = <span class="number">0</span>; array3DSize &lt; dataCount; ++array3DSize) &#123;</span><br><span class="line">                            System.arraycopy(float2DBuffer[array3DSize], pos, values, pos, array2DSize);</span><br><span class="line">                            pos += array2DSize;</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">return</span> pos;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                        array3DSize = curveItem.getRealArraySize();</span><br><span class="line">                        <span class="type">int</span> <span class="variable">array3DNum</span> <span class="operator">=</span> curveItem.getRealArrayNum();</span><br><span class="line">                        <span class="type">float</span>[][] float3DBuffer = (<span class="type">float</span>[][])<span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> <span class="number">0</span>; k &lt; array3DNum; ++k) &#123;</span><br><span class="line">                            float3DBuffer = <span class="keyword">new</span> <span class="title class_">float</span>[dataCount][array3DSize];</span><br><span class="line">                            ((LogCurve3D)curve).readData(<span class="built_in">this</span>.dep, <span class="built_in">this</span>.depthLevels[<span class="built_in">this</span>.currentCategoryIndex], dataCount, k, float3DBuffer, <span class="built_in">this</span>.readMode);</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; dataCount; ++i) &#123;</span><br><span class="line">                                System.arraycopy(float3DBuffer[i], <span class="number">0</span>, values, pos, array3DSize);</span><br><span class="line">                                pos += array3DSize;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">return</span> pos;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getInputCurveValues</span><span class="params">(<span class="type">double</span> currentDep, <span class="type">float</span>[] values)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.dep = currentDep;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">this</span>.inDataCount == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="type">CurveItem</span> <span class="variable">curveItem</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">            <span class="type">LogCurve</span> <span class="variable">curve</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">            <span class="type">int</span> <span class="variable">pos</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="built_in">this</span>.inputCurveCount; ++i) &#123;</span><br><span class="line">                curveItem = <span class="built_in">this</span>.inputCurveItems[<span class="built_in">this</span>.currentCategoryIndex][i];</span><br><span class="line">                curve = curveItem.getCurve();</span><br><span class="line">                <span class="type">int</span> read2DArraySize;</span><br><span class="line">                <span class="keyword">if</span> (curve == <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; curveItem.getArrayNum(); ++j) &#123;</span><br><span class="line">                        <span class="keyword">for</span>(read2DArraySize = <span class="number">0</span>; read2DArraySize &lt; curveItem.getArraySize(); ++read2DArraySize) &#123;</span><br><span class="line">                            values[pos++] = -<span class="number">99999.0F</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="type">int</span> read3DArraySize;</span><br><span class="line">                    <span class="keyword">switch</span> (curve.getLoggingType()) &#123;</span><br><span class="line">                        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                            <span class="type">float</span>[] float1DBuffer = <span class="keyword">new</span> <span class="title class_">float</span>[]&#123;-<span class="number">99999.0F</span>&#125;;</span><br><span class="line">                            ((LogCurve1D)curve).readData(<span class="built_in">this</span>.dep, <span class="built_in">this</span>.depthLevels[<span class="built_in">this</span>.currentCategoryIndex], <span class="number">1</span>, float1DBuffer, <span class="built_in">this</span>.readMode);</span><br><span class="line">                            values[pos++] = float1DBuffer[<span class="number">0</span>];</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                            read2DArraySize = curveItem.getArraySize();</span><br><span class="line">                            <span class="type">int</span> <span class="variable">array2DSize</span> <span class="operator">=</span> curveItem.getRealArraySize();</span><br><span class="line">                            <span class="type">float</span>[][] float2DBuffer = <span class="keyword">new</span> <span class="title class_">float</span>[<span class="number">1</span>][array2DSize];</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">for</span>(read3DArraySize = <span class="number">0</span>; read3DArraySize &lt; array2DSize; ++read3DArraySize) &#123;</span><br><span class="line">                                float2DBuffer[<span class="number">0</span>][read3DArraySize] = -<span class="number">99999.0F</span>;</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            ((LogCurve2D)curve).readData(<span class="built_in">this</span>.dep, <span class="built_in">this</span>.depthLevels[<span class="built_in">this</span>.currentCategoryIndex], <span class="number">1</span>, float2DBuffer, <span class="built_in">this</span>.readMode);</span><br><span class="line">                            System.arraycopy(float2DBuffer[<span class="number">0</span>], <span class="number">0</span>, values, pos, Math.min(read2DArraySize, array2DSize));</span><br><span class="line">                            pos += read2DArraySize;</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                        <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                            read3DArraySize = curveItem.getArraySize();</span><br><span class="line">                            <span class="type">int</span> <span class="variable">read3DArrayNum</span> <span class="operator">=</span> curveItem.getArrayNum();</span><br><span class="line">                            <span class="type">int</span> <span class="variable">array3DSize</span> <span class="operator">=</span> curveItem.getRealArraySize();</span><br><span class="line">                            <span class="type">int</span> <span class="variable">array3DNum</span> <span class="operator">=</span> curveItem.getRealArrayNum();</span><br><span class="line">                            <span class="type">float</span>[][] float3DBuffer = (<span class="type">float</span>[][])<span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> <span class="number">0</span>; k &lt; Math.min(read3DArrayNum, array3DNum); ++k) &#123;</span><br><span class="line">                                float3DBuffer = <span class="keyword">new</span> <span class="title class_">float</span>[<span class="number">1</span>][array3DSize];</span><br><span class="line"></span><br><span class="line">                                <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; array3DSize; ++j) &#123;</span><br><span class="line">                                    float3DBuffer[<span class="number">0</span>][j] = -<span class="number">99999.0F</span>;</span><br><span class="line">                                &#125;</span><br><span class="line"></span><br><span class="line">                                ((LogCurve3D)curve).readData(<span class="built_in">this</span>.dep, <span class="built_in">this</span>.depthLevels[<span class="built_in">this</span>.currentCategoryIndex], <span class="number">1</span>, k, float3DBuffer, <span class="built_in">this</span>.readMode);</span><br><span class="line">                                System.arraycopy(float3DBuffer[<span class="number">0</span>], <span class="number">0</span>, values, pos, Math.min(read3DArraySize, array3DSize));</span><br><span class="line">                                pos += read3DArraySize;</span><br><span class="line">                            &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> pos;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setOutputCurveValues</span><span class="params">(<span class="type">double</span> currentDep, <span class="type">float</span>[] values)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.depo = currentDep;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">this</span>.outDataCount != <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="type">CurveItem</span> <span class="variable">curveItem</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">            <span class="type">LogCurve</span> <span class="variable">curve</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">            <span class="type">int</span> <span class="variable">pos</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="built_in">this</span>.outputCurveCount; ++i) &#123;</span><br><span class="line">                curveItem = <span class="built_in">this</span>.outputCurveItems[<span class="built_in">this</span>.currentCategoryIndex][i];</span><br><span class="line">                curve = curveItem.getCurve();</span><br><span class="line">                <span class="keyword">switch</span> (curve.getLoggingType()) &#123;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                        <span class="type">float</span>[] float1DBuffer = <span class="keyword">new</span> <span class="title class_">float</span>[]&#123;values[pos++]&#125;;</span><br><span class="line">                        ((LogCurve1D)curve).writeData(<span class="built_in">this</span>.depo, <span class="number">1</span>, float1DBuffer, (WriteMode)<span class="literal">null</span>);</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                        <span class="type">int</span> <span class="variable">write2DArraySize</span> <span class="operator">=</span> curveItem.getArraySize();</span><br><span class="line">                        <span class="type">int</span> <span class="variable">array2DSize</span> <span class="operator">=</span> curveItem.getRealArraySize();</span><br><span class="line">                        <span class="type">float</span>[][] float2DBuffer = <span class="keyword">new</span> <span class="title class_">float</span>[<span class="number">1</span>][array2DSize];</span><br><span class="line">                        System.arraycopy(values, pos, float2DBuffer[<span class="number">0</span>], <span class="number">0</span>, Math.min(write2DArraySize, array2DSize));</span><br><span class="line">                        ((LogCurve2D)curve).writeData(<span class="built_in">this</span>.depo, <span class="number">1</span>, float2DBuffer, (WriteMode)<span class="literal">null</span>);</span><br><span class="line">                        pos += write2DArraySize;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                        <span class="type">int</span> <span class="variable">write3DArraySize</span> <span class="operator">=</span> curveItem.getArraySize();</span><br><span class="line">                        <span class="type">int</span> <span class="variable">write3DArrayNum</span> <span class="operator">=</span> curveItem.getArrayNum();</span><br><span class="line">                        <span class="type">int</span> <span class="variable">array3DNum</span> <span class="operator">=</span> curveItem.getRealArrayNum();</span><br><span class="line">                        <span class="type">int</span> <span class="variable">array3DSize</span> <span class="operator">=</span> curveItem.getRealArraySize();</span><br><span class="line">                        <span class="type">float</span>[][] float3DBuffer = (<span class="type">float</span>[][])<span class="literal">null</span>;</span><br><span class="line">                        <span class="type">int</span> <span class="variable">init3DSize</span> <span class="operator">=</span> Math.min(write3DArraySize, array3DSize);</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> <span class="number">0</span>; k &lt; Math.min(write3DArrayNum, array3DNum); ++k) &#123;</span><br><span class="line">                            float3DBuffer = <span class="keyword">new</span> <span class="title class_">float</span>[<span class="number">1</span>][array3DSize];</span><br><span class="line">                            System.arraycopy(values, pos, float3DBuffer[<span class="number">0</span>], <span class="number">0</span>, init3DSize);</span><br><span class="line">                            ((LogCurve3D)curve).writeData(<span class="built_in">this</span>.depo, k, <span class="number">1</span>, float3DBuffer, (WriteMode)<span class="literal">null</span>);</span><br><span class="line">                            pos += write3DArraySize;</span><br><span class="line">                        &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setInArrayCurve</span><span class="params">(String str)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (str != <span class="literal">null</span> &amp;&amp; !str.trim().isEmpty()) &#123;</span><br><span class="line">            String[] arrayCurves = str.trim().split(<span class="string">&quot;;&quot;</span>);</span><br><span class="line">            String[] var3 = arrayCurves;</span><br><span class="line">            <span class="type">int</span> <span class="variable">var4</span> <span class="operator">=</span> arrayCurves.length;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">var5</span> <span class="operator">=</span> <span class="number">0</span>; var5 &lt; var4; ++var5) &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">arrayCurve</span> <span class="operator">=</span> var3[var5];</span><br><span class="line">                String[] curve = arrayCurve.split(<span class="string">&quot;,&quot;</span>);</span><br><span class="line">                <span class="keyword">if</span> (curve.length == <span class="number">3</span>) &#123;</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> curve[<span class="number">0</span>].trim();</span><br><span class="line">                        <span class="type">int</span> <span class="variable">arrayNum</span> <span class="operator">=</span> Integer.parseInt(curve[<span class="number">1</span>].trim());</span><br><span class="line">                        <span class="type">int</span> <span class="variable">arraySize</span> <span class="operator">=</span> Integer.parseInt(curve[<span class="number">2</span>].trim());</span><br><span class="line">                        <span class="built_in">this</span>.inputArrayCurveSets.add(<span class="keyword">new</span> <span class="title class_">ArrayCurveSetItem</span>(name, arrayNum, arraySize));</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (NumberFormatException var11) &#123;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setOutArrayCurve</span><span class="params">(String str)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (str != <span class="literal">null</span> &amp;&amp; !str.trim().isEmpty()) &#123;</span><br><span class="line">            String[] arrayCurves = str.trim().split(<span class="string">&quot;;&quot;</span>);</span><br><span class="line">            String[] var3 = arrayCurves;</span><br><span class="line">            <span class="type">int</span> <span class="variable">var4</span> <span class="operator">=</span> arrayCurves.length;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">var5</span> <span class="operator">=</span> <span class="number">0</span>; var5 &lt; var4; ++var5) &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">arrayCurve</span> <span class="operator">=</span> var3[var5];</span><br><span class="line">                String[] curve = arrayCurve.split(<span class="string">&quot;,&quot;</span>);</span><br><span class="line">                <span class="keyword">if</span> (curve.length == <span class="number">3</span>) &#123;</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> curve[<span class="number">0</span>].trim();</span><br><span class="line">                        <span class="type">int</span> <span class="variable">arrayNum</span> <span class="operator">=</span> Integer.parseInt(curve[<span class="number">1</span>].trim());</span><br><span class="line">                        <span class="type">int</span> <span class="variable">arraySize</span> <span class="operator">=</span> Integer.parseInt(curve[<span class="number">2</span>].trim());</span><br><span class="line">                        <span class="built_in">this</span>.outputArrayCurveSets.add(<span class="keyword">new</span> <span class="title class_">ArrayCurveSetItem</span>(name, arrayNum, arraySize));</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (NumberFormatException var11) &#123;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setOutputCurveUnit</span><span class="params">(String str)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (str != <span class="literal">null</span> &amp;&amp; !str.trim().isEmpty()) &#123;</span><br><span class="line">            String[] curveUnits = str.trim().split(<span class="string">&quot;;&quot;</span>);</span><br><span class="line">            String[] var3 = curveUnits;</span><br><span class="line">            <span class="type">int</span> <span class="variable">var4</span> <span class="operator">=</span> curveUnits.length;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">var5</span> <span class="operator">=</span> <span class="number">0</span>; var5 &lt; var4; ++var5) &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">curveUnit1</span> <span class="operator">=</span> var3[var5];</span><br><span class="line">                String[] curveUnitItem = curveUnit1.split(<span class="string">&quot;,&quot;</span>);</span><br><span class="line">                <span class="type">String</span> <span class="variable">curveName</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">                <span class="type">String</span> <span class="variable">curveUnit</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">                <span class="keyword">if</span> (curveUnitItem.length == <span class="number">2</span>) &#123;</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        curveName = curveUnitItem[<span class="number">0</span>].trim().toUpperCase();</span><br><span class="line">                        curveUnit = curveUnitItem[<span class="number">1</span>].trim();</span><br><span class="line">                        <span class="type">ModifiedOutputProperty</span> <span class="variable">modifiedOutputProperty</span> <span class="operator">=</span> (ModifiedOutputProperty)<span class="built_in">this</span>.outputCurvePropertyHashMap.get(curveName);</span><br><span class="line">                        <span class="keyword">if</span> (modifiedOutputProperty == <span class="literal">null</span>) &#123;</span><br><span class="line">                            modifiedOutputProperty = <span class="keyword">new</span> <span class="title class_">ModifiedOutputProperty</span>();</span><br><span class="line">                            <span class="built_in">this</span>.outputCurvePropertyHashMap.put(curveName, modifiedOutputProperty);</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        modifiedOutputProperty.setCurveUnit(curveUnit);</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (NumberFormatException var11) &#123;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setZero</span><span class="params">(<span class="type">int</span> bzero)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.isCleaningData = bzero == <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">setOutputCifpPath</span><span class="params">(String cifpPath)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (cifpPath != <span class="literal">null</span> &amp;&amp; !cifpPath.trim().isEmpty()) &#123;</span><br><span class="line">            <span class="keyword">if</span> (cifpPath.endsWith(<span class="string">&quot;.wells&quot;</span>)) &#123;</span><br><span class="line">                <span class="type">CifpFileCardWrapper</span> <span class="variable">cifpFileWrapper</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CifpFileCardWrapper</span>();</span><br><span class="line">                <span class="keyword">if</span> (cifpFileWrapper.read(cifpPath) != <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="built_in">this</span>.errorMsg.append(<span class="string">&quot;Output Cifp File Path Parsing Error!\r\n&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> cifpFileWrapper.getCifpFileCount();</span><br><span class="line">                <span class="built_in">this</span>.outputCategorys = <span class="keyword">new</span> <span class="title class_">LogCategory</span>[count];</span><br><span class="line"></span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; count; ++i) &#123;</span><br><span class="line">                    <span class="built_in">this</span>.outputCategorys[i] = <span class="built_in">this</span>.getCategory(cifpFileWrapper.getCifpFile(i), <span class="literal">false</span>);</span><br><span class="line">                    <span class="keyword">if</span> (<span class="built_in">this</span>.outputCategorys[i] == <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="built_in">this</span>.errorMsg.append(<span class="string">&quot;Output Cifp File Path Parsing Error!\r\n&quot;</span>);</span><br><span class="line">                        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="built_in">this</span>.outputCategorys = <span class="keyword">new</span> <span class="title class_">LogCategory</span>[<span class="number">1</span>];</span><br><span class="line">                <span class="built_in">this</span>.outputCategorys[<span class="number">0</span>] = <span class="built_in">this</span>.getCategory(cifpPath, <span class="literal">false</span>);</span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">this</span>.outputCategorys[<span class="number">0</span>] == <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="built_in">this</span>.errorMsg.append(<span class="string">&quot;Output Cifp File Path Parsing Error!\r\n&quot;</span>);</span><br><span class="line">                    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">this</span>.errorMsg.append(<span class="string">&quot;Null Path For Output Cifp File!\r\n&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setInterpolation</span><span class="params">(<span class="type">int</span> mode)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.readMode.interpolationMode = (<span class="type">byte</span>)mode;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setInputDepthLevel</span><span class="params">(<span class="type">double</span> depLevel)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.customDepLevel = depLevel;</span><br><span class="line">        <span class="built_in">this</span>.isModifiedInLevel = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setOutputDepthLevel</span><span class="params">(<span class="type">double</span> depLevel)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.customDepoLevel = depLevel;</span><br><span class="line">        <span class="built_in">this</span>.isModifiedOutLevel = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">readInpFile</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">this</span>.inputCurveNames != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="built_in">this</span>.inpFileWrapper.setInputCurveNames(<span class="built_in">this</span>.inputCurveNames);</span><br><span class="line">            <span class="built_in">this</span>.inputCurveCount = <span class="built_in">this</span>.inputCurveNames.length;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">this</span>.outputCurveNames != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="built_in">this</span>.inpFileWrapper.setOutputCurveNames(<span class="built_in">this</span>.outputCurveNames);</span><br><span class="line">            <span class="built_in">this</span>.outputCurveCount = <span class="built_in">this</span>.outputCurveNames.length;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">this</span>.parameterNames != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="built_in">this</span>.inpFileWrapper.setParameterNames(<span class="built_in">this</span>.parameterNames);</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">this</span>.parameterDefaultValues != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="built_in">this</span>.inpFileWrapper.setParameterDefaultValues(<span class="built_in">this</span>.parameterDefaultValues);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">retCode</span> <span class="operator">=</span> <span class="built_in">this</span>.inpFileWrapper.readInpFile(<span class="built_in">this</span>.inpFilePath);</span><br><span class="line">        <span class="keyword">if</span> (retCode == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!<span class="built_in">this</span>.setInputCurves()) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="built_in">this</span>.computeDepthLevel();</span><br><span class="line">                <span class="keyword">if</span> (!<span class="built_in">this</span>.setOutputCurves()) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="built_in">this</span>.dep = <span class="built_in">this</span>.depo = <span class="built_in">this</span>.inpFileWrapper.getAllZoneStartDepth(<span class="built_in">this</span>.currentCategoryIndex);</span><br><span class="line">                    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="built_in">this</span>.inpFileWrapper.getErrorMessageCount(); ++i) &#123;</span><br><span class="line">                <span class="built_in">this</span>.errorMsg.append(<span class="built_in">this</span>.inpFileWrapper.getErrorMessage(i)).append(<span class="string">&quot;\r\n&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setInputCurveNames</span><span class="params">(String[] curveNames)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (curveNames != <span class="literal">null</span> &amp;&amp; curveNames.length != <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="built_in">this</span>.inputCurveNames = curveNames;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setOutputCurveNames</span><span class="params">(String[] curveNames)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (curveNames != <span class="literal">null</span> &amp;&amp; curveNames.length != <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="built_in">this</span>.outputCurveNames = curveNames;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setParameterNames</span><span class="params">(String[] curveNames)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (curveNames != <span class="literal">null</span> &amp;&amp; curveNames.length != <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="built_in">this</span>.parameterNames = curveNames;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setParameterDefaultValues</span><span class="params">(<span class="type">float</span>[] values)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (values != <span class="literal">null</span> &amp;&amp; values.length != <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="built_in">this</span>.parameterDefaultValues = <span class="keyword">new</span> <span class="title class_">String</span>[values.length];</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; values.length; ++i) &#123;</span><br><span class="line">                <span class="built_in">this</span>.parameterDefaultValues[i] = String.valueOf(values[i]);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getErrorMessage</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.errorMsg.toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">setInpFilePath</span><span class="params">(String inpPath)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (inpPath != <span class="literal">null</span> &amp;&amp; !inpPath.trim().isEmpty()) &#123;</span><br><span class="line">            <span class="built_in">this</span>.inpFilePath = inpPath.trim();</span><br><span class="line">            <span class="type">File</span> <span class="variable">file</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(<span class="built_in">this</span>.inpFilePath);</span><br><span class="line">            <span class="keyword">if</span> (!file.exists()) &#123;</span><br><span class="line">                <span class="built_in">this</span>.errorMsg.append(<span class="string">&quot;Parameter Card Not Found!\r\n&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">this</span>.errorMsg.append(<span class="string">&quot;Null Path For Parameter Card!\r\n&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getCifpCount</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.inputCategorys != <span class="literal">null</span> &amp;&amp; <span class="built_in">this</span>.inputCategorys.length != <span class="number">0</span> ? <span class="built_in">this</span>.inputCategorys.length : <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getCifpPath</span><span class="params">(<span class="type">int</span> index)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.inputCategorys != <span class="literal">null</span> &amp;&amp; <span class="built_in">this</span>.inputCategorys.length != <span class="number">0</span> &amp;&amp; index &gt;= <span class="number">1</span> &amp;&amp; index &lt;= <span class="built_in">this</span>.inputCategorys.length ? (<span class="keyword">new</span> <span class="title class_">DataPath</span>(<span class="built_in">this</span>.inputCategorys[index - <span class="number">1</span>])).toFullString() : <span class="string">&quot;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">setCifpPath</span><span class="params">(String cifpPath)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (cifpPath != <span class="literal">null</span> &amp;&amp; !cifpPath.trim().isEmpty()) &#123;</span><br><span class="line">            <span class="keyword">if</span> (cifpPath.endsWith(<span class="string">&quot;.wells&quot;</span>)) &#123;</span><br><span class="line">                <span class="type">CifpFileCardWrapper</span> <span class="variable">cifpFileWrapper</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CifpFileCardWrapper</span>();</span><br><span class="line">                <span class="keyword">if</span> (cifpFileWrapper.read(cifpPath) != <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="built_in">this</span>.errorMsg.append(<span class="string">&quot;Cifp File Path Parsing Error!\r\n&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> cifpFileWrapper.getCifpFileCount();</span><br><span class="line">                <span class="built_in">this</span>.inputCategorys = <span class="keyword">new</span> <span class="title class_">LogCategory</span>[count];</span><br><span class="line"></span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; count; ++i) &#123;</span><br><span class="line">                    <span class="built_in">this</span>.inputCategorys[i] = <span class="built_in">this</span>.getCategory(cifpFileWrapper.getCifpFile(i), <span class="literal">false</span>);</span><br><span class="line">                    <span class="keyword">if</span> (<span class="built_in">this</span>.inputCategorys[i] == <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="built_in">this</span>.errorMsg.append(<span class="string">&quot;Cifp File Path Parsing Error!\r\n&quot;</span>);</span><br><span class="line">                        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="built_in">this</span>.inputCategorys = <span class="keyword">new</span> <span class="title class_">LogCategory</span>[<span class="number">1</span>];</span><br><span class="line">                <span class="built_in">this</span>.inputCategorys[<span class="number">0</span>] = <span class="built_in">this</span>.getCategory(cifpPath, <span class="literal">false</span>);</span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">this</span>.inputCategorys[<span class="number">0</span>] == <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="built_in">this</span>.errorMsg.append(<span class="string">&quot;Cifp File Path Parsing Error!\r\n&quot;</span>);</span><br><span class="line">                    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">this</span>.outputCategorys == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="built_in">this</span>.outputCategorys = <span class="built_in">this</span>.inputCategorys;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">this</span>.errorMsg.append(<span class="string">&quot;Null Path For Cifp File!\r\n&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> LogCurve <span class="title function_">getSpecifiedCurve</span><span class="params">(LogCategory category, String curveName)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> curveName != <span class="literal">null</span> &amp;&amp; !curveName.trim().isEmpty() ? category.getLogCurve(curveName.trim()) : <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> CurveProperty <span class="title function_">getInputCurveProperty</span><span class="params">(<span class="type">int</span> index)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (index &gt;= <span class="number">0</span> &amp;&amp; index &lt;= <span class="built_in">this</span>.inputCurveCount - <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="type">CurveProperty</span> <span class="variable">curveProperty</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CurveProperty</span>();</span><br><span class="line">            <span class="type">LogCurve</span> <span class="variable">curve</span> <span class="operator">=</span> <span class="built_in">this</span>.getSpecifiedCurve(<span class="built_in">this</span>.inputCategorys[<span class="built_in">this</span>.currentCategoryIndex], <span class="built_in">this</span>.inpFileWrapper.getInputCurveRedirection(<span class="built_in">this</span>.currentCategoryIndex, index));</span><br><span class="line">            <span class="keyword">if</span> (curve == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">LoggingProperties</span> <span class="variable">properties</span> <span class="operator">=</span> curve.getLoggingProperties();</span><br><span class="line">                curveProperty.curveName = properties.getLoggingName();</span><br><span class="line">                curveProperty.curveUnit = properties.getCurveUnit();</span><br><span class="line">                curveProperty.startDepth = properties.getStartDepth();</span><br><span class="line">                curveProperty.endDepth = properties.getEndDepth();</span><br><span class="line">                curveProperty.depthLevel = properties.getDepthLevel();</span><br><span class="line">                curveProperty.arrayNum = properties.getArrayNum();</span><br><span class="line">                curveProperty.timeSampleNum = properties.getTimeSampleNum();</span><br><span class="line">                curveProperty.timeSampleUnit = properties.getTimeSampleUnit();</span><br><span class="line">                curveProperty.timeSampleStartTime = properties.getTimeSampleStartTime();</span><br><span class="line">                curveProperty.timeSampleLevel = properties.getTimeSampleLevel();</span><br><span class="line">                <span class="keyword">return</span> curveProperty;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getRedirectionInputCurveName</span><span class="params">(<span class="type">int</span> index)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> index &gt;= <span class="number">0</span> &amp;&amp; index &lt;= <span class="built_in">this</span>.inputCurveCount - <span class="number">1</span> ? <span class="built_in">this</span>.inpFileWrapper.getInputCurveRedirection(<span class="built_in">this</span>.currentCategoryIndex, index) : <span class="string">&quot;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getRedirectionOutputCurveName</span><span class="params">(<span class="type">int</span> index)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> index &gt;= <span class="number">0</span> &amp;&amp; index &lt;= <span class="built_in">this</span>.inputCurveCount - <span class="number">1</span> ? <span class="built_in">this</span>.inpFileWrapper.getOutputCurveRedirection(<span class="built_in">this</span>.currentCategoryIndex, index) : <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getInputCurveExistFlag</span><span class="params">(<span class="type">int</span> index)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (index &gt;= <span class="number">0</span> &amp;&amp; index &lt;= <span class="built_in">this</span>.inputCurveCount - <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">this</span>.getSpecifiedCurve(<span class="built_in">this</span>.inputCategorys[<span class="built_in">this</span>.currentCategoryIndex], <span class="built_in">this</span>.inpFileWrapper.getInputCurveRedirection(<span class="built_in">this</span>.currentCategoryIndex, index)) == <span class="literal">null</span> ? <span class="number">0</span> : <span class="number">1</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">getInputCurveValue</span><span class="params">(<span class="type">double</span> depth, <span class="type">int</span> index, <span class="type">float</span>[] values)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (index &gt;= <span class="number">0</span> &amp;&amp; index &lt;= <span class="built_in">this</span>.inputCurveCount) &#123;</span><br><span class="line">            <span class="type">CurveItem</span> <span class="variable">curveItem</span> <span class="operator">=</span> <span class="built_in">this</span>.inputCurveItems[<span class="built_in">this</span>.currentCategoryIndex][index];</span><br><span class="line">            <span class="type">LogCurve</span> <span class="variable">curve</span> <span class="operator">=</span> curveItem.getCurve();</span><br><span class="line">            <span class="type">int</span> j;</span><br><span class="line">            <span class="type">int</span> k;</span><br><span class="line">            <span class="keyword">if</span> (curve == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="type">int</span> <span class="variable">arraySize</span> <span class="operator">=</span> curveItem.getArraySize();</span><br><span class="line"></span><br><span class="line">                <span class="keyword">for</span>(j = <span class="number">0</span>; j &lt; curveItem.getArrayNum(); ++j) &#123;</span><br><span class="line">                    <span class="keyword">for</span>(k = <span class="number">0</span>; k &lt; arraySize; ++k) &#123;</span><br><span class="line">                        values[j * arraySize + k] = -<span class="number">99999.0F</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">int</span> read3DArraySize;</span><br><span class="line">                <span class="keyword">switch</span> (curve.getLoggingType()) &#123;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                        <span class="type">float</span>[] float1DBuffer = <span class="keyword">new</span> <span class="title class_">float</span>[]&#123;-<span class="number">99999.0F</span>&#125;;</span><br><span class="line">                        ((LogCurve1D)curve).readData(depth, <span class="built_in">this</span>.depthLevels[<span class="built_in">this</span>.currentCategoryIndex], <span class="number">1</span>, float1DBuffer, <span class="built_in">this</span>.readMode);</span><br><span class="line">                        values[<span class="number">0</span>] = float1DBuffer[<span class="number">0</span>];</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                        j = curveItem.getArraySize();</span><br><span class="line">                        k = curveItem.getRealArraySize();</span><br><span class="line">                        <span class="type">float</span>[][] float2DBuffer = <span class="keyword">new</span> <span class="title class_">float</span>[<span class="number">1</span>][k];</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">for</span>(read3DArraySize = <span class="number">0</span>; read3DArraySize &lt; k; ++read3DArraySize) &#123;</span><br><span class="line">                            float2DBuffer[<span class="number">0</span>][read3DArraySize] = -<span class="number">99999.0F</span>;</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        ((LogCurve2D)curve).readData(depth, <span class="built_in">this</span>.depthLevels[<span class="built_in">this</span>.currentCategoryIndex], <span class="number">1</span>, float2DBuffer, <span class="built_in">this</span>.readMode);</span><br><span class="line">                        System.arraycopy(float2DBuffer[<span class="number">0</span>], <span class="number">0</span>, values, <span class="number">0</span>, Math.min(j, k));</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                        read3DArraySize = curveItem.getArraySize();</span><br><span class="line">                        <span class="type">int</span> <span class="variable">read3DArrayNum</span> <span class="operator">=</span> curveItem.getArrayNum();</span><br><span class="line">                        <span class="type">int</span> <span class="variable">array3DSize</span> <span class="operator">=</span> curveItem.getRealArraySize();</span><br><span class="line">                        <span class="type">int</span> <span class="variable">array3DNum</span> <span class="operator">=</span> curveItem.getRealArrayNum();</span><br><span class="line">                        <span class="type">float</span>[][] float3DBuffer = (<span class="type">float</span>[][])<span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> <span class="number">0</span>; k &lt; Math.min(read3DArrayNum, array3DNum); ++k) &#123;</span><br><span class="line">                            float3DBuffer = <span class="keyword">new</span> <span class="title class_">float</span>[<span class="number">1</span>][array3DSize];</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; array3DSize; ++j) &#123;</span><br><span class="line">                                float3DBuffer[<span class="number">0</span>][j] = -<span class="number">99999.0F</span>;</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            ((LogCurve3D)curve).readData(depth, <span class="built_in">this</span>.depthLevels[<span class="built_in">this</span>.currentCategoryIndex], <span class="number">1</span>, k, float3DBuffer, <span class="built_in">this</span>.readMode);</span><br><span class="line">                            System.arraycopy(float3DBuffer[<span class="number">0</span>], <span class="number">0</span>, values, <span class="number">0</span>, Math.min(read3DArraySize, array3DSize));</span><br><span class="line">                        &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">setOutputCurveValue</span><span class="params">(<span class="type">int</span> index, <span class="type">double</span> startDepth, <span class="type">int</span> dataCount, <span class="type">float</span>[] values)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (index &gt;= <span class="number">0</span> &amp;&amp; index &lt;= <span class="built_in">this</span>.outputCurveCount) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">writeCount</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">            <span class="type">CurveItem</span> <span class="variable">curveItem</span> <span class="operator">=</span> <span class="built_in">this</span>.outputCurveItems[<span class="built_in">this</span>.currentCategoryIndex][index];</span><br><span class="line">            <span class="type">LogCurve</span> <span class="variable">curve</span> <span class="operator">=</span> curveItem.getCurve();</span><br><span class="line">            <span class="type">int</span> array3DSize;</span><br><span class="line">            <span class="keyword">switch</span> (curve.getLoggingType()) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                    writeCount = ((LogCurve1D)curve).writeData(startDepth, dataCount, values, (WriteMode)<span class="literal">null</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                    <span class="type">int</span> <span class="variable">array2DSize</span> <span class="operator">=</span> ((LogCurve2D)curve).getTimeSampleCount();</span><br><span class="line">                    <span class="type">float</span>[][] float2DBuffer = <span class="keyword">new</span> <span class="title class_">float</span>[dataCount][array2DSize];</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">for</span>(array3DSize = <span class="number">0</span>; array3DSize &lt; dataCount; ++array3DSize) &#123;</span><br><span class="line">                        System.arraycopy(values, array3DSize * array2DSize, float2DBuffer[array3DSize], <span class="number">0</span>, array2DSize);</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    writeCount = ((LogCurve2D)curve).writeData(startDepth, dataCount, float2DBuffer, (WriteMode)<span class="literal">null</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                    array3DSize = ((LogCurve3D)curve).getTimeSampleCount();</span><br><span class="line">                    <span class="type">int</span> <span class="variable">array3DNum</span> <span class="operator">=</span> ((LogCurve3D)curve).getArrayNum();</span><br><span class="line">                    <span class="type">float</span>[][] float3DBuffer = (<span class="type">float</span>[][])<span class="literal">null</span>;</span><br><span class="line">                    <span class="type">int</span> <span class="variable">pos</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> <span class="number">0</span>; k &lt; array3DNum; ++k) &#123;</span><br><span class="line">                        float3DBuffer = <span class="keyword">new</span> <span class="title class_">float</span>[dataCount][array3DSize];</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; dataCount; ++i) &#123;</span><br><span class="line">                            System.arraycopy(values, pos, float3DBuffer[i], <span class="number">0</span>, array3DSize);</span><br><span class="line">                            pos += array3DSize;</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        writeCount += ((LogCurve3D)curve).writeData(startDepth, k, dataCount, float3DBuffer, (WriteMode)<span class="literal">null</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> writeCount;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setOutputCurveValue</span><span class="params">(<span class="type">double</span> depth, <span class="type">int</span> index, <span class="type">float</span>[] values)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (index &gt;= <span class="number">0</span> &amp;&amp; index &lt;= <span class="built_in">this</span>.outputCurveCount) &#123;</span><br><span class="line">            <span class="type">CurveItem</span> <span class="variable">curveItem</span> <span class="operator">=</span> <span class="built_in">this</span>.outputCurveItems[<span class="built_in">this</span>.currentCategoryIndex][index];</span><br><span class="line">            <span class="type">LogCurve</span> <span class="variable">curve</span> <span class="operator">=</span> curveItem.getCurve();</span><br><span class="line">            <span class="keyword">switch</span> (curve.getLoggingType()) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                    <span class="type">float</span>[] float1DBuffer = <span class="keyword">new</span> <span class="title class_">float</span>[]&#123;values[<span class="number">0</span>]&#125;;</span><br><span class="line">                    ((LogCurve1D)curve).writeData(depth, <span class="number">1</span>, float1DBuffer, (WriteMode)<span class="literal">null</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                    <span class="type">int</span> <span class="variable">write2DArraySize</span> <span class="operator">=</span> curveItem.getArraySize();</span><br><span class="line">                    <span class="type">int</span> <span class="variable">array2DSize</span> <span class="operator">=</span> curveItem.getRealArraySize();</span><br><span class="line">                    <span class="type">float</span>[][] float2DBuffer = <span class="keyword">new</span> <span class="title class_">float</span>[<span class="number">1</span>][array2DSize];</span><br><span class="line">                    System.arraycopy(values, <span class="number">0</span>, float2DBuffer[<span class="number">0</span>], <span class="number">0</span>, Math.min(write2DArraySize, array2DSize));</span><br><span class="line">                    ((LogCurve2D)curve).writeData(depth, <span class="number">1</span>, float2DBuffer, (WriteMode)<span class="literal">null</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                    <span class="type">int</span> <span class="variable">write3DArraySize</span> <span class="operator">=</span> curveItem.getArraySize();</span><br><span class="line">                    <span class="type">int</span> <span class="variable">write3DArrayNum</span> <span class="operator">=</span> curveItem.getArrayNum();</span><br><span class="line">                    <span class="type">int</span> <span class="variable">array3DNum</span> <span class="operator">=</span> curveItem.getRealArrayNum();</span><br><span class="line">                    <span class="type">int</span> <span class="variable">array3DSize</span> <span class="operator">=</span> curveItem.getRealArraySize();</span><br><span class="line">                    <span class="type">float</span>[][] float3DBuffer = (<span class="type">float</span>[][])<span class="literal">null</span>;</span><br><span class="line">                    <span class="type">int</span> <span class="variable">init3DSize</span> <span class="operator">=</span> Math.min(write3DArraySize, array3DSize);</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> <span class="number">0</span>; k &lt; Math.min(write3DArrayNum, array3DNum); ++k) &#123;</span><br><span class="line">                        float3DBuffer = <span class="keyword">new</span> <span class="title class_">float</span>[<span class="number">1</span>][array3DSize];</span><br><span class="line">                        System.arraycopy(values, <span class="number">0</span>, float3DBuffer[<span class="number">0</span>], <span class="number">0</span>, init3DSize);</span><br><span class="line">                        ((LogCurve3D)curve).writeData(depth, k, <span class="number">1</span>, float3DBuffer, (WriteMode)<span class="literal">null</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> <span class="title function_">setOutputCurves</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">outputCategoryCount</span> <span class="operator">=</span> <span class="built_in">this</span>.outputCategorys.length;</span><br><span class="line">        <span class="built_in">this</span>.outputCurveItems = <span class="keyword">new</span> <span class="title class_">CurveItem</span>[outputCategoryCount][<span class="built_in">this</span>.outputCurveCount];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; outputCategoryCount; ++i) &#123;</span><br><span class="line">            <span class="type">LogCurve</span> <span class="variable">curve</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">            <span class="type">String</span> <span class="variable">redirectionCurveName</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">            <span class="type">boolean</span> <span class="variable">addCurveFlag</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">            <span class="type">boolean</span> <span class="variable">overwriteCurveFlag</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">            <span class="type">double</span> <span class="variable">processStartDepth</span> <span class="operator">=</span> <span class="built_in">this</span>.inpFileWrapper.getAllZoneStartDepth(i);</span><br><span class="line">            <span class="type">double</span> <span class="variable">processEndDepth</span> <span class="operator">=</span> <span class="built_in">this</span>.inpFileWrapper.getAllZoneEndDepth(i);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; <span class="built_in">this</span>.outputCurveCount; ++j) &#123;</span><br><span class="line">                redirectionCurveName = <span class="built_in">this</span>.inpFileWrapper.getOutputCurveRedirection(i, j);</span><br><span class="line">                curve = <span class="built_in">this</span>.getSpecifiedCurve(<span class="built_in">this</span>.outputCategorys[i], redirectionCurveName);</span><br><span class="line">                <span class="type">ArrayCurveSetItem</span> <span class="variable">item</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">                <span class="type">int</span> <span class="variable">outputArrayCurveSetsCount</span> <span class="operator">=</span> <span class="built_in">this</span>.outputArrayCurveSets.size();</span><br><span class="line"></span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">z</span> <span class="operator">=</span> <span class="number">0</span>; z &lt; outputArrayCurveSetsCount; ++z) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (((ArrayCurveSetItem)<span class="built_in">this</span>.outputArrayCurveSets.get(z)).getCurveName().equalsIgnoreCase(<span class="built_in">this</span>.inpFileWrapper.getOutputCurveOriginName(i, j))) &#123;</span><br><span class="line">                        item = (ArrayCurveSetItem)<span class="built_in">this</span>.outputArrayCurveSets.get(z);</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (curve != <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (!(Math.abs(curve.getDepthLevel() - <span class="built_in">this</span>.depoLevels[i]) &lt; <span class="number">1.0E-5</span>)) &#123;</span><br><span class="line">                        <span class="built_in">this</span>.errorMsg.append(curve.getName()).append(ResourceBundle.getBundle(<span class="string">&quot;cif/dataservice/io/Bundle&quot;</span>).getString(<span class="string">&quot;DataServiceIntegratedIO.setOutputCurves.errorMsg1&quot;</span>)).append(<span class="string">&quot;\r\n&quot;</span>);</span><br><span class="line">                        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="type">double</span> <span class="variable">startDepth</span> <span class="operator">=</span> curve.getStartDepth();</span><br><span class="line">                    <span class="type">double</span> <span class="variable">endDepth</span> <span class="operator">=</span> curve.getEndDepth();</span><br><span class="line">                    <span class="keyword">if</span> (startDepth &gt; processStartDepth || endDepth &lt; processEndDepth) &#123;</span><br><span class="line">                        curve.changeDepthRange(Math.min(startDepth, processStartDepth), Math.max(endDepth, processEndDepth), <span class="literal">true</span>);</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span> (item != <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">if</span> (curve.getArrayNum() &lt; item.getArrayNum()) &#123;</span><br><span class="line">                            <span class="built_in">this</span>.errorMsg.append(curve.getName()).append(ResourceBundle.getBundle(<span class="string">&quot;cif/dataservice/io/Bundle&quot;</span>).getString(<span class="string">&quot;DataServiceIntegratedIO.setOutputCurves.errorMsg2&quot;</span>)).append(<span class="string">&quot;\r\n&quot;</span>);</span><br><span class="line">                            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">if</span> (curve.getTimeSampleCount() != item.getArraySize()) &#123;</span><br><span class="line">                            <span class="built_in">this</span>.errorMsg.append(curve.getName()).append(ResourceBundle.getBundle(<span class="string">&quot;cif/dataservice/io/Bundle&quot;</span>).getString(<span class="string">&quot;DataServiceIntegratedIO.setOutputCurves.errorMsg3&quot;</span>)).append(<span class="string">&quot;\r\n&quot;</span>);</span><br><span class="line">                            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        <span class="built_in">this</span>.outputCurveItems[i][j] = <span class="keyword">new</span> <span class="title class_">CurveItem</span>(curve, item.getArrayNum(), item.getArraySize());</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="built_in">this</span>.outputCurveItems[i][j] = <span class="keyword">new</span> <span class="title class_">CurveItem</span>(curve);</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    overwriteCurveFlag = <span class="literal">true</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    curve = <span class="built_in">this</span>.createOutputCurve(i, <span class="built_in">this</span>.outputCategorys[i], redirectionCurveName, item);</span><br><span class="line">                    <span class="keyword">if</span> (curve == <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="built_in">this</span>.errorMsg.append(redirectionCurveName).append(ResourceBundle.getBundle(<span class="string">&quot;cif/dataservice/io/Bundle&quot;</span>).getString(<span class="string">&quot;DataServiceIntegratedIO.setOutputCurves.errorMsg4&quot;</span>)).append(<span class="string">&quot;\r\n&quot;</span>);</span><br><span class="line">                        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="built_in">this</span>.outputCurveItems[i][j] = <span class="keyword">new</span> <span class="title class_">CurveItem</span>(curve);</span><br><span class="line">                    addCurveFlag = <span class="literal">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (addCurveFlag || overwriteCurveFlag) &#123;</span><br><span class="line">                <span class="built_in">this</span>.addCategoryNotification(<span class="built_in">this</span>.outputCategorys[i], <span class="number">2</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> LogCurve <span class="title function_">createOutputCurve</span><span class="params">(<span class="type">int</span> categoryIndex, LogCategory category, String curveName, ArrayCurveSetItem item)</span> &#123;</span><br><span class="line">        <span class="type">CurveXD</span> <span class="variable">curveXD</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Curve1D</span>();</span><br><span class="line">        <span class="type">ModifiedOutputProperty</span> <span class="variable">curveProperty</span> <span class="operator">=</span> (ModifiedOutputProperty)<span class="built_in">this</span>.outputCurvePropertyHashMap.get(curveName.trim().toUpperCase());</span><br><span class="line">        <span class="keyword">if</span> (item != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">arrayNum</span> <span class="operator">=</span> item.getArrayNum();</span><br><span class="line">            <span class="type">int</span> <span class="variable">arraySize</span> <span class="operator">=</span> item.getArraySize();</span><br><span class="line">            <span class="keyword">if</span> (arrayNum &lt; <span class="number">1</span> || arraySize &lt; <span class="number">1</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">switch</span> (arrayNum) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                    <span class="keyword">if</span> (arraySize &gt; <span class="number">1</span>) &#123;</span><br><span class="line">                        curveXD = <span class="keyword">new</span> <span class="title class_">Curve2D</span>();</span><br><span class="line">                        ((Curve2D)curveXD).setTimeSampleNum(arraySize);</span><br><span class="line">                        <span class="keyword">if</span> (curveProperty != <span class="literal">null</span>) &#123;</span><br><span class="line">                            <span class="keyword">if</span> (curveProperty.isIsTimeSampleLevelModified()) &#123;</span><br><span class="line">                                ((Curve2D)curveXD).setTimeSampleLevel(curveProperty.getTimeSampleLevel());</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">if</span> (curveProperty.isIsTimeSampleUnitModified()) &#123;</span><br><span class="line">                                ((Curve2D)curveXD).setTimeSampleUnit(curveProperty.getTimeSampleUnit());</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">if</span> (curveProperty.isIsTimeSampleStartTimeModified()) &#123;</span><br><span class="line">                                ((Curve2D)curveXD).setTimeSampleStartTime(curveProperty.getTimeSampleStartTime());</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    curveXD = <span class="keyword">new</span> <span class="title class_">Curve3D</span>();</span><br><span class="line">                    ((Curve3D)curveXD).setTimeSampleNum(arraySize);</span><br><span class="line">                    ((Curve3D)curveXD).setArrayNum(arrayNum);</span><br><span class="line">                    <span class="keyword">if</span> (curveProperty != <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">if</span> (curveProperty.isIsTimeSampleLevelModified()) &#123;</span><br><span class="line">                            ((Curve2D)curveXD).setTimeSampleLevel(curveProperty.getTimeSampleLevel());</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">if</span> (curveProperty.isIsTimeSampleUnitModified()) &#123;</span><br><span class="line">                            ((Curve2D)curveXD).setTimeSampleUnit(curveProperty.getTimeSampleUnit());</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">if</span> (curveProperty.isIsTimeSampleStartTimeModified()) &#123;</span><br><span class="line">                            ((Curve2D)curveXD).setTimeSampleStartTime(curveProperty.getTimeSampleStartTime());</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        ((CurveXD)curveXD).setCurveName(curveName);</span><br><span class="line">        ((CurveXD)curveXD).setStartDepth(<span class="built_in">this</span>.inpFileWrapper.getAllZoneStartDepth(categoryIndex));</span><br><span class="line">        ((CurveXD)curveXD).setEndDepth(<span class="built_in">this</span>.inpFileWrapper.getAllZoneEndDepth(categoryIndex));</span><br><span class="line">        ((CurveXD)curveXD).setDepthLevel(<span class="built_in">this</span>.depoLevels[categoryIndex]);</span><br><span class="line">        ((CurveXD)curveXD).setDataType((<span class="type">byte</span>)<span class="number">5</span>);</span><br><span class="line">        ((CurveXD)curveXD).setDepthUnit(category.getCategoryDepthUnit());</span><br><span class="line">        <span class="keyword">if</span> (curveProperty != <span class="literal">null</span> &amp;&amp; curveProperty.isIsCurveUnitModified()) &#123;</span><br><span class="line">            ((CurveXD)curveXD).setCurveUnit(curveProperty.getCurveUnit());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> category.createCurve((CurveXD)curveXD, <span class="built_in">this</span>.isCleaningData);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">computeDepthLevel</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">inputCategoryCount</span> <span class="operator">=</span> <span class="built_in">this</span>.inputCategorys.length;</span><br><span class="line">        <span class="built_in">this</span>.depthLevels = <span class="keyword">new</span> <span class="title class_">double</span>[inputCategoryCount];</span><br><span class="line">        <span class="built_in">this</span>.depoLevels = <span class="keyword">new</span> <span class="title class_">double</span>[inputCategoryCount];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; inputCategoryCount; ++i) &#123;</span><br><span class="line">            <span class="built_in">this</span>.depthLevels[i] = <span class="number">99999.0</span>;</span><br><span class="line">            <span class="keyword">if</span> (!<span class="built_in">this</span>.isModifiedInLevel) &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">this</span>.inputCurveItems[i].length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="type">LogCurve</span> <span class="variable">curve</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">                    CurveItem[] var6 = <span class="built_in">this</span>.inputCurveItems[i];</span><br><span class="line">                    <span class="type">int</span> <span class="variable">var7</span> <span class="operator">=</span> var6.length;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">var8</span> <span class="operator">=</span> <span class="number">0</span>; var8 &lt; var7; ++var8) &#123;</span><br><span class="line">                        <span class="type">CurveItem</span> <span class="variable">item</span> <span class="operator">=</span> var6[var8];</span><br><span class="line">                        curve = item.getCurve();</span><br><span class="line">                        <span class="keyword">if</span> (curve != <span class="literal">null</span>) &#123;</span><br><span class="line">                            <span class="type">double</span> <span class="variable">tempLev</span> <span class="operator">=</span> curve.getDepthLevel();</span><br><span class="line">                            <span class="keyword">if</span> (<span class="built_in">this</span>.depthLevels[i] &gt; tempLev) &#123;</span><br><span class="line">                                <span class="built_in">this</span>.depthLevels[i] = tempLev;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="built_in">this</span>.depthLevels[i] = <span class="built_in">this</span>.inputCategorys[i].getCategoryDepthLevel();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="built_in">this</span>.depthLevels[i] = <span class="built_in">this</span>.customDepLevel;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (!<span class="built_in">this</span>.isModifiedOutLevel) &#123;</span><br><span class="line">                <span class="built_in">this</span>.depoLevels[i] = <span class="built_in">this</span>.depthLevels[i];</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="built_in">this</span>.depoLevels[i] = <span class="built_in">this</span>.customDepoLevel;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> <span class="title function_">setInputCurves</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">inputCategoryCount</span> <span class="operator">=</span> <span class="built_in">this</span>.inputCategorys.length;</span><br><span class="line">        <span class="built_in">this</span>.inputCurveItems = <span class="keyword">new</span> <span class="title class_">CurveItem</span>[inputCategoryCount][<span class="built_in">this</span>.inputCurveCount];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">z</span> <span class="operator">=</span> <span class="number">0</span>; z &lt; inputCategoryCount; ++z) &#123;</span><br><span class="line">            <span class="type">LogCurve</span> <span class="variable">curve</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="built_in">this</span>.inputCurveCount; ++i) &#123;</span><br><span class="line">                curve = <span class="built_in">this</span>.getSpecifiedCurve(<span class="built_in">this</span>.inputCategorys[z], <span class="built_in">this</span>.inpFileWrapper.getInputCurveRedirection(z, i));</span><br><span class="line">                <span class="type">ArrayCurveSetItem</span> <span class="variable">item</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; <span class="built_in">this</span>.inputArrayCurveSets.size(); ++j) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (((ArrayCurveSetItem)<span class="built_in">this</span>.inputArrayCurveSets.get(j)).getCurveName().equalsIgnoreCase(<span class="built_in">this</span>.inpFileWrapper.getInputCurveOriginName(z, i))) &#123;</span><br><span class="line">                        item = (ArrayCurveSetItem)<span class="built_in">this</span>.inputArrayCurveSets.get(j);</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (curve == <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (item != <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="built_in">this</span>.inputCurveItems[z][i] = <span class="keyword">new</span> <span class="title class_">CurveItem</span>(curve, item.getArrayNum(), item.getArraySize());</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="built_in">this</span>.inputCurveItems[z][i] = <span class="keyword">new</span> <span class="title class_">CurveItem</span>(curve, <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (item == <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="built_in">this</span>.inputCurveItems[z][i] = <span class="keyword">new</span> <span class="title class_">CurveItem</span>(curve);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span> ((curve.getLoggingType() == <span class="number">2</span> || curve.getLoggingType() == <span class="number">1</span>) &amp;&amp; item.getArrayNum() &gt; <span class="number">1</span>) &#123;</span><br><span class="line">                        <span class="built_in">this</span>.errorMsg.append(curve.getName()).append(ResourceBundle.getBundle(<span class="string">&quot;cif/dataservice/io/Bundle&quot;</span>).getString(<span class="string">&quot;DataServiceIntegratedIO.setInputCurves.errorMsg&quot;</span>)).append(<span class="string">&quot;\r\n&quot;</span>);</span><br><span class="line">                        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="built_in">this</span>.inputCurveItems[z][i] = <span class="keyword">new</span> <span class="title class_">CurveItem</span>(curve, item.getArrayNum(), item.getArraySize());</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> LogCategory <span class="title function_">getCategory</span><span class="params">(String categoryPath, <span class="type">boolean</span> isCreate)</span> &#123;</span><br><span class="line">        <span class="type">DataPath</span> <span class="variable">dataPath</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DataPath</span>();</span><br><span class="line">        dataPath.parse(categoryPath.trim());</span><br><span class="line">        <span class="keyword">return</span> dataPath.getPathLevel() &lt; <span class="number">4</span> ? <span class="literal">null</span> : <span class="built_in">this</span>.getCategory(dataPath, isCreate);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> LogCategory <span class="title function_">getCategory</span><span class="params">(DataPath dataPath, <span class="type">boolean</span> isCreate)</span> &#123;</span><br><span class="line">        <span class="type">LogDataSource</span> <span class="variable">dataSource</span> <span class="operator">=</span> dataPath.getCurrentDataFormat().buildDataSource();</span><br><span class="line">        <span class="keyword">if</span> (!dataSource.connect(dataPath.getDataSourceName())) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="type">LogWorkSpace</span> <span class="variable">ws</span> <span class="operator">=</span> dataSource.getLogWorkSpace(dataPath.getWorkSpaceName());</span><br><span class="line">            <span class="keyword">if</span> (ws == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">wellName</span> <span class="operator">=</span> dataPath.getWellName();</span><br><span class="line">                <span class="type">LogWell</span> <span class="variable">well</span> <span class="operator">=</span> ws.getLogWell(wellName);</span><br><span class="line">                <span class="keyword">if</span> (well == <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (!isCreate) &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    well = ws.createWell(wellName);</span><br><span class="line">                    <span class="keyword">if</span> (well == <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="type">String</span> <span class="variable">categoryName</span> <span class="operator">=</span> dataPath.getCategoryName();</span><br><span class="line">                <span class="type">LogCategory</span> <span class="variable">category</span> <span class="operator">=</span> well.getLogCategory(categoryName);</span><br><span class="line">                <span class="keyword">if</span> (category != <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> category;</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (!isCreate) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="type">CategoryProperties</span> <span class="variable">properties</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CategoryProperties</span>();</span><br><span class="line">                    properties.setCategoryName(categoryName);</span><br><span class="line">                    category = well.createCategory(properties);</span><br><span class="line">                    <span class="keyword">if</span> (category == <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="built_in">this</span>.addCategoryNotification(category, <span class="number">0</span>);</span><br><span class="line">                        <span class="keyword">return</span> category;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">addCategoryNotification</span><span class="params">(LogCategory category, <span class="type">int</span> notifyType)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">wellPath</span> <span class="operator">=</span> (<span class="keyword">new</span> <span class="title class_">DataPath</span>(category.getLogWell())).toString();</span><br><span class="line">        <span class="type">NotificationStruct</span> <span class="variable">infoStruct</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">categoryName</span> <span class="operator">=</span> category.getCategoryName();</span><br><span class="line">        <span class="type">CategoryNotifiedInfo</span> <span class="variable">categoryInfo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CategoryNotifiedInfo</span>(categoryName, notifyType);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="built_in">this</span>.categoryNotificationList.size(); ++i) &#123;</span><br><span class="line">            infoStruct = (NotificationStruct)<span class="built_in">this</span>.categoryNotificationList.get(i);</span><br><span class="line">            <span class="keyword">if</span> (infoStruct.getDataPath().equalsIgnoreCase(wellPath) &amp;&amp; !infoStruct.contains(categoryName)) &#123;</span><br><span class="line">                infoStruct.addNotifiedInfo(categoryInfo);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        infoStruct = <span class="keyword">new</span> <span class="title class_">NotificationStruct</span>(wellPath);</span><br><span class="line">        infoStruct.addNotifiedInfo(categoryInfo);</span><br><span class="line">        <span class="built_in">this</span>.categoryNotificationList.add(infoStruct);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="DataSourceContainer-java"><a href="#DataSourceContainer-java" class="headerlink" title="DataSourceContainer.java"></a>DataSourceContainer.java</h2><h3 id="简略方法-3"><a href="#简略方法-3" class="headerlink" title="简略方法"></a>简略方法</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addElement</span><span class="params">(DataSourceStruct dataSourceStruct)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">removeElement</span><span class="params">(DataSourceStruct dataSourceStruct)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">size</span><span class="params">()</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> DataSourceStruct <span class="title function_">elemenAt</span><span class="params">(<span class="type">int</span> index)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> DataSourceStruct <span class="title function_">getElement</span><span class="params">(<span class="type">int</span> dataSourceID)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> DataSourceStruct <span class="title function_">getElement</span><span class="params">(String dataSourcePath)</span></span><br></pre></td></tr></table></figure><h3 id="类源码-3"><a href="#类源码-3" class="headerlink" title="类源码"></a>类源码</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Source code recreated from a .class file by IntelliJ IDEA</span></span><br><span class="line"><span class="comment">// (powered by FernFlower decompiler)</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> cif.dataservice.io;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">DataSourceContainer</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">DataSourceContainer</span> <span class="variable">instance</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">private</span> ArrayList&lt;DataSourceStruct&gt; dataSourceContainer = <span class="keyword">new</span> <span class="title class_">ArrayList</span>();</span><br><span class="line"></span><br><span class="line">    DataSourceContainer() &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> DataSourceContainer <span class="title function_">getInstance</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (instance == <span class="literal">null</span>) &#123;</span><br><span class="line">            instance = <span class="keyword">new</span> <span class="title class_">DataSourceContainer</span>();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> instance;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addElement</span><span class="params">(DataSourceStruct dataSourceStruct)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (dataSourceStruct != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="built_in">this</span>.dataSourceContainer.add(dataSourceStruct);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">removeElement</span><span class="params">(DataSourceStruct dataSourceStruct)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.dataSourceContainer.remove(dataSourceStruct);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">size</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.dataSourceContainer.size();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> DataSourceStruct <span class="title function_">elemenAt</span><span class="params">(<span class="type">int</span> index)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> index &gt;= <span class="number">0</span> &amp;&amp; index &lt; <span class="built_in">this</span>.dataSourceContainer.size() ? (DataSourceStruct)<span class="built_in">this</span>.dataSourceContainer.get(index) : <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> DataSourceStruct <span class="title function_">getElement</span><span class="params">(<span class="type">int</span> dataSourceID)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (dataSourceID &lt; <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="type">DataSourceStruct</span> <span class="variable">dataSourceStruct</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="built_in">this</span>.dataSourceContainer.size(); ++i) &#123;</span><br><span class="line">                dataSourceStruct = (DataSourceStruct)<span class="built_in">this</span>.dataSourceContainer.get(i);</span><br><span class="line">                <span class="keyword">if</span> (dataSourceStruct.id == dataSourceID) &#123;</span><br><span class="line">                    <span class="keyword">return</span> dataSourceStruct;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> DataSourceStruct <span class="title function_">getElement</span><span class="params">(String dataSourcePath)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (dataSourcePath != <span class="literal">null</span> &amp;&amp; !dataSourcePath.isEmpty()) &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">path</span> <span class="operator">=</span> dataSourcePath.trim().replace(<span class="string">&#x27;\\&#x27;</span>, <span class="string">&#x27;/&#x27;</span>);</span><br><span class="line">            <span class="type">DataSourceStruct</span> <span class="variable">dataSourceStruct</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="built_in">this</span>.dataSourceContainer.size(); ++i) &#123;</span><br><span class="line">                dataSourceStruct = (DataSourceStruct)<span class="built_in">this</span>.dataSourceContainer.get(i);</span><br><span class="line">                <span class="keyword">if</span> (dataSourceStruct.dataSource.getConnectParam().replace(<span class="string">&#x27;\\&#x27;</span>, <span class="string">&#x27;/&#x27;</span>).contains(path)) &#123;</span><br><span class="line">                    <span class="keyword">return</span> dataSourceStruct;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="如何在IDEA中编写二次开发插件"><a href="#如何在IDEA中编写二次开发插件" class="headerlink" title="如何在IDEA中编写二次开发插件"></a>如何在IDEA中编写二次开发插件</h1><p>添加基础的cif类库到IDEA包中，即可实现IDEA开发，可以提示错误等</p>]]></content>
    
    
    <summary type="html">CIFLog3二次开发Java接口说明</summary>
    
    
    
    <category term="测井计算" scheme="http://hibiscidai.com/categories/%E6%B5%8B%E4%BA%95%E8%AE%A1%E7%AE%97/"/>
    
    
    <category term="JAVA" scheme="http://hibiscidai.com/tags/JAVA/"/>
    
    <category term="测井计算" scheme="http://hibiscidai.com/tags/%E6%B5%8B%E4%BA%95%E8%AE%A1%E7%AE%97/"/>
    
  </entry>
  
  <entry>
    <title>Petrel2018-测井数据导入及基础绘图</title>
    <link href="http://hibiscidai.com/2023/10/16/Petrel2018-%E6%B5%8B%E4%BA%95%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%8F%8A%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE/"/>
    <id>http://hibiscidai.com/2023/10/16/Petrel2018-%E6%B5%8B%E4%BA%95%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%8F%8A%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE/</id>
    <published>2023-10-16T14:00:00.000Z</published>
    <updated>2024-04-18T01:15:25.000Z</updated>
    
    <content type="html"><![CDATA[<img src="/2023/10/16/Petrel2018-%E6%B5%8B%E4%BA%95%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%8F%8A%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE/Petrel2018-%E6%B5%8B%E4%BA%95%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%8F%8A%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE.png" class="" title="Petrel2018-测井数据导入及基础绘图"><p>Petrel2018-测井数据导入及基础绘图</p><span id="more"></span><p>[TOC]</p><h1 id="Petrel2018-测井数据导入及基础绘图"><a href="#Petrel2018-测井数据导入及基础绘图" class="headerlink" title="Petrel2018-测井数据导入及基础绘图"></a>Petrel2018-测井数据导入及基础绘图</h1><h1 id="新建项目"><a href="#新建项目" class="headerlink" title="新建项目"></a>新建项目</h1><h1 id="设置项目"><a href="#设置项目" class="headerlink" title="设置项目"></a>设置项目</h1><img src="/2023/10/16/Petrel2018-%E6%B5%8B%E4%BA%95%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%8F%8A%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE/Petrel2018-%E6%B5%8B%E4%BA%95%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%8F%8A%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE-1.png" class="" title="Petrel2018-测井数据导入及基础绘图-1"><p>设置项目坐标系统</p><img src="/2023/10/16/Petrel2018-%E6%B5%8B%E4%BA%95%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%8F%8A%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE/Petrel2018-%E6%B5%8B%E4%BA%95%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%8F%8A%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE-2.png" class="" title="Petrel2018-测井数据导入及基础绘图-2"><h1 id="新建井文件夹"><a href="#新建井文件夹" class="headerlink" title="新建井文件夹"></a>新建井文件夹</h1><img src="/2023/10/16/Petrel2018-%E6%B5%8B%E4%BA%95%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%8F%8A%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE/Petrel2018-%E6%B5%8B%E4%BA%95%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%8F%8A%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE-3.png" class="" title="Petrel2018-测井数据导入及基础绘图-3"><h1 id="导入井头信息"><a href="#导入井头信息" class="headerlink" title="导入井头信息"></a>导入井头信息</h1><img src="/2023/10/16/Petrel2018-%E6%B5%8B%E4%BA%95%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%8F%8A%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE/Petrel2018-%E6%B5%8B%E4%BA%95%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%8F%8A%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE-4.png" class="" title="Petrel2018-测井数据导入及基础绘图-4"><img src="/2023/10/16/Petrel2018-%E6%B5%8B%E4%BA%95%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%8F%8A%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE/Petrel2018-%E6%B5%8B%E4%BA%95%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%8F%8A%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE-5.png" class="" title="Petrel2018-测井数据导入及基础绘图-5"><p>Petrel给出的井头文件示例</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"># Petrel well head</span><br><span class="line">VERSION 1</span><br><span class="line">BEGIN HEADER</span><br><span class="line">Name</span><br><span class="line">UWI</span><br><span class="line">Well symbol</span><br><span class="line">Surface X</span><br><span class="line">Surface Y</span><br><span class="line">Offset</span><br><span class="line">TD (MD)</span><br><span class="line">Cost</span><br><span class="line">Spud date</span><br><span class="line">Operator</span><br><span class="line">END HEADER</span><br><span class="line">&quot;A 1&quot; A1  3      452905.03 6781834.74 -0.00  2313.76 -999   &quot;11/01/1991&quot; &quot;&quot; </span><br><span class="line">&quot;B 1&quot; B1  4      456919.15 6787585.65 -0.00  1998.89 -999   &quot;01/11/1995&quot; &quot;&quot; </span><br></pre></td></tr></table></figure><p>本次加载示例：</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">WELLNAMEUWIKBTMDY1X1</span><br><span class="line">3430100120708324W6006862307.00 622983700575118</span><br><span class="line">3449102121708325W600810.24466.00 623296000565650</span><br><span class="line">3466100022808325W602778.34176.00 623509900567926</span><br><span class="line">3481100161708325W600777.52605.00 623163300567843</span><br><span class="line">3509100040908422W600637.31995.00 623920500597766</span><br><span class="line">3510100062208422W60301939624271300599579</span><br></pre></td></tr></table></figure><img src="/2023/10/16/Petrel2018-%E6%B5%8B%E4%BA%95%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%8F%8A%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE/Petrel2018-%E6%B5%8B%E4%BA%95%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%8F%8A%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE-6.png" class="" title="Petrel2018-测井数据导入及基础绘图-6"><img src="/2023/10/16/Petrel2018-%E6%B5%8B%E4%BA%95%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%8F%8A%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE/Petrel2018-%E6%B5%8B%E4%BA%95%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%8F%8A%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE-7.png" class="" title="Petrel2018-测井数据导入及基础绘图-7"><p>2维窗口显示井位</p><img src="/2023/10/16/Petrel2018-%E6%B5%8B%E4%BA%95%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%8F%8A%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE/Petrel2018-%E6%B5%8B%E4%BA%95%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%8F%8A%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE-8.png" class="" title="Petrel2018-测井数据导入及基础绘图-8"><h1 id="导入井斜数据"><a href="#导入井斜数据" class="headerlink" title="导入井斜数据"></a>导入井斜数据</h1><img src="/2023/10/16/Petrel2018-%E6%B5%8B%E4%BA%95%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%8F%8A%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE/Petrel2018-%E6%B5%8B%E4%BA%95%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%8F%8A%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE-9.png" class="" title="Petrel2018-测井数据导入及基础绘图-9"><p>导入后会自动匹配井名</p><img src="/2023/10/16/Petrel2018-%E6%B5%8B%E4%BA%95%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%8F%8A%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE/Petrel2018-%E6%B5%8B%E4%BA%95%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%8F%8A%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE-10.png" class="" title="Petrel2018-测井数据导入及基础绘图-10"><p>本次导入的井斜数据都是直井。</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">WELLNAMEUWIKBTMDTVDY1X1Y2X2</span><br><span class="line">20100040605424W5041271.93956.03910.359583238612875958563861177</span><br></pre></td></tr></table></figure><p>如果是斜井、水平井、定向井，需要指定X、Y和TVD。</p><img src="/2023/10/16/Petrel2018-%E6%B5%8B%E4%BA%95%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%8F%8A%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE/Petrel2018-%E6%B5%8B%E4%BA%95%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%8F%8A%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE-11.png" class="" title="Petrel2018-测井数据导入及基础绘图-11"><h1 id="导入测井数据"><a href="#导入测井数据" class="headerlink" title="导入测井数据"></a>导入测井数据</h1><img src="/2023/10/16/Petrel2018-%E6%B5%8B%E4%BA%95%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%8F%8A%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE/Petrel2018-%E6%B5%8B%E4%BA%95%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%8F%8A%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE-12.png" class="" title="Petrel2018-测井数据导入及基础绘图-12"><p>给出示例数据：</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">This loader is completely general and can be used</span><br><span class="line">with different well log formats.</span><br><span class="line"> </span><br><span class="line">Important: When importing multiple data files, make sure all files have the same format.</span><br><span class="line"> </span><br><span class="line">~Version Information Block</span><br><span class="line">VERS .                 2.00:  CWLS LOG ASCII STANDARD - VERSION 2.00</span><br><span class="line">use_wrap .                   NO:  One line per depth step</span><br><span class="line">~Well information block</span><br><span class="line">#MNEM.UNIT        Data Type   Information</span><br><span class="line">#---------- ----------------  -----------</span><br><span class="line">STRT .M             45.8724:  START DEPTH</span><br><span class="line">STOP .M           3889.8576:  STOP DEPTH</span><br><span class="line">STEP .M              0.1524:  STEP</span><br><span class="line">NULL .          -999.250000:  NULL VALUE</span><br><span class="line">COMP .                     :  COMPANY</span><br><span class="line">WELL .                2_1-1:  WELL</span><br><span class="line">FLD  .                     :  FIELD</span><br><span class="line">LOC  .                     :  LOCATION</span><br><span class="line">PROV .                     :  PROVINCE</span><br><span class="line">SRVC .                     :  SERVICE COMPANY</span><br><span class="line">DATE .                     :  LOG DATE</span><br><span class="line">UWI  .                     :  UNIQUE WELL ID</span><br><span class="line">~Curve Information Block</span><br><span class="line">#MNEM.UNIT         API CODE   Curve Description</span><br><span class="line">#---------- ----------------  -----------------</span><br><span class="line">DEPTH.M                    :  </span><br><span class="line">DT   .US/F                 :  DELTA-T</span><br><span class="line">GR   .GAPI                 :  Gamma ray RAY</span><br><span class="line">HPHI .LPU                  :  </span><br><span class="line">ILD  .OHMM                 :  INDUCTION LOG DEEP</span><br><span class="line">RHOB .G/C3                 :  BULK DENSITY</span><br><span class="line">~Parameter Information Block</span><br><span class="line">#MNEM.UNIT            Value   Description</span><br><span class="line">#---------- ----------------  -----------</span><br><span class="line">PROJECT.             ULA_GYDA:  </span><br><span class="line">SET  .                 BEST:  </span><br><span class="line">~A        DEPTH             DT             GR           HPHI            ILD           RHOB </span><br><span class="line">45.8724      -999.250000         0.2373      -999.250000      -999.250000      -999.250000 </span><br><span class="line">46.0248      -999.250000         0.2083      -999.250000      -999.250000      -999.250000 </span><br><span class="line">46.1772      -999.250000         0.1792      -999.250000      -999.250000      -999.250000 </span><br><span class="line">...</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>只导入目标层目标曲线：</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">DEPTH       PERM         POR          SW           </span><br><span class="line">954.0000     0.3740       9.7433       32.2979      </span><br><span class="line">954.0508     0.2293       8.5035       38.6421      </span><br><span class="line">954.1016     0.0976       6.3390       53.3102         </span><br><span class="line">...</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>会提示对照井位，注意检查没有出现的井：</p><img src="/2023/10/16/Petrel2018-%E6%B5%8B%E4%BA%95%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%8F%8A%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE/Petrel2018-%E6%B5%8B%E4%BA%95%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%8F%8A%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE-13.png" class="" title="Petrel2018-测井数据导入及基础绘图-13"><img src="/2023/10/16/Petrel2018-%E6%B5%8B%E4%BA%95%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%8F%8A%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE/Petrel2018-%E6%B5%8B%E4%BA%95%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%8F%8A%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE-14.png" class="" title="Petrel2018-测井数据导入及基础绘图-14"><p>数据导入过程会提示有问题的井数据：</p><img src="/2023/10/16/Petrel2018-%E6%B5%8B%E4%BA%95%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%8F%8A%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE/Petrel2018-%E6%B5%8B%E4%BA%95%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%8F%8A%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE-15.png" class="" title="Petrel2018-测井数据导入及基础绘图-15"><blockquote><p>数据出错才会报错，需要检查输入数据。</p></blockquote><h1 id="导入层位数据"><a href="#导入层位数据" class="headerlink" title="导入层位数据"></a>导入层位数据</h1><img src="/2023/10/16/Petrel2018-%E6%B5%8B%E4%BA%95%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%8F%8A%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE/Petrel2018-%E6%B5%8B%E4%BA%95%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%8F%8A%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE-16.png" class="" title="Petrel2018-测井数据导入及基础绘图-16"><p>点选左边Well tops，右键导入数据</p><p>层位数据示例：</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"># Petrel well tops</span><br><span class="line"># Lines starting with # are comments</span><br><span class="line">VERSION 2</span><br><span class="line">BEGIN HEADER</span><br><span class="line">X</span><br><span class="line">Y</span><br><span class="line">Z</span><br><span class="line">MD</span><br><span class="line">TWT</span><br><span class="line"># Valid types: HORIZON, FAULT, OTHER</span><br><span class="line">Type</span><br><span class="line">Surface name</span><br><span class="line">Well name</span><br><span class="line">Symbol</span><br><span class="line">Interpreter</span><br><span class="line">Dip angle</span><br><span class="line">Dip azimuth</span><br><span class="line">END HEADER</span><br><span class="line">457920.31 6784738.68 -1783.84 -1701.53 HORIZON &quot;Base Cretaceous&quot; &quot;B4&quot; Unknown 2068.47 &quot;&quot;   &quot;&quot;   -999   -999   </span><br><span class="line">457746.94 6787092.61 -1886.76 -999     HORIZON &quot;Base Cretaceous&quot; &quot;B8&quot; Unknown 1886.76 &quot;&quot;   &quot;&quot;   -999   -999   </span><br><span class="line">456719.08 6785550.13 -1836.19 -1740.00 HORIZON &quot;Base Cretaceous&quot; &quot;B9&quot; Unknown 1836.97 &quot;&quot;   &quot;&quot;   -999   -999   </span><br><span class="line">453078.12 6786788.35 -1996.92 -1894.14 HORIZON &quot;Base Cretaceous&quot; &quot;C1&quot; Unknown 2003.34 &quot;&quot;   &quot;&quot;   -999   -999   </span><br><span class="line">454686.86 6787607.12 -1977.81 -1878.58 HORIZON &quot;Base Cretaceous&quot; &quot;C2&quot; Unknown 1998.97 &quot;&quot;   &quot;&quot;   -999   -999   </span><br><span class="line">456306.69 6788724.75 -1989.68 -1883.87 HORIZON &quot;Base Cretaceous&quot; &quot;C3&quot; Unknown 2004.29 &quot;&quot;   &quot;&quot;   88.86  -54.66 </span><br><span class="line">454693.38 6786210.63 -1965.23 -1859.14 HORIZON &quot;Base Cretaceous&quot; &quot;C4&quot; Unknown 1980.43 &quot;&quot;   &quot;&quot;   88.23  -70.43 </span><br></pre></td></tr></table></figure><p>导入层位格式：</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Montney34301995.25</span><br><span class="line">Belloy34302262</span><br><span class="line">Montney34492346.4</span><br><span class="line">Belloy34492484.7</span><br><span class="line">Montney34662272</span><br><span class="line">Belloy34662449.5</span><br><span class="line">Montney34812257</span><br><span class="line">Belloy34812536</span><br><span class="line">Montney35091654</span><br><span class="line">Belloy35091961.25</span><br><span class="line">Montney35101636.625</span><br><span class="line">Belloy35101939</span><br><span class="line">...</span><br></pre></td></tr></table></figure><img src="/2023/10/16/Petrel2018-%E6%B5%8B%E4%BA%95%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%8F%8A%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE/Petrel2018-%E6%B5%8B%E4%BA%95%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%8F%8A%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE-17.png" class="" title="Petrel2018-测井数据导入及基础绘图-17"><img src="/2023/10/16/Petrel2018-%E6%B5%8B%E4%BA%95%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%8F%8A%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE/Petrel2018-%E6%B5%8B%E4%BA%95%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%8F%8A%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE-18.png" class="" title="Petrel2018-测井数据导入及基础绘图-18"><p>移动层标识，将层顶底挪入stratigraphy中，自动切分地层。</p><img src="/2023/10/16/Petrel2018-%E6%B5%8B%E4%BA%95%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%8F%8A%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE/Petrel2018-%E6%B5%8B%E4%BA%95%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%8F%8A%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE-21.png" class="" title="Petrel2018-测井数据导入及基础绘图-21"><p>同理，导入大层和小层，分两个层位文件夹：</p><img src="/2023/10/16/Petrel2018-%E6%B5%8B%E4%BA%95%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%8F%8A%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE/Petrel2018-%E6%B5%8B%E4%BA%95%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%8F%8A%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE-21-1.png" class="" title="Petrel2018-测井数据导入及基础绘图-21-1"><h1 id="工区边界导入"><a href="#工区边界导入" class="headerlink" title="工区边界导入"></a>工区边界导入</h1><p>在左侧空白地方右键点击import file</p><img src="/2023/10/16/Petrel2018-%E6%B5%8B%E4%BA%95%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%8F%8A%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE/Petrel2018-%E6%B5%8B%E4%BA%95%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%8F%8A%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE-19.png" class="" title="Petrel2018-测井数据导入及基础绘图-19"><p>示例工区边界：</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">FDASCI 0 2 &quot;Computed&quot; 0 99999 0</span><br><span class="line">FDATTR 4 2 1 0</span><br><span class="line">FDATNM 1 &quot;Depth&quot; &quot;real&quot;</span><br><span class="line">!Coordinate System:</span><br><span class="line">!  Projection System ID: 7740565      Initialized  Quick: 0</span><br><span class="line">!  Secondary Horizontal: Units: m  Per/Meter: 1.000000000000</span><br><span class="line">!        Geodetic Datum: ERP50-GB  Ellipsoid: INTNL</span><br><span class="line">!     Projection Method: Transverse Mercator</span><br><span class="line">!      Central Meridian: 3.00000000000</span><br><span class="line">!       User Horizontal: Units: m  Per/Secondary: 1.000000000000</span><br><span class="line">(3D25.16)</span><br><span class="line">-&gt; Cut_0</span><br><span class="line">   0.3354165721485568D+06   0.6459140906319961D+07   0.1086545605468750D+05</span><br><span class="line">   0.3355314799575806D+06   0.6459136397933483D+07   0.1059374804687500D+05</span><br><span class="line">   0.3356463885192871D+06   0.6459131889515877D+07   0.1042337988281250D+05</span><br><span class="line">   0.3357563007507324D+06   0.6459127577129364D+07   0.1012011328125000D+05</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>导入的工区边界：</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">FFASCI 0 1 &quot;LINES&quot; 0 1e+10</span><br><span class="line">FFATTR 0 1</span><br><span class="line">-&gt;1</span><br><span class="line">55632762128280</span><br><span class="line">52231662852980</span><br><span class="line">47212364888370</span><br><span class="line">48272564884350</span><br><span class="line">49991964871280</span><br><span class="line">...</span><br></pre></td></tr></table></figure><img src="/2023/10/16/Petrel2018-%E6%B5%8B%E4%BA%95%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%8F%8A%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE/Petrel2018-%E6%B5%8B%E4%BA%95%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%8F%8A%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE-20.png" class="" title="Petrel2018-测井数据导入及基础绘图-20"><p>也可以选line-type为：generic boundary</p><img src="/2023/10/16/Petrel2018-%E6%B5%8B%E4%BA%95%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%8F%8A%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE/Petrel2018-%E6%B5%8B%E4%BA%95%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%8F%8A%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE-29.png" class="" title="Petrel2018-测井数据导入及基础绘图-29"><p>导入后左侧可以看到工区边界</p><p>闭合工区边界：不闭合的话不可以进行平面图展布计算</p><img src="/2023/10/16/Petrel2018-%E6%B5%8B%E4%BA%95%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%8F%8A%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE/Petrel2018-%E6%B5%8B%E4%BA%95%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%8F%8A%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE-28.png" class="" title="Petrel2018-测井数据导入及基础绘图-28"><h1 id="顶部构造图-Z"><a href="#顶部构造图-Z" class="headerlink" title="顶部构造图-Z"></a>顶部构造图-Z</h1><img src="/2023/10/16/Petrel2018-%E6%B5%8B%E4%BA%95%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%8F%8A%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE/%E9%A1%B6%E9%83%A8%E6%9E%84%E9%80%A0%E5%9B%BE-1.png" class="" title="顶部构造图-1"><p>Z值就是海拔</p><p>调整网格大小</p><img src="/2023/10/16/Petrel2018-%E6%B5%8B%E4%BA%95%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%8F%8A%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE/%E9%A1%B6%E9%83%A8%E6%9E%84%E9%80%A0%E5%9B%BE-2.png" class="" title="顶部构造图-2"><p>选择算法</p><img src="/2023/10/16/Petrel2018-%E6%B5%8B%E4%BA%95%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%8F%8A%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE/%E9%A1%B6%E9%83%A8%E6%9E%84%E9%80%A0%E5%9B%BE-3.png" class="" title="顶部构造图-3"><p>调整色标</p><img src="/2023/10/16/Petrel2018-%E6%B5%8B%E4%BA%95%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%8F%8A%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE/%E9%A1%B6%E9%83%A8%E6%9E%84%E9%80%A0%E5%9B%BE-4.png" class="" title="顶部构造图-4"><p>先点击最大最小，然后适当调整色标</p><h1 id="地层埋深图-MD"><a href="#地层埋深图-MD" class="headerlink" title="地层埋深图-MD"></a>地层埋深图-MD</h1><p>同顶部构造图类似，选择MD属性就可以</p><h1 id="等厚图绘制-Thickness"><a href="#等厚图绘制-Thickness" class="headerlink" title="等厚图绘制-Thickness"></a>等厚图绘制-Thickness</h1><img src="/2023/10/16/Petrel2018-%E6%B5%8B%E4%BA%95%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%8F%8A%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE/Petrel2018-%E6%B5%8B%E4%BA%95%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%8F%8A%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE-32.png" class="" title="Petrel2018-测井数据导入及基础绘图-32"><p>是否使用过滤器，选择no</p><img src="/2023/10/16/Petrel2018-%E6%B5%8B%E4%BA%95%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%8F%8A%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE/Petrel2018-%E6%B5%8B%E4%BA%95%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%8F%8A%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE-33.png" class="" title="Petrel2018-测井数据导入及基础绘图-33"><p>得到以下点集：</p><img src="/2023/10/16/Petrel2018-%E6%B5%8B%E4%BA%95%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%8F%8A%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE/Petrel2018-%E6%B5%8B%E4%BA%95%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%8F%8A%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE-34.png" class="" title="Petrel2018-测井数据导入及基础绘图-34"><p>层位名称及点集规范：</p><img src="/2023/10/16/Petrel2018-%E6%B5%8B%E4%BA%95%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%8F%8A%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE/Petrel2018-%E6%B5%8B%E4%BA%95%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%8F%8A%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE-34-1.png" class="" title="Petrel2018-测井数据导入及基础绘图-34-1"><p>创建surface：</p><img src="/2023/10/16/Petrel2018-%E6%B5%8B%E4%BA%95%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%8F%8A%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE/Petrel2018-%E6%B5%8B%E4%BA%95%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%8F%8A%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE-35.png" class="" title="Petrel2018-测井数据导入及基础绘图-35"><img src="/2023/10/16/Petrel2018-%E6%B5%8B%E4%BA%95%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%8F%8A%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE/Petrel2018-%E6%B5%8B%E4%BA%95%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%8F%8A%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE-36.png" class="" title="Petrel2018-测井数据导入及基础绘图-36"><h1 id="孔隙度-渗透率平面图"><a href="#孔隙度-渗透率平面图" class="headerlink" title="孔隙度-渗透率平面图"></a>孔隙度-渗透率平面图</h1><p>1、创建孔隙度属性</p><p>Well tops → Attributes → 新建属性</p><img src="/2023/10/16/Petrel2018-%E6%B5%8B%E4%BA%95%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%8F%8A%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE/Petrel2018-%E6%B5%8B%E4%BA%95%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%8F%8A%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE-22.png" class="" title="Petrel2018-测井数据导入及基础绘图-22"><p>选择连续参数</p><img src="/2023/10/16/Petrel2018-%E6%B5%8B%E4%BA%95%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%8F%8A%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE/Petrel2018-%E6%B5%8B%E4%BA%95%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%8F%8A%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE-23.png" class="" title="Petrel2018-测井数据导入及基础绘图-23"><p>制作POR/SW连续参数</p><img src="/2023/10/16/Petrel2018-%E6%B5%8B%E4%BA%95%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%8F%8A%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE/Petrel2018-%E6%B5%8B%E4%BA%95%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%8F%8A%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE-24.png" class="" title="Petrel2018-测井数据导入及基础绘图-24"><p>2、相同步骤，制作PERM的连续参数</p><img src="/2023/10/16/Petrel2018-%E6%B5%8B%E4%BA%95%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%8F%8A%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE/Petrel2018-%E6%B5%8B%E4%BA%95%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%8F%8A%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE-25.png" class="" title="Petrel2018-测井数据导入及基础绘图-25"><p>3、制作层段孔渗SW数值</p><p>按enter，变粗后为当前所选</p><img src="/2023/10/16/Petrel2018-%E6%B5%8B%E4%BA%95%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%8F%8A%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE/Petrel2018-%E6%B5%8B%E4%BA%95%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%8F%8A%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE-26.png" class="" title="Petrel2018-测井数据导入及基础绘图-26"><p>制作POR和PERM的层段数值，注意选择算法为Convergent interpolation</p><img src="/2023/10/16/Petrel2018-%E6%B5%8B%E4%BA%95%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%8F%8A%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE/Petrel2018-%E6%B5%8B%E4%BA%95%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%8F%8A%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE-27.png" class="" title="Petrel2018-测井数据导入及基础绘图-27"><p>boundary必须闭合才可以进行计算，需要检查边界是否闭合。</p><p>提示数据，点击ok。</p><img src="/2023/10/16/Petrel2018-%E6%B5%8B%E4%BA%95%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%8F%8A%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE/Petrel2018-%E6%B5%8B%E4%BA%95%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%8F%8A%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE-30.png" class="" title="Petrel2018-测井数据导入及基础绘图-30"><p>根据电脑速度运行</p><p>运行结束后左侧显示命名的surfacePOR，后自动成图。</p><p>4、调整参数-色标</p><img src="/2023/10/16/Petrel2018-%E6%B5%8B%E4%BA%95%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%8F%8A%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE/Petrel2018-%E6%B5%8B%E4%BA%95%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%8F%8A%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE-31.png" class="" title="Petrel2018-测井数据导入及基础绘图-31"><p>显示刻度尺：<br>右键 Color Legend → Color Legend</p><p>5、出图</p><p>点击菜单栏 HOME window 创建 map window</p><p>在map菜单栏中可以设置指南针 尺度等 调整视域大小</p><p>中间工具条可以快速调整视域缩放</p><p>出图 菜单栏map capture</p><h1 id="图件导出"><a href="#图件导出" class="headerlink" title="图件导出"></a>图件导出</h1><img src="/2023/10/16/Petrel2018-%E6%B5%8B%E4%BA%95%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%8F%8A%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE/%E5%9B%BE%E4%BB%B6%E5%AF%BC%E5%87%BA-1.png" class="" title="图件导出-1"><img src="/2023/10/16/Petrel2018-%E6%B5%8B%E4%BA%95%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%8F%8A%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE/%E5%9B%BE%E4%BB%B6%E5%AF%BC%E5%87%BA-2.png" class="" title="图件导出-2"><blockquote><p>右上角capture→export graphic可以导出<br>选择emf格式最清楚(数据较大)<br>导出emf后在本地进行裁剪，删去右下角图标<br>再导出一个png格式，方便数据传输</p></blockquote><h1 id="插值方法说明"><a href="#插值方法说明" class="headerlink" title="插值方法说明"></a>插值方法说明</h1><p>地层等厚度用Isochore interpolation，不会有负数<br>构造、埋深、孔隙度、渗透率、饱和度等用Convergent interpolation，反距离加权平均。</p><h1 id="牛眼修改方法"><a href="#牛眼修改方法" class="headerlink" title="牛眼修改方法"></a>牛眼修改方法</h1><img src="/2023/10/16/Petrel2018-%E6%B5%8B%E4%BA%95%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%8F%8A%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE/%E7%89%9B%E7%9C%BC%E4%BF%AE%E6%94%B9%E6%96%B9%E6%B3%95-1.png" class="" title="牛眼修改方法-1"><h1 id="wellpath用-Excel把每一行各导出为一个txt文本"><a href="#wellpath用-Excel把每一行各导出为一个txt文本" class="headerlink" title="wellpath用-Excel把每一行各导出为一个txt文本"></a>wellpath用-Excel把每一行各导出为一个txt文本</h1><p>excel→文件→选项→信任中心→信任中心设置→宏设置→启用所有宏</p><img src="/2023/10/16/Petrel2018-%E6%B5%8B%E4%BA%95%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%8F%8A%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE/Excel%E6%8A%8A%E6%AF%8F%E4%B8%80%E8%A1%8C%E5%90%84%E5%AF%BC%E5%87%BA%E4%B8%BA%E4%B8%80%E4%B8%AAtxt%E6%96%87%E6%9C%AC-1.png" class="" title="Excel把每一行各导出为一个txt文本-1"><p><code>alt+f11</code>调出vb编辑界面</p><img src="/2023/10/16/Petrel2018-%E6%B5%8B%E4%BA%95%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%8F%8A%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE/Excel%E6%8A%8A%E6%AF%8F%E4%B8%80%E8%A1%8C%E5%90%84%E5%AF%BC%E5%87%BA%E4%B8%BA%E4%B8%80%E4%B8%AAtxt%E6%96%87%E6%9C%AC-2.png" class="" title="Excel把每一行各导出为一个txt文本-2"><p>VB代码：</p><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Sub</span> txt()</span><br><span class="line"></span><br><span class="line"><span class="keyword">Dim</span> i, j, arr(), brr(), myRow, myCol</span><br><span class="line"></span><br><span class="line">arr = Sheet1.UsedRange</span><br><span class="line"></span><br><span class="line">myRow = UBound(arr, <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">myCol = UBound(arr, <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">For</span> i = <span class="number">1</span> <span class="keyword">To</span> myRow</span><br><span class="line"></span><br><span class="line">Open ThisWorkbook.Path &amp; <span class="string">&quot;\&quot;</span> &amp; arr(i, <span class="number">1</span>) &amp; <span class="string">&quot;.txt&quot;</span> <span class="keyword">For</span> Output <span class="keyword">As</span> #<span class="number">1</span></span><br><span class="line"></span><br><span class="line">Print #<span class="number">1</span>, <span class="keyword">Join</span>(Application.Index(arr, <span class="number">1</span>), <span class="string">&quot; &quot;</span>)</span><br><span class="line"></span><br><span class="line">Print #<span class="number">1</span>, <span class="keyword">Join</span>(Application.Index(arr, i), <span class="string">&quot; &quot;</span>)</span><br><span class="line"></span><br><span class="line">Close #<span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Next</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure><p>运行结果3</p><img src="/2023/10/16/Petrel2018-%E6%B5%8B%E4%BA%95%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%8F%8A%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE/Excel%E6%8A%8A%E6%AF%8F%E4%B8%80%E8%A1%8C%E5%90%84%E5%AF%BC%E5%87%BA%E4%B8%BA%E4%B8%80%E4%B8%AAtxt%E6%96%87%E6%9C%AC-3.png" class="" title="Excel把每一行各导出为一个txt文本-3">]]></content>
    
    
    <summary type="html">Petrel2018-测井数据导入及基础绘图</summary>
    
    
    
    <category term="石油地质" scheme="http://hibiscidai.com/categories/%E7%9F%B3%E6%B2%B9%E5%9C%B0%E8%B4%A8/"/>
    
    
    <category term="石油地质" scheme="http://hibiscidai.com/tags/%E7%9F%B3%E6%B2%B9%E5%9C%B0%E8%B4%A8/"/>
    
    <category term="Petrel" scheme="http://hibiscidai.com/tags/Petrel/"/>
    
  </entry>
  
</feed>
